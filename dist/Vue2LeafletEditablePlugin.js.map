{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Vue2LeafletEditablePlugin.js","webpack:///webpack/bootstrap fc5a58050f4a70b48c6e","webpack:///./Vue2LeafletEditablePlugin.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","L","Editable","Evented","extend","statics","FORWARD","BACKWARD","options","zIndex","polygonClass","Polygon","polylineClass","Polyline","markerClass","Marker","rectangleClass","Rectangle","circleClass","Circle","drawingCSSClass","drawingCursor","editLayer","undefined","featuresLayer","polylineEditorClass","polygonEditorClass","markerEditorClass","rectangleEditorClass","circleEditorClass","lineGuideOptions","skipMiddleMarkers","initialize","map","setOptions","_lastZIndex","createEditLayer","createFeaturesLayer","forwardLineGuide","createLineGuide","backwardLineGuide","fireAndForward","type","e","editTools","fire","dashArray","weight","interactive","polyline","createVertexIcon","Browser","mobile","touch","TouchVertexIcon","VertexIcon","LayerGroup","addTo","moveForwardLineGuide","latlng","_latlngs","length","_bounds","redraw","moveBackwardLineGuide","anchorForwardLineGuide","anchorBackwardLineGuide","attachForwardLineGuide","addLayer","attachBackwardLineGuide","detachForwardLineGuide","setLatLngs","removeLayer","detachBackwardLineGuide","blockEvents","_oldTargets","_targets","unblockEvents","registerForDrawing","editor","_drawingEditor","unregisterForDrawing","reset","on","onDrawingMouseMove","onMousedown","onMouseup","DomUtil","addClass","_container","defaultMapCursor","style","cursor","removeClass","off","_drawing","cancelDrawing","originalEvent","which","_mouseDown","onDrawingMouseDown","mouseDown","onDrawingMouseUp","origin","point","clientX","clientY","distance","distanceTo","Math","abs","window","devicePixelRatio","onDrawingClick","drawing","stopDrawing","commitDrawing","connectCreatedToMap","layer","startPolyline","line","createPolyline","enableEdit","newShape","startPolygon","polygon","createPolygon","startMarker","getCenter","clone","marker","createMarker","startDrawing","startRectangle","corner","latLng","bounds","LatLngBounds","rectangle","createRectangle","startCircle","circle","createCircle","startHole","newHole","createLayer","klass","latlngs","Util","editOptions","makeCancellable","cancel","_cancelled","Map","mergeOptions","editToolsClass","editable","addInitHook","whenReady","DivIcon","iconSize","Point","VertexMarker","draggable","className","icon","tools","__vertex","setZIndexOffset","onAdd","onDrag","onDragStart","onDragEnd","onClick","onContextMenu","onMouseDown","onMouseOver","onMouseOut","addMiddleMarkers","onRemove","middleMarker","delete","vertex","onVertexMarkerDrag","iconPos","getPosition","_icon","_map","layerPointToLatLng","update","_latlng","refresh","updateLatLng","next","getNext","onVertexMarkerDragStart","onVertexMarkerDragEnd","onVertexMarkerClick","DomEvent","stop","onVertexMarkerContextMenu","onVertexMarkerMouseDown","onVertexMarkerMouseOver","onVertexMarkerMouseOut","splice","getIndex","onVertexDeleted","deleteShape","resetMiddleMarker","indexOf","getLastIndex","getPrevious","index","previousIndex","CLOSED","previous","nextIndex","addMiddleMarker","hasMiddleMarkers","split","splitShape","continue","continueBackward","continueForward","vertexMarkerClass","MiddleMarker","opacity","left","right","computeLatLng","_opacity","setVisibility","leftPoint","latLngToContainerPoint","rightPoint","size","x","hide","show","setOpacity","setLatLng","y","containerPointToLatLng","onMiddleMarkerMouseDown","addVertexMarker","onNewVertex","parent","parentNode","removeChild","appendChild","_initIcon","_initInteraction","Draggable","_dragging","dragging","_draggable","_onDown","middleMarkerClass","BaseEditor","Handler","feature","addHooks","isConnected","onFeatureAdd","once","onEnable","_getEvents","removeHooks","disable","clearLayers","onDisable","enable","onEditing","onStartDrawing","onEndDrawing","onCancelDrawing","onCommitDrawing","endDrawing","connect","processDrawingClick","hasLayer","onMove","dragstart","drag","dragend","remove","MarkerEditor","PathEditor","MIN_VERTEX","initVertexMarkers","enabled","getLatLngs","isFlat","addVertexMarkers","refreshVertexMarkers","getDefaultLatLngs","commit","ctrlKey","onVertexMarkerCtrlClick","altKey","onVertexMarkerAltClick","shiftKey","onVertexMarkerShiftClick","metaKey","onVertexMarkerMetaKeyClick","_drawnLatLngs","onVertexRawMarkerClick","vertexCanBeDeleted","extendBounds","setDrawnLatLngs","startDrawingForward","addLatLng","push","unshift","newPointForward","newPointBackward","console","error","removeLatLng","pop","shape","addNewEmptyShape","_deleteShape","ensureNotFlat","self","spliceDelete","Number","MAX_VALUE","deleteShapeAt","shapeAt","appendShape","insertShape","prependShape","ensureMulti","formatShape","_enabled","PolylineEditor","startDrawingBackward","LatLng","shapeIndex","first","slice","second","lat","lng","alt","PolygonEditor","addNewEmptyHole","holes","parentShape","RectangleEditor","oppositeIndex","opposite","updateBounds","updateLatLngs","_simulated","_onUp","newLatlngs","_boundsToLatLngs","CircleEditor","_resizeLatLng","computeResizeLatLng","delta","_radius","_mRadius","cos","PI","project","unproject","updateResizeLatLng","resize","radius","setRadius","EditableMixin","createEditor","Error","editorClass","getEditorClass","editEnabled","disableEdit","toggleEdit","_onEditableAdd","PolylineMixin","isInLatLngs","k","len","part","w","_clickTolerance","_projectLatlngs","_pxBounds","latLngToLayerPoint","contains","LineUtil","pointToSegmentDistance","PolygonMixin","l1","l2","j","len2","inside","idx","MarkerMixin","RectangleMixin","CircleMixin","keepEditable","_flat","include"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,0BAAAD,IAEAD,EAAA,0BAAAC,MACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,GAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAf,EAAAgB,EAAAC,GACAX,EAAAY,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAK,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,IAGAxB,IAAAyB,EAAA,KDgBM,SAAU9B,EAAQD,IEhFxB,SAAcgC,GA8BVA,EAAEC,SAAWD,EAAEE,QAAQC,QAEnBC,SACIC,QAAS,EACTC,UAAW,GAGfC,SAKIC,OAAQ,IAIRC,aAAcT,EAAEU,QAIhBC,cAAeX,EAAEY,SAIjBC,YAAab,EAAEc,OAIfC,eAAgBf,EAAEgB,UAIlBC,YAAajB,EAAEkB,OAIfC,gBAAiB,2BAIjBC,cAAe,YAIfC,cAAWC,GAIXC,kBAAeD,GAIfE,wBAAqBF,GAIrBG,uBAAoBH,GAIpBI,sBAAmBJ,GAInBK,yBAAsBL,GAItBM,sBAAmBN,GAInBO,oBAIAC,mBAAmB,GAIvBC,WAAY,SAAUC,EAAKzB,GACvBP,EAAEiC,WAAW7D,KAAMmC,GACnBnC,KAAK8D,YAAc9D,KAAKmC,QAAQC,OAChCpC,KAAK4D,IAAMA,EACX5D,KAAKiD,UAAYjD,KAAK+D,kBACtB/D,KAAKmD,cAAgBnD,KAAKgE,sBAC1BhE,KAAKiE,iBAAmBjE,KAAKkE,kBAC7BlE,KAAKmE,kBAAoBnE,KAAKkE,mBAGlCE,eAAgB,SAAUC,EAAMC,GAC5BA,EAAIA,MACJA,EAAEC,UAAYvE,KACdA,KAAKwE,KAAKH,EAAMC,GAChBtE,KAAK4D,IAAIY,KAAKH,EAAMC,IAGxBJ,gBAAiB,WACb,GAAI/B,GAAUP,EAAEG,QAAQ0C,UAAW,OAAQC,OAAQ,EAAGC,aAAa,GAAQ3E,KAAKmC,QAAQsB,iBACxF,OAAO7B,GAAEgD,YAAazC,IAG1B0C,iBAAkB,SAAU1C,GACxB,MAAOP,GAAEkD,QAAQC,QAAUnD,EAAEkD,QAAQE,MAAQ,GAAIpD,GAAEC,SAASoD,gBAAgB9C,GAAW,GAAIP,GAAEC,SAASqD,WAAW/C,IAGrH4B,gBAAiB,WACb,MAAO/D,MAAKmC,QAAQc,YAAa,GAAIrB,GAAEuD,YAAaC,MAAMpF,KAAK4D,MAGnEI,oBAAqB,WACjB,MAAOhE,MAAKmC,QAAQgB,gBAAiB,GAAIvB,GAAEuD,YAAaC,MAAMpF,KAAK4D,MAGvEyB,qBAAsB,SAAUC,GACxBtF,KAAKiE,iBAAiBsB,SAASC,SAC/BxF,KAAKiE,iBAAiBsB,SAAS,GAAKD,EACpCtF,KAAKiE,iBAAiBwB,QAAQ1D,OAAOuD,GACrCtF,KAAKiE,iBAAiByB,WAI9BC,sBAAuB,SAAUL,GACzBtF,KAAKmE,kBAAkBoB,SAASC,SAChCxF,KAAKmE,kBAAkBoB,SAAS,GAAKD,EACrCtF,KAAKmE,kBAAkBsB,QAAQ1D,OAAOuD,GACtCtF,KAAKmE,kBAAkBuB,WAI/BE,uBAAwB,SAAUN,GAC9BtF,KAAKiE,iBAAiBsB,SAAS,GAAKD,EACpCtF,KAAKiE,iBAAiBwB,QAAQ1D,OAAOuD,GACrCtF,KAAKiE,iBAAiByB,UAG1BG,wBAAyB,SAAUP,GAC/BtF,KAAKmE,kBAAkBoB,SAAS,GAAKD,EACrCtF,KAAKmE,kBAAkBsB,QAAQ1D,OAAOuD,GACtCtF,KAAKmE,kBAAkBuB,UAG3BI,uBAAwB,WACpB9F,KAAKiD,UAAU8C,SAAS/F,KAAKiE,mBAGjC+B,wBAAyB,WACrBhG,KAAKiD,UAAU8C,SAAS/F,KAAKmE,oBAGjC8B,uBAAwB,WACpBjG,KAAKiE,iBAAiBiC,eACtBlG,KAAKiD,UAAUkD,YAAYnG,KAAKiE,mBAGpCmC,wBAAyB,WACrBpG,KAAKmE,kBAAkB+B,eACvBlG,KAAKiD,UAAUkD,YAAYnG,KAAKmE,oBAGpCkC,YAAa,WAEJrG,KAAKsG,cACNtG,KAAKsG,YAActG,KAAK4D,IAAI2C,SAC5BvG,KAAK4D,IAAI2C,cAIjBC,cAAe,WACPxG,KAAKsG,cAELtG,KAAK4D,IAAI2C,SAAW3E,EAAEG,OAAO/B,KAAK4D,IAAI2C,SAAUvG,KAAKsG,mBAC9CtG,MAAKsG,cAIpBG,mBAAoB,SAAUC,GACtB1G,KAAK2G,gBAAgB3G,KAAK4G,qBAAqB5G,KAAK2G,gBACxD3G,KAAKqG,cACLK,EAAOG,QACP7G,KAAK2G,eAAiBD,EACtB1G,KAAK4D,IAAIkD,GAAG,sBAAuBJ,EAAOK,mBAAoBL,GAC9D1G,KAAK4D,IAAIkD,GAAG,YAAa9G,KAAKgH,YAAahH,MAC3CA,KAAK4D,IAAIkD,GAAG,UAAW9G,KAAKiH,UAAWjH,MACvC4B,EAAEsF,QAAQC,SAASnH,KAAK4D,IAAIwD,WAAYpH,KAAKmC,QAAQY,iBACrD/C,KAAKqH,iBAAmBrH,KAAK4D,IAAIwD,WAAWE,MAAMC,OAClDvH,KAAK4D,IAAIwD,WAAWE,MAAMC,OAASvH,KAAKmC,QAAQa,eAGpD4D,qBAAsB,SAAUF,GAC5B1G,KAAKwG,gBACL5E,EAAEsF,QAAQM,YAAYxH,KAAK4D,IAAIwD,WAAYpH,KAAKmC,QAAQY,iBACxD/C,KAAK4D,IAAIwD,WAAWE,MAAMC,OAASvH,KAAKqH,kBACxCX,EAASA,GAAU1G,KAAK2G,kBAExB3G,KAAK4D,IAAI6D,IAAI,sBAAuBf,EAAOK,mBAAoBL,GAC/D1G,KAAK4D,IAAI6D,IAAI,YAAazH,KAAKgH,YAAahH,MAC5CA,KAAK4D,IAAI6D,IAAI,UAAWzH,KAAKiH,UAAWjH,MACpC0G,IAAW1G,KAAK2G,uBACb3G,MAAK2G,eACRD,EAAOgB,UAAUhB,EAAOiB,mBAGhCX,YAAa,SAAU1C,GACU,GAAzBA,EAAEsD,cAAcC,QACpB7H,KAAK8H,WAAaxD,EAClBtE,KAAK2G,eAAeoB,mBAAmBzD,KAG3C2C,UAAW,SAAU3C,GACjB,GAAItE,KAAK8H,WAAY,CACjB,GAAIpB,GAAS1G,KAAK2G,eACdqB,EAAYhI,KAAK8H,UAGrB,IAFA9H,KAAK8H,WAAa,KAClBpB,EAAOuB,iBAAiB3D,GACpBtE,KAAK2G,iBAAmBD,EAAQ,MACpC,IAAIwB,GAAStG,EAAEuG,MAAMH,EAAUJ,cAAcQ,QAASJ,EAAUJ,cAAcS,SAC1EC,EAAW1G,EAAEuG,MAAM7D,EAAEsD,cAAcQ,QAAS9D,EAAEsD,cAAcS,SAASE,WAAWL,EAChFM,MAAKC,IAAIH,GAAY,GAAKI,OAAOC,kBAAoB,IAAI3I,KAAK2G,eAAeiC,eAAetE,KAYxGuE,QAAS,WACL,MAAO7I,MAAK2G,gBAAkB3G,KAAK2G,eAAekC,WAKtDC,YAAa,WACT9I,KAAK4G,wBAKTmC,cAAe,SAAUzE,GAChBtE,KAAK2G,gBACV3G,KAAK2G,eAAeoC,cAAczE,IAGtC0E,oBAAqB,SAAUC,GAC3B,MAAOjJ,MAAKmD,cAAc4C,SAASkD,IAMvCC,cAAe,SAAU5D,EAAQnD,GAC7B,GAAIgH,GAAOnJ,KAAKoJ,kBAAmBjH,EAEnC,OADAgH,GAAKE,WAAWrJ,KAAK4D,KAAK0F,SAAShE,GAC5B6D,GAMXI,aAAc,SAAUjE,EAAQnD,GAC5B,GAAIqH,GAAUxJ,KAAKyJ,iBAAkBtH,EAErC,OADAqH,GAAQH,WAAWrJ,KAAK4D,KAAK0F,SAAShE,GAC/BkE,GAOXE,YAAa,SAAUpE,EAAQnD,GAC3BmD,EAASA,GAAUtF,KAAK4D,IAAI+F,YAAYC,OACxC,IAAIC,GAAS7J,KAAK8J,aAAaxE,EAAQnD,EAEvC,OADA0H,GAAOR,WAAWrJ,KAAK4D,KAAKmG,eACrBF,GAMXG,eAAgB,SAAS1E,EAAQnD,GAC7B,GAAI8H,GAAS3E,GAAU1D,EAAEsI,QAAQ,EAAG,IAChCC,EAAS,GAAIvI,GAAEwI,aAAaH,EAAQA,GACpCI,EAAYrK,KAAKsK,gBAAgBH,EAAQhI,EAE7C,OADAkI,GAAUhB,WAAWrJ,KAAK4D,KAAKmG,eACxBM,GAMXE,YAAa,SAAUjF,EAAQnD,GAC3BmD,EAASA,GAAUtF,KAAK4D,IAAI+F,YAAYC,OACxC,IAAIY,GAASxK,KAAKyK,aAAanF,EAAQnD,EAEvC,OADAqI,GAAOnB,WAAWrJ,KAAK4D,KAAKmG,eACrBS,GAGXE,UAAW,SAAUhE,EAAQpB,GACzBoB,EAAOiE,QAAQrF,IAGnBsF,YAAa,SAAUC,EAAOC,EAAS3I,GACnCA,EAAUP,EAAEmJ,KAAKhJ,QAAQiJ,aAAczG,UAAWvE,OAAQmC,EAC1D,IAAI8G,GAAQ,GAAI4B,GAAMC,EAAS3I,EAK/B,OADAnC,MAAKoE,eAAe,oBAAqB6E,MAAOA,IACzCA,GAGXG,eAAgB,SAAU0B,EAAS3I,GAC/B,MAAOnC,MAAK4K,YAAYzI,GAAWA,EAAQI,eAAiBvC,KAAKmC,QAAQI,cAAeuI,EAAS3I,IAGrGsH,cAAe,SAAUqB,EAAS3I,GAC9B,MAAOnC,MAAK4K,YAAYzI,GAAWA,EAAQE,cAAgBrC,KAAKmC,QAAQE,aAAcyI,EAAS3I,IAGnG2H,aAAc,SAAUxE,EAAQnD,GAC5B,MAAOnC,MAAK4K,YAAYzI,GAAWA,EAAQM,aAAezC,KAAKmC,QAAQM,YAAa6C,EAAQnD,IAGhGmI,gBAAiB,SAAUH,EAAQhI,GAC/B,MAAOnC,MAAK4K,YAAYzI,GAAWA,EAAQQ,gBAAkB3C,KAAKmC,QAAQQ,eAAgBwH,EAAQhI,IAGtGsI,aAAc,SAAUnF,EAAQnD,GAC5B,MAAOnC,MAAK4K,YAAYzI,GAAWA,EAAQU,aAAe7C,KAAKmC,QAAQU,YAAayC,EAAQnD,MAKpGP,EAAEG,OAAOH,EAAEC,UAEPoJ,gBAAiB,SAAU3G,GACvBA,EAAE4G,OAAS,WACP5G,EAAE6G,YAAa,MAoB3BvJ,EAAEwJ,IAAIC,cAMFC,eAAgB1J,EAAEC,SAIlB0J,UAAU,EAIVP,iBAIJpJ,EAAEwJ,IAAII,YAAY,WAEdxL,KAAKyL,UAAU,WACPzL,KAAKmC,QAAQoJ,WACbvL,KAAKuE,UAAY,GAAIvE,MAAKmC,QAAQmJ,eAAetL,KAAMA,KAAKmC,QAAQ6I,kBAMhFpJ,EAAEC,SAASqD,WAAatD,EAAE8J,QAAQ3J,QAE9BI,SACIwJ,SAAU,GAAI/J,GAAEgK,MAAM,EAAG,MAKjChK,EAAEC,SAASoD,gBAAkBrD,EAAEC,SAASqD,WAAWnD,QAE/CI,SACIwJ,SAAU,GAAI/J,GAAEgK,MAAM,GAAI,OAOlChK,EAAEC,SAASgK,aAAejK,EAAEc,OAAOX,QAE/BI,SACI2J,WAAW,EACXC,UAAW,wCAQfpI,WAAY,SAAU2B,EAAQwF,EAASpE,EAAQvE,GAG3CnC,KAAKsF,OAASA,EACdtF,KAAK8K,QAAUA,EACf9K,KAAK0G,OAASA,EACd9E,EAAEc,OAAOlB,UAAUmC,WAAWpD,KAAKP,KAAMsF,EAAQnD,GACjDnC,KAAKmC,QAAQ6J,KAAOhM,KAAK0G,OAAOuF,MAAMpH,kBAAkBkH,UAAW/L,KAAKmC,QAAQ4J,YAChF/L,KAAKsF,OAAO4G,SAAWlM,KACvBA,KAAK0G,OAAOzD,UAAU8C,SAAS/F,MAC/BA,KAAKmM,gBAAgBzF,EAAOuF,MAAMnI,YAAc,IAGpDsI,MAAO,SAAUxI,GACbhC,EAAEc,OAAOlB,UAAU4K,MAAM7L,KAAKP,KAAM4D,GACpC5D,KAAK8G,GAAG,OAAQ9G,KAAKqM,QACrBrM,KAAK8G,GAAG,YAAa9G,KAAKsM,aAC1BtM,KAAK8G,GAAG,UAAW9G,KAAKuM,WACxBvM,KAAK8G,GAAG,UAAW9G,KAAKiH,WACxBjH,KAAK8G,GAAG,QAAS9G,KAAKwM,SACtBxM,KAAK8G,GAAG,cAAe9G,KAAKyM,eAC5BzM,KAAK8G,GAAG,uBAAwB9G,KAAK0M,aACrC1M,KAAK8G,GAAG,YAAa9G,KAAK2M,aAC1B3M,KAAK8G,GAAG,WAAY9G,KAAK4M,YACzB5M,KAAK6M,oBAGTC,SAAU,SAAUlJ,GACZ5D,KAAK+M,cAAc/M,KAAK+M,aAAaC,eAClChN,MAAKsF,OAAO4G,SACnBlM,KAAKyH,IAAI,OAAQzH,KAAKqM,QACtBrM,KAAKyH,IAAI,YAAazH,KAAKsM,aAC3BtM,KAAKyH,IAAI,UAAWzH,KAAKuM,WACzBvM,KAAKyH,IAAI,UAAWzH,KAAKiH,WACzBjH,KAAKyH,IAAI,QAASzH,KAAKwM,SACvBxM,KAAKyH,IAAI,cAAezH,KAAKyM,eAC7BzM,KAAKyH,IAAI,uBAAwBzH,KAAK0M,aACtC1M,KAAKyH,IAAI,YAAazH,KAAK2M,aAC3B3M,KAAKyH,IAAI,WAAYzH,KAAK4M,YAC1BhL,EAAEc,OAAOlB,UAAUsL,SAASvM,KAAKP,KAAM4D,IAG3CyI,OAAQ,SAAU/H,GACdA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAOwG,mBAAmB5I,EAC/B,IAAI6I,GAAUvL,EAAEsF,QAAQkG,YAAYpN,KAAKqN,OACrC/H,EAAStF,KAAKsN,KAAKC,mBAAmBJ,EAC1CnN,MAAKsF,OAAOkI,OAAOlI,GACnBtF,KAAKyN,QAAUzN,KAAKsF,OACpBtF,KAAK0G,OAAOgH,UACR1N,KAAK+M,cAAc/M,KAAK+M,aAAaY,cACzC,IAAIC,GAAO5N,KAAK6N,SACZD,IAAQA,EAAKb,cAAca,EAAKb,aAAaY,gBAGrDrB,YAAa,SAAUhI,GACnBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAOoH,wBAAwBxJ,IAGxCiI,UAAW,SAAUjI,GACjBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAOqH,sBAAsBzJ,IAGtCkI,QAAS,SAAUlI,GACfA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAOsH,oBAAoB1J,IAGpC2C,UAAW,SAAU3C,GACjB1C,EAAEqM,SAASC,KAAK5J,GAChBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAO9C,IAAIY,KAAK,UAAWF,IAGpCmI,cAAe,SAAUnI,GACrBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAOyH,0BAA0B7J,IAG1CoI,YAAa,SAAUpI,GACnBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAO0H,wBAAwB9J,IAGxCqI,YAAa,SAAUrI,GACnBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAO2H,wBAAwB/J,IAGxCsI,WAAY,SAAUtI,GAClBA,EAAE2I,OAASjN,KACXA,KAAK0G,OAAO4H,uBAAuBhK,IAKvC0I,OAAQ,WACJ,GAAIY,GAAO5N,KAAK6N,SAChB7N,MAAK8K,QAAQyD,OAAOvO,KAAKwO,WAAY,GACrCxO,KAAK0G,OAAOzD,UAAUkD,YAAYnG,MAClCA,KAAK0G,OAAO+H,iBAAiBnJ,OAAQtF,KAAKsF,OAAQ2H,OAAQjN,OACrDA,KAAK8K,QAAQtF,QAAQxF,KAAK0G,OAAOgI,YAAY1O,KAAK8K,SACnD8C,GAAMA,EAAKe,oBACf3O,KAAK0G,OAAOgH,WAKhBc,SAAU,WACN,MAAOxO,MAAK8K,QAAQ8D,QAAQ5O,KAAKsF,SAKrCuJ,aAAc,WACV,MAAO7O,MAAK8K,QAAQtF,OAAS,GAKjCsJ,YAAa,WACT,KAAI9O,KAAK8K,QAAQtF,OAAS,GAA1B,CACA,GAAIuJ,GAAQ/O,KAAKwO,WACbQ,EAAgBD,EAAQ,CACd,KAAVA,GAAe/O,KAAK0G,OAAOuI,SAAQD,EAAgBhP,KAAK6O,eAC5D,IAAIK,GAAWlP,KAAK8K,QAAQkE,EAC5B,OAAIE,GAAiBA,EAAShD,aAA9B,KAKJ2B,QAAS,WACL,KAAI7N,KAAK8K,QAAQtF,OAAS,GAA1B,CACA,GAAIuJ,GAAQ/O,KAAKwO,WACbW,EAAYJ,EAAQ,CACpBA,KAAU/O,KAAK6O,gBAAkB7O,KAAK0G,OAAOuI,SAAQE,EAAY,EACrE,IAAIvB,GAAO5N,KAAK8K,QAAQqE,EACxB,OAAIvB,GAAaA,EAAK1B,aAAtB,KAGJkD,gBAAiB,SAAUF,GAClBlP,KAAK0G,OAAO2I,qBACjBH,EAAWA,GAAYlP,KAAK8O,iBACX9O,KAAK+M,eAAc/M,KAAK+M,aAAe/M,KAAK0G,OAAO0I,gBAAgBF,EAAUlP,KAAMA,KAAK8K,QAAS9K,KAAK0G,UAG3HmG,iBAAkB,WACd,GAAK7M,KAAK0G,OAAO2I,mBAAjB,CACA,GAAIH,GAAWlP,KAAK8O,aAChBI,IAAUlP,KAAKoP,gBAAgBF,EACnC,IAAItB,GAAO5N,KAAK6N,SACZD,IAAMA,EAAKe,sBAGnBA,kBAAmB,WACX3O,KAAK+M,cAAc/M,KAAK+M,aAAaC,SACzChN,KAAKoP,mBAKTE,MAAO,WACEtP,KAAK0G,OAAO6I,YACjBvP,KAAK0G,OAAO6I,WAAWvP,KAAK8K,QAAS9K,KAAKwO,aAK9CgB,SAAU,WACN,GAAKxP,KAAK0G,OAAO+I,iBAAjB,CACA,GAAIV,GAAQ/O,KAAKwO,UACH,KAAVO,EAAa/O,KAAK0G,OAAO+I,iBAAiBzP,KAAK8K,SAC1CiE,IAAU/O,KAAK6O,gBAAgB7O,KAAK0G,OAAOgJ,gBAAgB1P,KAAK8K,aAKjFlJ,EAAEC,SAASwJ,cAKPsE,kBAAmB/N,EAAEC,SAASgK,eAIlCjK,EAAEC,SAAS+N,aAAehO,EAAEc,OAAOX,QAE/BI,SACI0N,QAAS,GACT9D,UAAW,uCACXD,WAAW,GAGfnI,WAAY,SAAUmM,EAAMC,EAAOjF,EAASpE,EAAQvE,GAChDnC,KAAK8P,KAAOA,EACZ9P,KAAK+P,MAAQA,EACb/P,KAAK0G,OAASA,EACd1G,KAAK8K,QAAUA,EACflJ,EAAEc,OAAOlB,UAAUmC,WAAWpD,KAAKP,KAAMA,KAAKgQ,gBAAiB7N,GAC/DnC,KAAKiQ,SAAWjQ,KAAKmC,QAAQ0N,QAC7B7P,KAAKmC,QAAQ6J,KAAOhM,KAAK0G,OAAOuF,MAAMpH,kBAAkBkH,UAAW/L,KAAKmC,QAAQ4J,YAChF/L,KAAK0G,OAAOzD,UAAU8C,SAAS/F,MAC/BA,KAAKkQ,iBAGTA,cAAe,WACX,GAAIC,GAAYnQ,KAAKsN,KAAK8C,uBAAuBpQ,KAAK8P,KAAKxK,QACvD+K,EAAarQ,KAAKsN,KAAK8C,uBAAuBpQ,KAAK+P,MAAMzK,QACzDgL,EAAO1O,EAAEuG,MAAMnI,KAAKmC,QAAQ6J,KAAK7J,QAAQwJ,SACzCwE,GAAU5H,WAAW8H,GAAuB,EAATC,EAAKC,EAAOvQ,KAAKwQ,OACnDxQ,KAAKyQ,QAGdA,KAAM,WACFzQ,KAAK0Q,WAAW1Q,KAAKiQ,WAGzBO,KAAM,WACFxQ,KAAK0Q,WAAW,IAGpB/C,aAAc,WACV3N,KAAK2Q,UAAU3Q,KAAKgQ,iBACpBhQ,KAAKkQ,iBAGTF,cAAe,WACX,GAAIG,GAAYnQ,KAAK0G,OAAO9C,IAAIwM,uBAAuBpQ,KAAK8P,KAAKxK,QAC7D+K,EAAarQ,KAAK0G,OAAO9C,IAAIwM,uBAAuBpQ,KAAK+P,MAAMzK,QAC/DsL,GAAKT,EAAUS,EAAIP,EAAWO,GAAK,EACnCL,GAAKJ,EAAUI,EAAIF,EAAWE,GAAK,CACvC,OAAOvQ,MAAK0G,OAAO9C,IAAIiN,wBAAwBN,EAAGK,KAGtDxE,MAAO,SAAUxI,GACbhC,EAAEc,OAAOlB,UAAU4K,MAAM7L,KAAKP,KAAM4D,GACpChC,EAAEqM,SAASnH,GAAG9G,KAAKqN,MAAO,uBAAwBrN,KAAK0M,YAAa1M,MACpE4D,EAAIkD,GAAG,UAAW9G,KAAKkQ,cAAelQ,OAG1C8M,SAAU,SAAUlJ,SACT5D,MAAK+P,MAAMhD,aAClBnL,EAAEqM,SAASxG,IAAIzH,KAAKqN,MAAO,uBAAwBrN,KAAK0M,YAAa1M,MACrE4D,EAAI6D,IAAI,UAAWzH,KAAKkQ,cAAelQ,MACvC4B,EAAEc,OAAOlB,UAAUsL,SAASvM,KAAKP,KAAM4D,IAG3C8I,YAAa,SAAUpI,GACnB,GAAI6I,GAAUvL,EAAEsF,QAAQkG,YAAYpN,KAAKqN,MAMzC,IAJA/I,GACIsD,cAAetD,EACfgB,OAHStF,KAAK0G,OAAO9C,IAAI2J,mBAAmBJ,IAKnB,IAAzBnN,KAAKmC,QAAQ0N,UACjBjO,EAAEC,SAASoJ,gBAAgB3G,GAC3BtE,KAAK0G,OAAOoK,wBAAwBxM,IAChCA,EAAE6G,YAAN,CACAnL,KAAK8K,QAAQyD,OAAOvO,KAAK+O,QAAS,EAAGzK,EAAEgB,QACvCtF,KAAK0G,OAAOgH,SACZ,IAAI1B,GAAOhM,KAAKqN,MACZxD,EAAS7J,KAAK0G,OAAOqK,gBAAgBzM,EAAEgB,OAAQtF,KAAK8K,QACxD9K,MAAK0G,OAAOsK,YAAYnH,EAExB,IAAIoH,GAASpH,EAAOwD,MAAM6D,UAC1BD,GAAOE,YAAYtH,EAAOwD,OAC1BxD,EAAOwD,MAAQrB,EACfiF,EAAOG,YAAYvH,EAAOwD,OAC1BxD,EAAOwH,YACPxH,EAAOyH,mBACPzH,EAAO6G,WAAW,GAGlB9O,EAAE2P,UAAUC,WAAY,EACxB3H,EAAO4H,SAASC,WAAWC,QAAQrN,EAAEsD,eACrC5H,KAAKgN,WAGTA,OAAQ,WACJhN,KAAK0G,OAAOzD,UAAUkD,YAAYnG,OAGtC+O,MAAO,WACH,MAAO/O,MAAK8K,QAAQ8D,QAAQ5O,KAAK+P,MAAMzK,WAK/C1D,EAAEC,SAASwJ,cAKPuG,kBAAmBhQ,EAAEC,SAAS+N,eAOlChO,EAAEC,SAASgQ,WAAajQ,EAAEkQ,QAAQ/P,QAE9B4B,WAAY,SAAUC,EAAKmO,EAAS5P,GAChCP,EAAEiC,WAAW7D,KAAMmC,GACnBnC,KAAK4D,IAAMA,EACX5D,KAAK+R,QAAUA,EACf/R,KAAK+R,QAAQrL,OAAS1G,KACtBA,KAAKiD,UAAY,GAAIrB,GAAEuD,WACvBnF,KAAKiM,MAAQjM,KAAKmC,QAAQoC,WAAaX,EAAIW,WAK/CyN,SAAU,WACFhS,KAAKiS,cAAejS,KAAKkS,eACxBlS,KAAK+R,QAAQI,KAAK,MAAOnS,KAAKkS,aAAclS,MACjDA,KAAKoS,WACLpS,KAAK+R,QAAQjL,GAAG9G,KAAKqS,aAAcrS,OAKvCsS,YAAa,WACTtS,KAAK+R,QAAQtK,IAAIzH,KAAKqS,aAAcrS,MAChCA,KAAK+R,QAAQN,UAAUzR,KAAK+R,QAAQN,SAASc,UACjDvS,KAAKiD,UAAUuP,cACfxS,KAAKiM,MAAMhJ,UAAUkD,YAAYnG,KAAKiD,WACtCjD,KAAKyS,YACDzS,KAAK0H,UAAU1H,KAAK2H,iBAK5BkB,QAAS,WACL,QAAS7I,KAAK0H,UAGlBb,MAAO,aAEPqL,aAAc,WACVlS,KAAKiM,MAAMhJ,UAAU8C,SAAS/F,KAAKiD,WAC/BjD,KAAK+R,QAAQN,UAAUzR,KAAK+R,QAAQN,SAASiB,UAGrDrD,iBAAkB,WACd,OAAQrP,KAAKmC,QAAQuB,oBAAsB1D,KAAKiM,MAAM9J,QAAQuB,mBAGlEU,eAAgB,SAAUC,EAAMC,GAC5BA,EAAIA,MACJA,EAAE2E,MAAQjJ,KAAK+R,QACf/R,KAAK+R,QAAQvN,KAAKH,EAAMC,GACxBtE,KAAKiM,MAAM7H,eAAeC,EAAMC,IAGpC8N,SAAU,WAINpS,KAAKoE,eAAe,oBAGxBqO,UAAW,WAIPzS,KAAKoE,eAAe,qBAGxBuO,UAAW,WAIP3S,KAAKoE,eAAe,qBAGxBwO,eAAgB,WAKZ5S,KAAKoE,eAAe,2BAGxByO,aAAc,WAKV7S,KAAKoE,eAAe,yBAGxB0O,gBAAiB,WAKb9S,KAAKoE,eAAe,4BAGxB2O,gBAAiB,SAAUzO,GAKvBtE,KAAKoE,eAAe,0BAA2BE,IAGnDyD,mBAAoB,SAAUzD,GAK1BtE,KAAKoE,eAAe,6BAA8BE,IAGtD2D,iBAAkB,SAAU3D,GAKxBtE,KAAKoE,eAAe,2BAA4BE,IAGpDyF,aAAc,WACL/J,KAAK0H,WAAU1H,KAAK0H,SAAW9F,EAAEC,SAASI,SAC/CjC,KAAKiM,MAAMxF,mBAAmBzG,MAC9BA,KAAK4S,kBAGT7J,cAAe,SAAUzE,GACrBtE,KAAK+S,gBAAgBzO,GACrBtE,KAAKgT,cAGTrL,cAAe,WAIX/F,EAAE2P,UAAUC,WAAY,EACxBxR,KAAK8S,kBACL9S,KAAKgT,cAGTA,WAAY,WACRhT,KAAK0H,UAAW,EAChB1H,KAAKiM,MAAMrF,qBAAqB5G,MAChCA,KAAK6S,gBAGTjK,eAAgB,SAAUtE,GACjBtE,KAAK6I,YACVjH,EAAEC,SAASoJ,gBAAgB3G,GAK3BtE,KAAKoE,eAAe,yBAA0BE,GAC1CA,EAAE6G,aACDnL,KAAKiS,eAAejS,KAAKiT,QAAQ3O,GACtCtE,KAAKkT,oBAAoB5O,MAG7B2N,YAAa,WACT,MAAOjS,MAAK4D,IAAIuP,SAASnT,KAAK+R,UAGlCkB,QAAS,WACLjT,KAAKiM,MAAMjD,oBAAoBhJ,KAAK+R,SACpC/R,KAAKiM,MAAMhJ,UAAU8C,SAAS/F,KAAKiD,YAGvCmQ,OAAQ,SAAU9O,GAKdtE,KAAKoE,eAAe,wBAAyBE,IAGjDyC,mBAAoB,SAAUzC,GAC1BtE,KAAKoT,OAAO9O,IAGhB+N,WAAY,WACR,OACIgB,UAAWrT,KAAKsM,YAChBgH,KAAMtT,KAAKqM,OACXkH,QAASvT,KAAKuM,UACdiH,OAAQxT,KAAKuS,UAIrBjG,YAAa,SAAUhI,GACnBtE,KAAK2S,YAIL3S,KAAKoE,eAAe,qBAAsBE,IAG9C+H,OAAQ,SAAU/H,GACdtE,KAAKoT,OAAO9O,GAIZtE,KAAKoE,eAAe,gBAAiBE,IAGzCiI,UAAW,SAAUjI,GAIjBtE,KAAKoE,eAAe,mBAAoBE,MAQhD1C,EAAEC,SAAS4R,aAAe7R,EAAEC,SAASgQ,WAAW9P,QAE5CgF,mBAAoB,SAAUzC,GAC1B1C,EAAEC,SAASgQ,WAAWrQ,UAAUuF,mBAAmBxG,KAAKP,KAAMsE,GAC1DtE,KAAK0H,UAAU1H,KAAK+R,QAAQpB,UAAUrM,EAAEgB,SAGhD4N,oBAAqB,SAAU5O,GAK3BtE,KAAKoE,eAAe,2BAA4BE,GAChDtE,KAAK+I,cAAczE,IAGvB2O,QAAS,SAAU3O,GAGXA,IAAGtE,KAAK+R,QAAQtE,QAAUnJ,EAAEgB,QAChC1D,EAAEC,SAASgQ,WAAWrQ,UAAUyR,QAAQ1S,KAAKP,KAAMsE,MAQ3D1C,EAAEC,SAAS6R,WAAa9R,EAAEC,SAASgQ,WAAW9P,QAE1CkN,QAAQ,EACR0E,WAAY,EAEZ3B,SAAU,WAGN,MAFApQ,GAAEC,SAASgQ,WAAWrQ,UAAUwQ,SAASzR,KAAKP,MAC1CA,KAAK+R,SAAS/R,KAAK4T,oBAChB5T,MAGX4T,kBAAmB,SAAU9I,GACzB,GAAK9K,KAAK6T,UAEV,GADA/I,EAAUA,GAAW9K,KAAK8T,aACtBC,EAAOjJ,GAAU9K,KAAKgU,iBAAiBlJ,OACtC,KAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAAKL,KAAK4T,kBAAkB9I,EAAQzK,KAGjFyT,WAAY,WACR,MAAO9T,MAAK+R,QAAQ+B,cAKxBjN,MAAO,WACH7G,KAAKiD,UAAUuP,cACfxS,KAAK4T,qBAGT7C,gBAAiB,SAAUzL,EAAQwF,GAC/B,MAAO,IAAI9K,MAAKiM,MAAM9J,QAAQwN,kBAAkBrK,EAAQwF,EAAS9K,OAGrEgR,YAAa,SAAU/D,GAKnBjN,KAAKoE,eAAe,uBAAwBkB,OAAQ2H,EAAO3H,OAAQ2H,OAAQA,KAG/E+G,iBAAkB,SAAUlJ,GACxB,IAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAChCL,KAAK+Q,gBAAgBjG,EAAQzK,GAAIyK,IAIzCmJ,qBAAsB,SAAUnJ,GAC5BA,EAAUA,GAAW9K,KAAKkU,mBAC1B,KAAK,GAAI7T,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAChCyK,EAAQzK,GAAG6L,SAASsB,UAI5B4B,gBAAiB,SAAUU,EAAMC,EAAOjF,GACpC,MAAO,IAAI9K,MAAKiM,MAAM9J,QAAQyP,kBAAkB9B,EAAMC,EAAOjF,EAAS9K,OAG1EgO,oBAAqB,SAAU1J,GAO3B,GANA1C,EAAEC,SAASoJ,gBAAgB3G,GAK3BtE,KAAKoE,eAAe,wBAAyBE,KACzCA,EAAE6G,YACFnL,KAAKiM,MAAMpD,WAAa7I,KAAKiM,MAAMtF,iBAAmB3G,MAA1D,CACA,GAAiCmU,GAA7BpF,EAAQzK,EAAE2I,OAAOuB,UACjBlK,GAAEsD,cAAcwM,QAChBpU,KAAKqU,wBAAwB/P,GACtBA,EAAEsD,cAAc0M,OACvBtU,KAAKuU,uBAAuBjQ,GACrBA,EAAEsD,cAAc4M,SACvBxU,KAAKyU,yBAAyBnQ,GACvBA,EAAEsD,cAAc8M,QACvB1U,KAAK2U,2BAA2BrQ,GACzByK,IAAUzK,EAAE2I,OAAO4B,gBAAkB7O,KAAK0H,WAAa9F,EAAEC,SAASI,QACrE8M,GAAS/O,KAAK2T,WAAa,IAAGQ,GAAS,GAC1B,IAAVpF,GAAe/O,KAAK0H,WAAa9F,EAAEC,SAASK,UAAYlC,KAAK4U,cAAcpP,QAAUxF,KAAK2T,WACjGQ,GAAS,EACQ,IAAVpF,GAAe/O,KAAK0H,WAAa9F,EAAEC,SAASI,SAAWjC,KAAK4U,cAAcpP,QAAUxF,KAAK2T,YAAc3T,KAAKiP,OACnHkF,GAAS,EAETnU,KAAK6U,uBAAuBvQ,GAMhCtE,KAAKoE,eAAe,0BAA2BE,GAC3C6P,GAAQnU,KAAK+I,cAAczE,KAGnCuQ,uBAAwB,SAAUvQ,GAK9BtE,KAAKoE,eAAe,2BAA4BE,GAC5CA,EAAE6G,YACDnL,KAAK8U,mBAAmBxQ,EAAE2I,SAC/B3I,EAAE2I,OAAOD,UAGb8H,mBAAoB,SAAU7H,GAC1B,MAAOA,GAAOnC,QAAQtF,OAASxF,KAAK2T,YAGxClF,gBAAiB,SAAUnK,GAKvBtE,KAAKoE,eAAe,0BAA2BE,IAGnD+P,wBAAyB,SAAU/P,GAK/BtE,KAAKoE,eAAe,4BAA6BE,IAGrDmQ,yBAA0B,SAAUnQ,GAKhCtE,KAAKoE,eAAe,6BAA8BE,IAGtDqQ,2BAA4B,SAAUrQ,GAKlCtE,KAAKoE,eAAe,+BAAgCE,IAGxDiQ,uBAAwB,SAAUjQ,GAK9BtE,KAAKoE,eAAe,2BAA4BE,IAGpD6J,0BAA2B,SAAU7J,GAKjCtE,KAAKoE,eAAe,8BAA+BE,IAGvD8J,wBAAyB,SAAU9J,GAK/BtE,KAAKoE,eAAe,4BAA6BE,IAGrD+J,wBAAyB,SAAU/J,GAK/BtE,KAAKoE,eAAe,4BAA6BE,IAGrDgK,uBAAwB,SAAUhK,GAK9BtE,KAAKoE,eAAe,2BAA4BE,IAGpDwM,wBAAyB,SAAUxM,GAK/BtE,KAAKoE,eAAe,kCAAmCE,IAG3D4I,mBAAoB,SAAU5I,GAC1BtE,KAAKoT,OAAO9O,GACRtE,KAAK+R,QAAQtM,SAASzF,KAAK+U,aAAazQ,GAK5CtE,KAAKoE,eAAe,uBAAwBE,IAGhDwJ,wBAAyB,SAAUxJ,GAK/BtE,KAAKoE,eAAe,4BAA6BE,IAGrDyJ,sBAAuB,SAAUzJ,GAK7BtE,KAAKoE,eAAe,0BAA2BE,IAGnD0Q,gBAAiB,SAAUlK,GACvB9K,KAAK4U,cAAgB9J,GAAW9K,KAAKkU,qBAGzCnK,aAAc,WACL/J,KAAK4U,eAAe5U,KAAKgV,kBAC9BpT,EAAEC,SAASgQ,WAAWrQ,UAAUuI,aAAaxJ,KAAKP,OAGtDiV,oBAAqB,WACjBjV,KAAK+J,gBAGTiJ,WAAY,WACRhT,KAAKiM,MAAMhG,yBACXjG,KAAKiM,MAAM7F,0BACPpG,KAAK4U,eAAiB5U,KAAK4U,cAAcpP,OAASxF,KAAK2T,YAAY3T,KAAK0O,YAAY1O,KAAK4U,eAC7FhT,EAAEC,SAASgQ,WAAWrQ,UAAUwR,WAAWzS,KAAKP,YACzCA,MAAK4U,eAGhBM,UAAW,SAAU5P,GACbtF,KAAK0H,WAAa9F,EAAEC,SAASI,QAASjC,KAAK4U,cAAcO,KAAK7P,GAC7DtF,KAAK4U,cAAcQ,QAAQ9P,GAChCtF,KAAK+R,QAAQtM,QAAQ1D,OAAOuD,EAC5B,IAAI2H,GAASjN,KAAK+Q,gBAAgBzL,EAAQtF,KAAK4U,cAC/C5U,MAAKgR,YAAY/D,GACjBjN,KAAK0N,WAGT2H,gBAAiB,SAAU/P,GACvBtF,KAAKkV,UAAU5P,GACftF,KAAKiM,MAAMnG,yBACX9F,KAAKiM,MAAMrG,uBAAuBN,IAGtCgQ,iBAAkB,SAAUhQ,GACxBtF,KAAKkV,UAAU5P,GACftF,KAAKiM,MAAMpG,wBAAwBP,IAMvC6P,KAAM,SAAU7P,GACZ,IAAKA,EAAQ,MAAOiQ,SAAQC,MAAM,gEAC9BxV,MAAK0H,WAAa9F,EAAEC,SAASI,QAASjC,KAAKqV,gBAAgB/P,GAC1DtF,KAAKsV,iBAAiBhQ,IAG/BmQ,aAAc,SAAUnQ,GACpBA,EAAO4G,SAASc,SAChBhN,KAAK0N,WAKTgI,IAAK,WACD,KAAI1V,KAAK4U,cAAcpP,QAAU,GAAjC,CACA,GAAIF,EAMJ,OAL0CA,GAAtCtF,KAAK0H,WAAa9F,EAAEC,SAASI,QAAkBjC,KAAK4U,cAAc5U,KAAK4U,cAAcpP,OAAS,GACpFxF,KAAK4U,cAAc,GACjC5U,KAAKyV,aAAanQ,GACdtF,KAAK0H,WAAa9F,EAAEC,SAASI,QAASjC,KAAKiM,MAAMrG,uBAAuB5F,KAAK4U,cAAc5U,KAAK4U,cAAcpP,OAAS,IACtHxF,KAAKiM,MAAMrG,uBAAuB5F,KAAK4U,cAAc,IACnDtP,IAGX4N,oBAAqB,SAAU5O,GACvBA,EAAE2I,QAAU3I,EAAE2I,OAAOvG,SAAW1G,OAChCA,KAAK0H,WAAa9F,EAAEC,SAASI,QAASjC,KAAKqV,gBAAgB/Q,EAAEgB,QAC5DtF,KAAKsV,iBAAiBhR,EAAEgB,QAC7BtF,KAAKoE,eAAe,2BAA4BE,KAGpDyC,mBAAoB,SAAUzC,GAC1B1C,EAAEC,SAASgQ,WAAWrQ,UAAUuF,mBAAmBxG,KAAKP,KAAMsE,GAC1DtE,KAAK0H,WACL1H,KAAKiM,MAAM5G,qBAAqBf,EAAEgB,QAClCtF,KAAKiM,MAAMtG,sBAAsBrB,EAAEgB,UAI3CoI,QAAS,WACL1N,KAAK+R,QAAQrM,SACb1F,KAAK2S,aAOTrJ,SAAU,SAAUhE,GAChB,GAAIqQ,GAAQ3V,KAAK4V,kBACZD,KACL3V,KAAKgV,gBAAgBW,EAAM,IAAMA,GACjC3V,KAAKiV,sBAKLjV,KAAKoE,eAAe,sBAAuBuR,MAAOA,IAC9CrQ,GAAQtF,KAAKqV,gBAAgB/P,KAGrCoJ,YAAa,SAAUiH,EAAO7K,GAC1B,GAAIxG,IAAKqR,MAAOA,EAOhB,IANA/T,EAAEC,SAASoJ,gBAAgB3G,GAK3BtE,KAAKoE,eAAe,wBAAyBE,IACzCA,EAAE6G,WAWN,MAVAwK,GAAQ3V,KAAK6V,aAAaF,EAAO7K,GAC7B9K,KAAK8V,eAAe9V,KAAK8V,gBAC7B9V,KAAK+R,QAAQ7L,WAAWlG,KAAK8T,cAC7B9T,KAAK0N,UACL1N,KAAK6G,QAKL7G,KAAKoE,eAAe,0BAA2BuR,MAAOA,IAC/CA,GAGXE,aAAc,SAAUF,EAAO7K,GAE3B,GADAA,EAAUA,GAAW9K,KAAK8T,aACrBhJ,EAAQtF,OAAb,CACA,GAAIuQ,GAAO/V,KAMPgW,EAAe,SAAUlL,EAAS6K,GAI9B,MAFA7K,GAAQyD,OAAOzD,EAAQ8D,QAAQ+G,GAAQ,GAClC7K,EAAQtF,QAAQuQ,EAAKF,aAAa/K,GAChC6K,EAEf,IAAI7K,IAAY6K,EAAO,MAXH,UAAU7K,EAAS6K,GAG/B,MADQ7K,GAAQyD,OAAO,EAAG0H,OAAOC,YASGpL,EAC5C,KAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAAK,CACrC,GAAIyK,EAAQzK,KAAOsV,EAAO,MAAOK,GAAalL,EAAS6K,EAClD,KAAmC,IAA/B7K,EAAQzK,GAAGuO,QAAQ+G,GAAe,MAAOK,GAAalL,EAAQzK,GAAIsV,MAOnFQ,cAAe,SAAU7Q,GACrB,GAAIqQ,GAAQ3V,KAAK+R,QAAQqE,QAAQ9Q,EACjC,IAAIqQ,EAAO,MAAO3V,MAAK0O,YAAYiH,IAKvCU,YAAa,SAAUV,GACnB3V,KAAKsW,YAAYX,IAKrBY,aAAc,SAAUZ,GACpB3V,KAAKsW,YAAYX,EAAO,IAK5BW,YAAa,SAAUX,EAAO5G,GAC1B/O,KAAKwW,cACLb,EAAQ3V,KAAKyW,YAAYd,OACJ,KAAV5G,IAAuBA,EAAQ/O,KAAK+R,QAAQxM,SAASC,QAChExF,KAAK+R,QAAQxM,SAASgJ,OAAOQ,EAAO,EAAG4G,GACvC3V,KAAK+R,QAAQrM,SACT1F,KAAK0W,UAAU1W,KAAK6G,SAG5BkO,aAAc,SAAUzQ,GACpBtE,KAAK+R,QAAQtM,QAAQ1D,OAAOuC,EAAE2I,OAAO3H,SAGzCgH,YAAa,SAAUhI,GACnBtE,KAAKiD,UAAUuP,cACf5Q,EAAEC,SAASgQ,WAAWrQ,UAAU8K,YAAY/L,KAAKP,KAAMsE,IAG3DiI,UAAW,SAAUjI,GACjBtE,KAAK4T,oBACLhS,EAAEC,SAASgQ,WAAWrQ,UAAU+K,UAAUhM,KAAKP,KAAMsE,MAO7D1C,EAAEC,SAAS8U,eAAiB/U,EAAEC,SAAS6R,WAAW3R,QAE9C6U,qBAAsB,WAClB5W,KAAK0H,SAAW9F,EAAEC,SAASK,SAC3BlC,KAAK+J,gBAKT0F,iBAAkB,SAAU3E,GACpB9K,KAAK6I,YACTiC,EAAUA,GAAW9K,KAAKkU,oBAC1BlU,KAAKgV,gBAAgBlK,GACjBA,EAAQtF,OAAS,IACjBxF,KAAKiM,MAAMjG,0BACXhG,KAAKiM,MAAMpG,wBAAwBiF,EAAQ,KAE/C9K,KAAK4W,yBAKTlH,gBAAiB,SAAU5E,GACnB9K,KAAK6I,YACTiC,EAAUA,GAAW9K,KAAKkU,oBAC1BlU,KAAKgV,gBAAgBlK,GACjBA,EAAQtF,OAAS,IACjBxF,KAAKiM,MAAMnG,yBACX9F,KAAKiM,MAAMrG,uBAAuBkF,EAAQA,EAAQtF,OAAS,KAE/DxF,KAAKiV,wBAGTf,kBAAmB,SAAUpJ,GAEzB,MADAA,GAAUA,GAAW9K,KAAK+R,QAAQxM,UAC7BuF,EAAQtF,QAAUsF,EAAQ,YAAclJ,GAAEiV,OAAe/L,EAClD9K,KAAKkU,kBAAkBpJ,EAAQ,KAG/C0L,YAAa,WACLxW,KAAK+R,QAAQxM,SAASC,QAAUuO,EAAO/T,KAAK+R,QAAQxM,YACpDvF,KAAK+R,QAAQxM,UAAYvF,KAAK+R,QAAQxM,YAI9CqQ,iBAAkB,WACd,GAAI5V,KAAK+R,QAAQxM,SAASC,OAAQ,CAC9B,GAAImQ,KAEJ,OADA3V,MAAKqW,YAAYV,GACVA,EAEP,MAAO3V,MAAK+R,QAAQxM,UAI5BkR,YAAa,SAAUd,GACnB,MAAI5B,GAAO4B,GAAeA,EACjBA,EAAM,GAAW3V,KAAKyW,YAAYd,EAAM,QAA5C,IAKTpG,WAAY,SAAUoG,EAAO5G,GACzB,GAAKA,KAASA,GAAS4G,EAAMnQ,OAAS,GAAtC,CACAxF,KAAKwW,aACL,IAAIM,GAAa9W,KAAK+R,QAAQxM,SAASqJ,QAAQ+G,EAC/C,KAAoB,IAAhBmB,EAAJ,CACA,GAAIC,GAAQpB,EAAMqB,MAAM,EAAGjI,EAAQ,GAC/BkI,EAAStB,EAAMqB,MAAMjI,EAEzBkI,GAAO,GAAKrV,EAAEsI,OAAO+M,EAAO,GAAGC,IAAKD,EAAO,GAAGE,IAAKF,EAAO,GAAGG,KAC7DpX,KAAK+R,QAAQxM,SAASgJ,OAAOuI,EAAY,EAAGC,EAAOE,GACnDjX,KAAK0N,UACL1N,KAAK6G,aAObjF,EAAEC,SAASwV,cAAgBzV,EAAEC,SAAS6R,WAAW3R,QAE7CkN,QAAQ,EACR0E,WAAY,EAEZ0B,gBAAiB,SAAU/P,GACvB1D,EAAEC,SAAS6R,WAAWlS,UAAU6T,gBAAgB9U,KAAKP,KAAMsF,GACtDtF,KAAKiM,MAAM9H,kBAAkBoB,SAASC,QAAQxF,KAAKiM,MAAMpG,wBAAwBP,GACpD,IAA9BtF,KAAK4U,cAAcpP,QAAcxF,KAAKiM,MAAMjG,2BAGpDsR,gBAAiB,SAAUhS,GACvBtF,KAAK8V,eACL,IAAIhL,GAAU9K,KAAK+R,QAAQqE,QAAQ9Q,EACnC,IAAKwF,EAAL,CACA,GAAIyM,KAEJ,OADAzM,GAAQqK,KAAKoC,GACNA,IAKX5M,QAAS,SAAUrF,GACf,GAAIiS,GAAQvX,KAAKsX,gBAAgBhS,EAC5BiS,KACLvX,KAAKgV,gBAAgBuC,GACrBvX,KAAKiV,sBACD3P,GAAQtF,KAAKqV,gBAAgB/P,KAGrCsQ,iBAAkB,WACd,GAAI5V,KAAK+R,QAAQxM,SAASC,QAAUxF,KAAK+R,QAAQxM,SAAS,GAAGC,OAAQ,CACjE,GAAImQ,KAEJ,OADA3V,MAAKqW,YAAYV,GACVA,EAEP,MAAO3V,MAAK+R,QAAQxM,UAI5BiR,YAAa,WACLxW,KAAK+R,QAAQxM,SAASC,QAAUuO,EAAO/T,KAAK+R,QAAQxM,SAAS,MAC7DvF,KAAK+R,QAAQxM,UAAYvF,KAAK+R,QAAQxM,YAI9CuQ,cAAe,WACN9V,KAAK+R,QAAQxM,SAASC,SAAUuO,EAAO/T,KAAK+R,QAAQxM,YAAWvF,KAAK+R,QAAQxM,UAAYvF,KAAK+R,QAAQxM,YAG9GuP,mBAAoB,SAAU7H,GAC1B,GAAIgE,GAASjR,KAAK+R,QAAQyF,YAAYvK,EAAOnC,QAE7C,OADUlJ,GAAEmJ,KAAK6D,QAAQqC,EAAQhE,EAAOnC,SAC9B,GACHlJ,EAAEC,SAAS6R,WAAWlS,UAAUsT,mBAAmBvU,KAAKP,KAAMiN,IAGzEiH,kBAAmB,WAEf,MADKlU,MAAK+R,QAAQxM,SAASC,QAAQxF,KAAK+R,QAAQxM,SAAS4P,SAClDnV,KAAK+R,QAAQxM,SAAS,IAGjCkR,YAAa,SAAUd,GAInB,OAAI5B,EAAO4B,IAAYA,EAAM,IAA0B,IAApBA,EAAM,GAAGnQ,OAChCmQ,GADuDA,MAQ3E/T,EAAEC,SAAS4V,gBAAkB7V,EAAEC,SAAS6R,WAAW3R,QAE/CkN,QAAQ,EACR0E,WAAY,EAEZxR,SACIuB,mBAAmB,GAGvBqR,aAAc,SAAUzQ,GACpB,GAAIyK,GAAQzK,EAAE2I,OAAOuB,WACjBZ,EAAOtJ,EAAE2I,OAAOY,UAChBqB,EAAW5K,EAAE2I,OAAO6B,cACpB4I,GAAiB3I,EAAQ,GAAK,EAC9B4I,EAAWrT,EAAE2I,OAAOnC,QAAQ4M,GAC5BvN,EAAS,GAAIvI,GAAEwI,aAAa9F,EAAEgB,OAAQqS,EAE1CzI,GAAS5J,OAAOkI,QAAQlJ,EAAEgB,OAAO4R,IAAKS,EAASR,MAC/CvJ,EAAKtI,OAAOkI,QAAQmK,EAAST,IAAK5S,EAAEgB,OAAO6R,MAC3CnX,KAAK4X,aAAazN,GAClBnK,KAAKiU,wBAGTlM,mBAAoB,SAAUzD,GAC1B1C,EAAEC,SAAS6R,WAAWlS,UAAUuG,mBAAmBxH,KAAKP,KAAMsE,GAC9DtE,KAAKiT,SACL,IAAInI,GAAU9K,KAAKkU,mBAGI,KAAnBpJ,EAAQtF,QAAcsF,EAAQqK,KAAK7Q,EAAEgB,OACzC,IAAI6E,GAAS,GAAIvI,GAAEwI,aAAa9F,EAAEgB,OAAQhB,EAAEgB,OAC5CtF,MAAK4X,aAAazN,GAClBnK,KAAK6X,cAAc1N,GACnBnK,KAAK0N,UACL1N,KAAK6G,QAULvC,EAAEsD,cAAckQ,YAAa,EAC7B9X,KAAK4D,IAAI6N,SAASC,WAAWqG,MAAMzT,EAAEsD,eAIrCkD,EAAQ,GAAGoB,SAASuF,SAASC,WAAWC,QAAQrN,EAAEsD,gBAGtDK,iBAAkB,SAAU3D,GACxBtE,KAAK+I,cAAczE,GACnBA,EAAEsD,cAAckQ,YAAa,EAC7BlW,EAAEC,SAAS6R,WAAWlS,UAAUyG,iBAAiB1H,KAAKP,KAAMsE,IAGhEyC,mBAAoB,SAAUzC,GAC1BA,EAAEsD,cAAckQ,YAAa,EAC7BlW,EAAEC,SAAS6R,WAAWlS,UAAUuF,mBAAmBxG,KAAKP,KAAMsE,IAIlE4P,kBAAmB,SAAUpJ,GACzB,MAAOA,IAAW9K,KAAK+R,QAAQxM,SAAS,IAG5CqS,aAAc,SAAUzN,GACpBnK,KAAK+R,QAAQtM,QAAU0E,GAG3B0N,cAAe,SAAU1N,GAIrB,IAAK,GAHDW,GAAU9K,KAAKkU,oBACf8D,EAAahY,KAAK+R,QAAQkG,iBAAiB9N,GAEtC9J,EAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAChCyK,EAAQzK,GAAGmN,OAAOwK,EAAW3X,OAQzCuB,EAAEC,SAASqW,aAAetW,EAAEC,SAAS6R,WAAW3R,QAE5C4R,WAAY,EAEZxR,SACIuB,mBAAmB,GAGvBC,WAAY,SAAUC,EAAKmO,EAAS5P,GAChCP,EAAEC,SAAS6R,WAAWlS,UAAUmC,WAAWpD,KAAKP,KAAM4D,EAAKmO,EAAS5P,GACpEnC,KAAKmY,cAAgBnY,KAAKoY,uBAG9BA,oBAAqB,WAEjB,GAAIC,IAASrY,KAAK+R,QAAQuG,SAAWtY,KAAK+R,QAAQwG,UAAY/P,KAAKgQ,IAAIhQ,KAAKiQ,GAAK,GAC7EtQ,EAAQnI,KAAK4D,IAAI8U,QAAQ1Y,KAAK+R,QAAQtE,QAC1C,OAAOzN,MAAK4D,IAAI+U,WAAWxQ,EAAMoI,EAAI8H,EAAOlQ,EAAMyI,EAAIyH,KAG1DO,mBAAoB,WAChB5Y,KAAKmY,cAAc3K,OAAOxN,KAAKoY,uBAC/BpY,KAAKmY,cAAcjM,SAASsB,UAGhCsG,WAAY,WACR,OAAQ9T,KAAK+R,QAAQtE,QAASzN,KAAKmY,gBAGvCjE,kBAAmB,WACf,MAAOlU,MAAK8T,cAGhB5G,mBAAoB,SAAU5I,GACE,IAAxBA,EAAE2I,OAAOuB,WAAkBxO,KAAK6Y,OAAOvU,GACtCtE,KAAK4Y,mBAAmBtU,GAC7B1C,EAAEC,SAAS6R,WAAWlS,UAAU0L,mBAAmB3M,KAAKP,KAAMsE,IAGlEuU,OAAQ,SAAUvU,GACd,GAAIwU,GAAS9Y,KAAK+R,QAAQtE,QAAQlF,WAAWjE,EAAEgB,OAC/CtF,MAAK+R,QAAQgH,UAAUD,IAG3B/Q,mBAAoB,SAAUzD,GAC1B1C,EAAEC,SAAS6R,WAAWlS,UAAUuG,mBAAmBxH,KAAKP,KAAMsE,GAC9DtE,KAAKmY,cAAc3K,OAAOlJ,EAAEgB,QAC5BtF,KAAK+R,QAAQtE,QAAQD,OAAOlJ,EAAEgB,QAC9BtF,KAAKiT,UAEL3O,EAAEsD,cAAckQ,YAAa,EAC7B9X,KAAK4D,IAAI6N,SAASC,WAAWqG,MAAMzT,EAAEsD,eAErC5H,KAAKmY,cAAcjM,SAASuF,SAASC,WAAWC,QAAQrN,EAAEsD,gBAG9DK,iBAAkB,SAAU3D,GACxBtE,KAAK+I,cAAczE,GACnBA,EAAEsD,cAAckQ,YAAa,EAC7BlW,EAAEC,SAAS6R,WAAWlS,UAAUyG,iBAAiB1H,KAAKP,KAAMsE,IAGhEyC,mBAAoB,SAAUzC,GAC1BA,EAAEsD,cAAckQ,YAAa,EAC7BlW,EAAEC,SAAS6R,WAAWlS,UAAUuF,mBAAmBxG,KAAKP,KAAMsE,IAGlE+H,OAAQ,SAAU/H,GACd1C,EAAEC,SAAS6R,WAAWlS,UAAU6K,OAAO9L,KAAKP,KAAMsE,GAClDtE,KAAK+R,QAAQN,SAAS9D,aAAa3N,KAAKmY,iBAUhD,IAAIa,IAEAC,aAAc,SAAUrV,GACpBA,EAAMA,GAAO5D,KAAKsN,IAClB,IAAIrB,IAASjM,KAAKmC,QAAQ6I,iBAAmBzG,WAAaX,EAAIW,SAC9D,KAAK0H,EAAO,KAAMiN,OAAM,sCAExB,OAAO,KADKlZ,KAAKmC,QAAQgX,aAAenZ,KAAKoZ,eAAenN,IAC3CrI,EAAK5D,KAAMA,KAAKmC,QAAQ6I,cAK7C3B,WAAY,SAAUzF,GAGlB,MAFK5D,MAAK0G,QAAQ1G,KAAKiZ,aAAarV,GACpC5D,KAAK0G,OAAOgM,SACL1S,KAAK0G,QAKhB2S,YAAa,WACT,MAAOrZ,MAAK0G,QAAU1G,KAAK0G,OAAOmN,WAKtCyF,YAAa,WACLtZ,KAAK0G,SACL1G,KAAK0G,OAAO6L,gBACLvS,MAAK0G,SAMpB6S,WAAY,WACJvZ,KAAKqZ,cAAerZ,KAAKsZ,cACxBtZ,KAAKqJ,cAGdmQ,eAAgB,WACRxZ,KAAK0G,QAAQ1G,KAAKqJ,eAK1BoQ,GAEAL,eAAgB,SAAUnN,GACtB,MAAQA,IAASA,EAAM9J,QAAQiB,oBAAuB6I,EAAM9J,QAAQiB,oBAAsBxB,EAAEC,SAAS8U,gBAGzGP,QAAS,SAAU9Q,EAAQwF,GAIvB,GAAI6K,GAAQ,IAEZ,IADA7K,EAAUA,GAAW9K,KAAKuF,UACrBuF,EAAQtF,OAAQ,MAAOmQ,EACvB,IAAI5B,EAAOjJ,IAAY9K,KAAK0Z,YAAYpU,EAAQwF,GAAU6K,EAAQ7K,MAClE,KAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAAK,GAAIL,KAAK0Z,YAAYpU,EAAQwF,EAAQzK,IAAK,MAAOyK,GAAQzK,EACvG,OAAOsV,IAGX+D,YAAa,SAAUpZ,EAAGwK,GACtB,IAAKA,EAAS,OAAO,CACrB,IAAIzK,GAAGsZ,EAAGC,EAAgBlY,EAAXmY,KACXC,EAAI9Z,KAAK+Z,iBAKb,IAJA/Z,KAAKga,gBAAgBlP,EAAS+O,EAAM7Z,KAAKia,WACzCJ,EAAOA,EAAK,GACZnY,EAAI1B,KAAKsN,KAAK4M,mBAAmB5Z,IAE5BN,KAAKia,UAAUE,SAASzY,GAAM,OAAO,CAC1C,KAAKrB,EAAI,EAAGuZ,EAAMC,EAAKrU,OAAQmU,EAAI,EAAGtZ,EAAIuZ,EAAKD,EAAItZ,IAE/C,GAAIuB,EAAEwY,SAASC,uBAAuB3Y,EAAGmY,EAAKF,GAAIE,EAAKxZ,KAAOyZ,EAC1D,OAAO,CAGf,QAAO,IAKXQ,GAEAlB,eAAgB,SAAUnN,GACtB,MAAQA,IAASA,EAAM9J,QAAQkB,mBAAsB4I,EAAM9J,QAAQkB,mBAAqBzB,EAAEC,SAASwV,eAGvGjB,QAAS,SAAU9Q,EAAQwF,GAKvB,GAAI6K,GAAQ,IAEZ,IADA7K,EAAUA,GAAW9K,KAAKuF,UACrBuF,EAAQtF,OAAQ,MAAOmQ,EACvB,IAAI5B,EAAOjJ,IAAY9K,KAAK0Z,YAAYpU,EAAQwF,GAAU6K,EAAQ7K,MAClE,IAAIiJ,EAAOjJ,EAAQ,KAAO9K,KAAK0Z,YAAYpU,EAAQwF,EAAQ,IAAK6K,EAAQ7K,MACxE,KAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAAK,GAAIL,KAAK0Z,YAAYpU,EAAQwF,EAAQzK,GAAG,IAAK,MAAOyK,GAAQzK,EAC1G,OAAOsV,IAGX+D,YAAa,SAAUpZ,EAAGwK,GACtB,GAAoByP,GAAIC,EAAIC,EAAGd,EAAGe,EAA9BC,GAAS,CAEb,KAAKF,EAAI,EAAGC,EAAO5P,EAAQtF,OAAQmU,EAAIe,EAAO,EAAGD,EAAIC,EAAMf,EAAIc,IAC3DF,EAAKzP,EAAQ2P,GACbD,EAAK1P,EAAQ6O,GAEPY,EAAGrD,IAAM5W,EAAE4W,KAAUsD,EAAGtD,IAAM5W,EAAE4W,KACjC5W,EAAE6W,KAAOqD,EAAGrD,IAAMoD,EAAGpD,MAAQ7W,EAAE4W,IAAMqD,EAAGrD,MAAQsD,EAAGtD,IAAMqD,EAAGrD,KAAOqD,EAAGpD,MACvEwD,GAAUA,EAIlB,OAAOA,IAGXnD,YAAa,SAAU7B,EAAO7K,GAE1B,GADAA,EAAUA,GAAW9K,KAAKuF,SAC1B,CACA,GAAIqV,GAAMhZ,EAAEmJ,KAAK6D,QAAQ9D,EAAS6K,EAClC,KAAa,IAATiF,EAAY,MAAO9P,EACvB,KAAK,GAAIzK,GAAI,EAAGA,EAAIyK,EAAQtF,OAAQnF,IAEhC,IAAa,KADbua,EAAMhZ,EAAEmJ,KAAK6D,QAAQ9D,EAAQzK,GAAIsV,IACjB,MAAO7K,GAAQzK,MAOvCwa,GAEAzB,eAAgB,SAAUnN,GACtB,MAAQA,IAASA,EAAM9J,QAAQmB,kBAAqB2I,EAAM9J,QAAQmB,kBAAoB1B,EAAEC,SAAS4R,eAKrGqH,GAEA1B,eAAgB,SAAUnN,GACtB,MAAQA,IAASA,EAAM9J,QAAQoB,qBAAwB0I,EAAM9J,QAAQoB,qBAAuB3B,EAAEC,SAAS4V,kBAK3GsD,GAEA3B,eAAgB,SAAUnN,GACtB,MAAQA,IAASA,EAAM9J,QAAQqB,kBAAqByI,EAAM9J,QAAQqB,kBAAoB5B,EAAEC,SAASqW,eAKrG8C,EAAe,WAEfhb,KAAK8G,GAAG,MAAO9G,KAAKwZ,iBAGpBzF,EAASnS,EAAEwY,SAASrG,QAAUnS,EAAEwY,SAASa,OAASrZ,EAAEY,SAASyY,KAG7DrZ,GAAEY,WACFZ,EAAEY,SAAS0Y,QAAQlC,GACnBpX,EAAEY,SAAS0Y,QAAQzB,GACnB7X,EAAEY,SAASgJ,YAAYwP,IAEvBpZ,EAAEU,UACFV,EAAEU,QAAQ4Y,QAAQlC,GAClBpX,EAAEU,QAAQ4Y,QAAQZ,IAElB1Y,EAAEc,SACFd,EAAEc,OAAOwY,QAAQlC,GACjBpX,EAAEc,OAAOwY,QAAQL,GACjBjZ,EAAEc,OAAO8I,YAAYwP,IAErBpZ,EAAEgB,YACFhB,EAAEgB,UAAUsY,QAAQlC,GACpBpX,EAAEgB,UAAUsY,QAAQJ,IAEpBlZ,EAAEkB,SACFlB,EAAEkB,OAAOoY,QAAQlC,GACjBpX,EAAEkB,OAAOoY,QAAQH,IAGrBnZ,EAAEiV,OAAOrV,UAAUgM,OAAS,SAAUlI,GAClCA,EAAS1D,EAAEsI,OAAO5E,GAClBtF,KAAKkX,IAAM5R,EAAO4R,IAClBlX,KAAKmX,IAAM7R,EAAO6R,OAGrBzO,OAAO9G,IF6EN,SAAU/B,EAAQD,EAASM,GAEjCL,EAAOD,QAAUM,EAAoB","file":"Vue2LeafletEditablePlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditablePlugin\"] = factory();\n\telse\n\t\troot[\"Vue2LeafletEditablePlugin\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditablePlugin\"] = factory();\n\telse\n\t\troot[\"Vue2LeafletEditablePlugin\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nfunction init(L) {\n    // 🍂miniclass CancelableEvent (Event objects)\n    // 🍂method cancel()\n    // Cancel any subsequent action.\n\n    // 🍂miniclass VertexEvent (Event objects)\n    // 🍂property vertex: VertexMarker\n    // The vertex that fires the event.\n\n    // 🍂miniclass ShapeEvent (Event objects)\n    // 🍂property shape: Array\n    // The shape (LatLngs array) subject of the action.\n\n    // 🍂miniclass CancelableVertexEvent (Event objects)\n    // 🍂inherits VertexEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass CancelableShapeEvent (Event objects)\n    // 🍂inherits ShapeEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass LayerEvent (Event objects)\n    // 🍂property layer: object\n    // The Layer (Marker, Polyline…) subject of the action.\n\n    // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n    // Main edition handler. By default, it is attached to the map\n    // as `map.editTools` property.\n    // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n    // the behaviour: using options, listening to events, or extending.\n    L.Editable = L.Evented.extend({\n\n        statics: {\n            FORWARD: 1,\n            BACKWARD: -1\n        },\n\n        options: {\n\n            // You can pass them when creating a map using the `editOptions` key.\n            // 🍂option zIndex: int = 1000\n            // The default zIndex of the editing tools.\n            zIndex: 1000,\n\n            // 🍂option polygonClass: class = L.Polygon\n            // Class to be used when creating a new Polygon.\n            polygonClass: L.Polygon,\n\n            // 🍂option polylineClass: class = L.Polyline\n            // Class to be used when creating a new Polyline.\n            polylineClass: L.Polyline,\n\n            // 🍂option markerClass: class = L.Marker\n            // Class to be used when creating a new Marker.\n            markerClass: L.Marker,\n\n            // 🍂option rectangleClass: class = L.Rectangle\n            // Class to be used when creating a new Rectangle.\n            rectangleClass: L.Rectangle,\n\n            // 🍂option circleClass: class = L.Circle\n            // Class to be used when creating a new Circle.\n            circleClass: L.Circle,\n\n            // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n            // CSS class to be added to the map container while drawing.\n            drawingCSSClass: 'leaflet-editable-drawing',\n\n            // 🍂option drawingCursor: const = 'crosshair'\n            // Cursor mode set to the map while drawing.\n            drawingCursor: 'crosshair',\n\n            // 🍂option editLayer: Layer = new L.LayerGroup()\n            // Layer used to store edit tools (vertex, line guide…).\n            editLayer: undefined,\n\n            // 🍂option featuresLayer: Layer = new L.LayerGroup()\n            // Default layer used to store drawn features (Marker, Polyline…).\n            featuresLayer: undefined,\n\n            // 🍂option polylineEditorClass: class = PolylineEditor\n            // Class to be used as Polyline editor.\n            polylineEditorClass: undefined,\n\n            // 🍂option polygonEditorClass: class = PolygonEditor\n            // Class to be used as Polygon editor.\n            polygonEditorClass: undefined,\n\n            // 🍂option markerEditorClass: class = MarkerEditor\n            // Class to be used as Marker editor.\n            markerEditorClass: undefined,\n\n            // 🍂option rectangleEditorClass: class = RectangleEditor\n            // Class to be used as Rectangle editor.\n            rectangleEditorClass: undefined,\n\n            // 🍂option circleEditorClass: class = CircleEditor\n            // Class to be used as Circle editor.\n            circleEditorClass: undefined,\n\n            // 🍂option lineGuideOptions: hash = {}\n            // Options to be passed to the line guides.\n            lineGuideOptions: {},\n\n            // 🍂option skipMiddleMarkers: boolean = false\n            // Set this to true if you don't want middle markers.\n            skipMiddleMarkers: false\n\n        },\n\n        initialize: function initialize(map, options) {\n            L.setOptions(this, options);\n            this._lastZIndex = this.options.zIndex;\n            this.map = map;\n            this.editLayer = this.createEditLayer();\n            this.featuresLayer = this.createFeaturesLayer();\n            this.forwardLineGuide = this.createLineGuide();\n            this.backwardLineGuide = this.createLineGuide();\n        },\n\n        fireAndForward: function fireAndForward(type, e) {\n            e = e || {};\n            e.editTools = this;\n            this.fire(type, e);\n            this.map.fire(type, e);\n        },\n\n        createLineGuide: function createLineGuide() {\n            var options = L.extend({ dashArray: '5,10', weight: 1, interactive: false }, this.options.lineGuideOptions);\n            return L.polyline([], options);\n        },\n\n        createVertexIcon: function createVertexIcon(options) {\n            return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n        },\n\n        createEditLayer: function createEditLayer() {\n            return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        createFeaturesLayer: function createFeaturesLayer() {\n            return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        moveForwardLineGuide: function moveForwardLineGuide(latlng) {\n            if (this.forwardLineGuide._latlngs.length) {\n                this.forwardLineGuide._latlngs[1] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            }\n        },\n\n        moveBackwardLineGuide: function moveBackwardLineGuide(latlng) {\n            if (this.backwardLineGuide._latlngs.length) {\n                this.backwardLineGuide._latlngs[1] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            }\n        },\n\n        anchorForwardLineGuide: function anchorForwardLineGuide(latlng) {\n            this.forwardLineGuide._latlngs[0] = latlng;\n            this.forwardLineGuide._bounds.extend(latlng);\n            this.forwardLineGuide.redraw();\n        },\n\n        anchorBackwardLineGuide: function anchorBackwardLineGuide(latlng) {\n            this.backwardLineGuide._latlngs[0] = latlng;\n            this.backwardLineGuide._bounds.extend(latlng);\n            this.backwardLineGuide.redraw();\n        },\n\n        attachForwardLineGuide: function attachForwardLineGuide() {\n            this.editLayer.addLayer(this.forwardLineGuide);\n        },\n\n        attachBackwardLineGuide: function attachBackwardLineGuide() {\n            this.editLayer.addLayer(this.backwardLineGuide);\n        },\n\n        detachForwardLineGuide: function detachForwardLineGuide() {\n            this.forwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.forwardLineGuide);\n        },\n\n        detachBackwardLineGuide: function detachBackwardLineGuide() {\n            this.backwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.backwardLineGuide);\n        },\n\n        blockEvents: function blockEvents() {\n            // Hack: force map not to listen to other layers events while drawing.\n            if (!this._oldTargets) {\n                this._oldTargets = this.map._targets;\n                this.map._targets = {};\n            }\n        },\n\n        unblockEvents: function unblockEvents() {\n            if (this._oldTargets) {\n                // Reset, but keep targets created while drawing.\n                this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                delete this._oldTargets;\n            }\n        },\n\n        registerForDrawing: function registerForDrawing(editor) {\n            if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n            this.blockEvents();\n            editor.reset(); // Make sure editor tools still receive events.\n            this._drawingEditor = editor;\n            this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.on('mousedown', this.onMousedown, this);\n            this.map.on('mouseup', this.onMouseup, this);\n            L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n            this.defaultMapCursor = this.map._container.style.cursor;\n            this.map._container.style.cursor = this.options.drawingCursor;\n        },\n\n        unregisterForDrawing: function unregisterForDrawing(editor) {\n            this.unblockEvents();\n            L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n            this.map._container.style.cursor = this.defaultMapCursor;\n            editor = editor || this._drawingEditor;\n            if (!editor) return;\n            this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.off('mousedown', this.onMousedown, this);\n            this.map.off('mouseup', this.onMouseup, this);\n            if (editor !== this._drawingEditor) return;\n            delete this._drawingEditor;\n            if (editor._drawing) editor.cancelDrawing();\n        },\n\n        onMousedown: function onMousedown(e) {\n            if (e.originalEvent.which != 1) return;\n            this._mouseDown = e;\n            this._drawingEditor.onDrawingMouseDown(e);\n        },\n\n        onMouseup: function onMouseup(e) {\n            if (this._mouseDown) {\n                var editor = this._drawingEditor,\n                    mouseDown = this._mouseDown;\n                this._mouseDown = null;\n                editor.onDrawingMouseUp(e);\n                if (this._drawingEditor !== editor) return; // onDrawingMouseUp may call unregisterFromDrawing.\n                var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n            }\n        },\n\n        // 🍂section Public methods\n        // You will generally access them by the `map.editTools`\n        // instance:\n        //\n        // `map.editTools.startPolyline();`\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing.\n        drawing: function drawing() {\n            return this._drawingEditor && this._drawingEditor.drawing();\n        },\n\n        // 🍂method stopDrawing()\n        // When you need to stop any ongoing drawing, without needing to know which editor is active.\n        stopDrawing: function stopDrawing() {\n            this.unregisterForDrawing();\n        },\n\n        // 🍂method commitDrawing()\n        // When you need to commit any ongoing drawing, without needing to know which editor is active.\n        commitDrawing: function commitDrawing(e) {\n            if (!this._drawingEditor) return;\n            this._drawingEditor.commitDrawing(e);\n        },\n\n        connectCreatedToMap: function connectCreatedToMap(layer) {\n            return this.featuresLayer.addLayer(layer);\n        },\n\n        // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n        // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polyline class constructor.\n        startPolyline: function startPolyline(latlng, options) {\n            var line = this.createPolyline([], options);\n            line.enableEdit(this.map).newShape(latlng);\n            return line;\n        },\n\n        // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n        // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polygon class constructor.\n        startPolygon: function startPolygon(latlng, options) {\n            var polygon = this.createPolygon([], options);\n            polygon.enableEdit(this.map).newShape(latlng);\n            return polygon;\n        },\n\n        // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n        // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n        // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n        // If `options` is given, it will be passed to the Marker class constructor.\n        startMarker: function startMarker(latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var marker = this.createMarker(latlng, options);\n            marker.enableEdit(this.map).startDrawing();\n            return marker;\n        },\n\n        // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n        // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Rectangle class constructor.\n        startRectangle: function startRectangle(latlng, options) {\n            var corner = latlng || L.latLng([0, 0]);\n            var bounds = new L.LatLngBounds(corner, corner);\n            var rectangle = this.createRectangle(bounds, options);\n            rectangle.enableEdit(this.map).startDrawing();\n            return rectangle;\n        },\n\n        // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n        // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Circle class constructor.\n        startCircle: function startCircle(latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var circle = this.createCircle(latlng, options);\n            circle.enableEdit(this.map).startDrawing();\n            return circle;\n        },\n\n        startHole: function startHole(editor, latlng) {\n            editor.newHole(latlng);\n        },\n\n        createLayer: function createLayer(klass, latlngs, options) {\n            options = L.Util.extend({ editOptions: { editTools: this } }, options);\n            var layer = new klass(latlngs, options);\n            // 🍂namespace Editable\n            // 🍂event editable:created: LayerEvent\n            // Fired when a new feature (Marker, Polyline…) is created.\n            this.fireAndForward('editable:created', { layer: layer });\n            return layer;\n        },\n\n        createPolyline: function createPolyline(latlngs, options) {\n            return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n        },\n\n        createPolygon: function createPolygon(latlngs, options) {\n            return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n        },\n\n        createMarker: function createMarker(latlng, options) {\n            return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n        },\n\n        createRectangle: function createRectangle(bounds, options) {\n            return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n        },\n\n        createCircle: function createCircle(latlng, options) {\n            return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n        }\n\n    });\n\n    L.extend(L.Editable, {\n\n        makeCancellable: function makeCancellable(e) {\n            e.cancel = function () {\n                e._cancelled = true;\n            };\n        }\n\n    });\n\n    // 🍂namespace Map; 🍂class Map\n    // Leaflet.Editable add options and events to the `L.Map` object.\n    // See `Editable` events for the list of events fired on the Map.\n    // 🍂example\n    //\n    // ```js\n    // var map = L.map('map', {\n    //  editable: true,\n    //  editOptions: {\n    //    …\n    // }\n    // });\n    // ```\n    // 🍂section Editable Map Options\n    L.Map.mergeOptions({\n\n        // 🍂namespace Map\n        // 🍂section Map Options\n        // 🍂option editToolsClass: class = L.Editable\n        // Class to be used as vertex, for path editing.\n        editToolsClass: L.Editable,\n\n        // 🍂option editable: boolean = false\n        // Whether to create a L.Editable instance at map init.\n        editable: false,\n\n        // 🍂option editOptions: hash = {}\n        // Options to pass to L.Editable when instantiating.\n        editOptions: {}\n\n    });\n\n    L.Map.addInitHook(function () {\n\n        this.whenReady(function () {\n            if (this.options.editable) {\n                this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n            }\n        });\n    });\n\n    L.Editable.VertexIcon = L.DivIcon.extend({\n\n        options: {\n            iconSize: new L.Point(8, 8)\n        }\n\n    });\n\n    L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n        options: {\n            iconSize: new L.Point(20, 20)\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n    L.Editable.VertexMarker = L.Marker.extend({\n\n        options: {\n            draggable: true,\n            className: 'leaflet-div-icon leaflet-vertex-icon'\n        },\n\n        // 🍂section Public methods\n        // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n        // instance when listening for events like `editable:vertex:ctrlclick`.\n\n        initialize: function initialize(latlng, latlngs, editor, options) {\n            // We don't use this._latlng, because on drag Leaflet replace it while\n            // we want to keep reference.\n            this.latlng = latlng;\n            this.latlngs = latlngs;\n            this.editor = editor;\n            L.Marker.prototype.initialize.call(this, latlng, options);\n            this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n            this.latlng.__vertex = this;\n            this.editor.editLayer.addLayer(this);\n            this.setZIndexOffset(editor.tools._lastZIndex + 1);\n        },\n\n        onAdd: function onAdd(map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            this.on('drag', this.onDrag);\n            this.on('dragstart', this.onDragStart);\n            this.on('dragend', this.onDragEnd);\n            this.on('mouseup', this.onMouseup);\n            this.on('click', this.onClick);\n            this.on('contextmenu', this.onContextMenu);\n            this.on('mousedown touchstart', this.onMouseDown);\n            this.on('mouseover', this.onMouseOver);\n            this.on('mouseout', this.onMouseOut);\n            this.addMiddleMarkers();\n        },\n\n        onRemove: function onRemove(map) {\n            if (this.middleMarker) this.middleMarker.delete();\n            delete this.latlng.__vertex;\n            this.off('drag', this.onDrag);\n            this.off('dragstart', this.onDragStart);\n            this.off('dragend', this.onDragEnd);\n            this.off('mouseup', this.onMouseup);\n            this.off('click', this.onClick);\n            this.off('contextmenu', this.onContextMenu);\n            this.off('mousedown touchstart', this.onMouseDown);\n            this.off('mouseover', this.onMouseOver);\n            this.off('mouseout', this.onMouseOut);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onDrag: function onDrag(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDrag(e);\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this._map.layerPointToLatLng(iconPos);\n            this.latlng.update(latlng);\n            this._latlng = this.latlng; // Push back to Leaflet our reference.\n            this.editor.refresh();\n            if (this.middleMarker) this.middleMarker.updateLatLng();\n            var next = this.getNext();\n            if (next && next.middleMarker) next.middleMarker.updateLatLng();\n        },\n\n        onDragStart: function onDragStart(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragStart(e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragEnd(e);\n        },\n\n        onClick: function onClick(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerClick(e);\n        },\n\n        onMouseup: function onMouseup(e) {\n            L.DomEvent.stop(e);\n            e.vertex = this;\n            this.editor.map.fire('mouseup', e);\n        },\n\n        onContextMenu: function onContextMenu(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerContextMenu(e);\n        },\n\n        onMouseDown: function onMouseDown(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseDown(e);\n        },\n\n        onMouseOver: function onMouseOver(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOver(e);\n        },\n\n        onMouseOut: function onMouseOut(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOut(e);\n        },\n\n        // 🍂method delete()\n        // Delete a vertex and the related LatLng.\n        delete: function _delete() {\n            var next = this.getNext(); // Compute before changing latlng\n            this.latlngs.splice(this.getIndex(), 1);\n            this.editor.editLayer.removeLayer(this);\n            this.editor.onVertexDeleted({ latlng: this.latlng, vertex: this });\n            if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n            if (next) next.resetMiddleMarker();\n            this.editor.refresh();\n        },\n\n        // 🍂method getIndex(): int\n        // Get the index of the current vertex among others of the same LatLngs group.\n        getIndex: function getIndex() {\n            return this.latlngs.indexOf(this.latlng);\n        },\n\n        // 🍂method getLastIndex(): int\n        // Get last vertex index of the LatLngs group of the current vertex.\n        getLastIndex: function getLastIndex() {\n            return this.latlngs.length - 1;\n        },\n\n        // 🍂method getPrevious(): VertexMarker\n        // Get the previous VertexMarker in the same LatLngs group.\n        getPrevious: function getPrevious() {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                previousIndex = index - 1;\n            if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n            var previous = this.latlngs[previousIndex];\n            if (previous) return previous.__vertex;\n        },\n\n        // 🍂method getNext(): VertexMarker\n        // Get the next VertexMarker in the same LatLngs group.\n        getNext: function getNext() {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                nextIndex = index + 1;\n            if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n            var next = this.latlngs[nextIndex];\n            if (next) return next.__vertex;\n        },\n\n        addMiddleMarker: function addMiddleMarker(previous) {\n            if (!this.editor.hasMiddleMarkers()) return;\n            previous = previous || this.getPrevious();\n            if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n        },\n\n        addMiddleMarkers: function addMiddleMarkers() {\n            if (!this.editor.hasMiddleMarkers()) return;\n            var previous = this.getPrevious();\n            if (previous) this.addMiddleMarker(previous);\n            var next = this.getNext();\n            if (next) next.resetMiddleMarker();\n        },\n\n        resetMiddleMarker: function resetMiddleMarker() {\n            if (this.middleMarker) this.middleMarker.delete();\n            this.addMiddleMarker();\n        },\n\n        // 🍂method split()\n        // Split the vertex LatLngs group at its index, if possible.\n        split: function split() {\n            if (!this.editor.splitShape) return; // Only for PolylineEditor\n            this.editor.splitShape(this.latlngs, this.getIndex());\n        },\n\n        // 🍂method continue()\n        // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n        continue: function _continue() {\n            if (!this.editor.continueBackward) return; // Only for PolylineEditor\n            var index = this.getIndex();\n            if (index === 0) this.editor.continueBackward(this.latlngs);else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option vertexMarkerClass: class = VertexMarker\n        // Class to be used as vertex, for path editing.\n        vertexMarkerClass: L.Editable.VertexMarker\n\n    });\n\n    L.Editable.MiddleMarker = L.Marker.extend({\n\n        options: {\n            opacity: 0.5,\n            className: 'leaflet-div-icon leaflet-middle-icon',\n            draggable: true\n        },\n\n        initialize: function initialize(left, right, latlngs, editor, options) {\n            this.left = left;\n            this.right = right;\n            this.editor = editor;\n            this.latlngs = latlngs;\n            L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n            this._opacity = this.options.opacity;\n            this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n            this.editor.editLayer.addLayer(this);\n            this.setVisibility();\n        },\n\n        setVisibility: function setVisibility() {\n            var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                size = L.point(this.options.icon.options.iconSize);\n            if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();else this.show();\n        },\n\n        show: function show() {\n            this.setOpacity(this._opacity);\n        },\n\n        hide: function hide() {\n            this.setOpacity(0);\n        },\n\n        updateLatLng: function updateLatLng() {\n            this.setLatLng(this.computeLatLng());\n            this.setVisibility();\n        },\n\n        computeLatLng: function computeLatLng() {\n            var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                y = (leftPoint.y + rightPoint.y) / 2,\n                x = (leftPoint.x + rightPoint.x) / 2;\n            return this.editor.map.containerPointToLatLng([x, y]);\n        },\n\n        onAdd: function onAdd(map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.on('zoomend', this.setVisibility, this);\n        },\n\n        onRemove: function onRemove(map) {\n            delete this.right.middleMarker;\n            L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.off('zoomend', this.setVisibility, this);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onMouseDown: function onMouseDown(e) {\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this.editor.map.layerPointToLatLng(iconPos);\n            e = {\n                originalEvent: e,\n                latlng: latlng\n            };\n            if (this.options.opacity === 0) return;\n            L.Editable.makeCancellable(e);\n            this.editor.onMiddleMarkerMouseDown(e);\n            if (e._cancelled) return;\n            this.latlngs.splice(this.index(), 0, e.latlng);\n            this.editor.refresh();\n            var icon = this._icon;\n            var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n            this.editor.onNewVertex(marker);\n            /* Hack to workaround browser not firing touchend when element is no more on DOM */\n            var parent = marker._icon.parentNode;\n            parent.removeChild(marker._icon);\n            marker._icon = icon;\n            parent.appendChild(marker._icon);\n            marker._initIcon();\n            marker._initInteraction();\n            marker.setOpacity(1);\n            /* End hack */\n            // Transfer ongoing dragging to real marker\n            L.Draggable._dragging = false;\n            marker.dragging._draggable._onDown(e.originalEvent);\n            this.delete();\n        },\n\n        delete: function _delete() {\n            this.editor.editLayer.removeLayer(this);\n        },\n\n        index: function index() {\n            return this.latlngs.indexOf(this.right.latlng);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option middleMarkerClass: class = VertexMarker\n        // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n        middleMarkerClass: L.Editable.MiddleMarker\n\n    });\n\n    // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n    // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n    // editor basically knows how to handle the edition.\n    L.Editable.BaseEditor = L.Handler.extend({\n\n        initialize: function initialize(map, feature, options) {\n            L.setOptions(this, options);\n            this.map = map;\n            this.feature = feature;\n            this.feature.editor = this;\n            this.editLayer = new L.LayerGroup();\n            this.tools = this.options.editTools || map.editTools;\n        },\n\n        // 🍂method enable(): this\n        // Set up the drawing tools for the feature to be editable.\n        addHooks: function addHooks() {\n            if (this.isConnected()) this.onFeatureAdd();else this.feature.once('add', this.onFeatureAdd, this);\n            this.onEnable();\n            this.feature.on(this._getEvents(), this);\n        },\n\n        // 🍂method disable(): this\n        // Remove the drawing tools for the feature.\n        removeHooks: function removeHooks() {\n            this.feature.off(this._getEvents(), this);\n            if (this.feature.dragging) this.feature.dragging.disable();\n            this.editLayer.clearLayers();\n            this.tools.editLayer.removeLayer(this.editLayer);\n            this.onDisable();\n            if (this._drawing) this.cancelDrawing();\n        },\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing with this editor.\n        drawing: function drawing() {\n            return !!this._drawing;\n        },\n\n        reset: function reset() {},\n\n        onFeatureAdd: function onFeatureAdd() {\n            this.tools.editLayer.addLayer(this.editLayer);\n            if (this.feature.dragging) this.feature.dragging.enable();\n        },\n\n        hasMiddleMarkers: function hasMiddleMarkers() {\n            return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n        },\n\n        fireAndForward: function fireAndForward(type, e) {\n            e = e || {};\n            e.layer = this.feature;\n            this.feature.fire(type, e);\n            this.tools.fireAndForward(type, e);\n        },\n\n        onEnable: function onEnable() {\n            // 🍂namespace Editable\n            // 🍂event editable:enable: Event\n            // Fired when an existing feature is ready to be edited.\n            this.fireAndForward('editable:enable');\n        },\n\n        onDisable: function onDisable() {\n            // 🍂namespace Editable\n            // 🍂event editable:disable: Event\n            // Fired when an existing feature is not ready anymore to be edited.\n            this.fireAndForward('editable:disable');\n        },\n\n        onEditing: function onEditing() {\n            // 🍂namespace Editable\n            // 🍂event editable:editing: Event\n            // Fired as soon as any change is made to the feature geometry.\n            this.fireAndForward('editable:editing');\n        },\n\n        onStartDrawing: function onStartDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:start: Event\n            // Fired when a feature is to be drawn.\n            this.fireAndForward('editable:drawing:start');\n        },\n\n        onEndDrawing: function onEndDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:end: Event\n            // Fired when a feature is not drawn anymore.\n            this.fireAndForward('editable:drawing:end');\n        },\n\n        onCancelDrawing: function onCancelDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:cancel: Event\n            // Fired when user cancel drawing while a feature is being drawn.\n            this.fireAndForward('editable:drawing:cancel');\n        },\n\n        onCommitDrawing: function onCommitDrawing(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:commit: Event\n            // Fired when user finish drawing a feature.\n            this.fireAndForward('editable:drawing:commit', e);\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mousedown: Event\n            // Fired when user `mousedown` while drawing.\n            this.fireAndForward('editable:drawing:mousedown', e);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mouseup: Event\n            // Fired when user `mouseup` while drawing.\n            this.fireAndForward('editable:drawing:mouseup', e);\n        },\n\n        startDrawing: function startDrawing() {\n            if (!this._drawing) this._drawing = L.Editable.FORWARD;\n            this.tools.registerForDrawing(this);\n            this.onStartDrawing();\n        },\n\n        commitDrawing: function commitDrawing(e) {\n            this.onCommitDrawing(e);\n            this.endDrawing();\n        },\n\n        cancelDrawing: function cancelDrawing() {\n            // If called during a vertex drag, the vertex will be removed before\n            // the mouseup fires on it. This is a workaround. Maybe better fix is\n            // To have L.Draggable reset it's status on disable (Leaflet side).\n            L.Draggable._dragging = false;\n            this.onCancelDrawing();\n            this.endDrawing();\n        },\n\n        endDrawing: function endDrawing() {\n            this._drawing = false;\n            this.tools.unregisterForDrawing(this);\n            this.onEndDrawing();\n        },\n\n        onDrawingClick: function onDrawingClick(e) {\n            if (!this.drawing()) return;\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:click: CancelableEvent\n            // Fired when user `click` while drawing, before any internal action is being processed.\n            this.fireAndForward('editable:drawing:click', e);\n            if (e._cancelled) return;\n            if (!this.isConnected()) this.connect(e);\n            this.processDrawingClick(e);\n        },\n\n        isConnected: function isConnected() {\n            return this.map.hasLayer(this.feature);\n        },\n\n        connect: function connect() {\n            this.tools.connectCreatedToMap(this.feature);\n            this.tools.editLayer.addLayer(this.editLayer);\n        },\n\n        onMove: function onMove(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:move: Event\n            // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n            this.fireAndForward('editable:drawing:move', e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            this.onMove(e);\n        },\n\n        _getEvents: function _getEvents() {\n            return {\n                dragstart: this.onDragStart,\n                drag: this.onDrag,\n                dragend: this.onDragEnd,\n                remove: this.disable\n            };\n        },\n\n        onDragStart: function onDragStart(e) {\n            this.onEditing();\n            // 🍂namespace Editable\n            // 🍂event editable:dragstart: Event\n            // Fired before a path feature is dragged.\n            this.fireAndForward('editable:dragstart', e);\n        },\n\n        onDrag: function onDrag(e) {\n            this.onMove(e);\n            // 🍂namespace Editable\n            // 🍂event editable:drag: Event\n            // Fired when a path feature is being dragged.\n            this.fireAndForward('editable:drag', e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            // 🍂namespace Editable\n            // 🍂event editable:dragend: Event\n            // Fired after a path feature has been dragged.\n            this.fireAndForward('editable:dragend', e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n    // 🍂inherits BaseEditor\n    // Editor for Marker.\n    L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) this.feature.setLatLng(e.latlng);\n        },\n\n        processDrawingClick: function processDrawingClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:clicked: Event\n            // Fired when user `click` while drawing, after all internal actions.\n            this.fireAndForward('editable:drawing:clicked', e);\n            this.commitDrawing(e);\n        },\n\n        connect: function connect(e) {\n            // On touch, the latlng has not been updated because there is\n            // no mousemove.\n            if (e) this.feature._latlng = e.latlng;\n            L.Editable.BaseEditor.prototype.connect.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n    // 🍂inherits BaseEditor\n    // Base class for all path editors.\n    L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n        CLOSED: false,\n        MIN_VERTEX: 2,\n\n        addHooks: function addHooks() {\n            L.Editable.BaseEditor.prototype.addHooks.call(this);\n            if (this.feature) this.initVertexMarkers();\n            return this;\n        },\n\n        initVertexMarkers: function initVertexMarkers(latlngs) {\n            if (!this.enabled()) return;\n            latlngs = latlngs || this.getLatLngs();\n            if (isFlat(latlngs)) this.addVertexMarkers(latlngs);else for (var i = 0; i < latlngs.length; i++) {\n                this.initVertexMarkers(latlngs[i]);\n            }\n        },\n\n        getLatLngs: function getLatLngs() {\n            return this.feature.getLatLngs();\n        },\n\n        // 🍂method reset()\n        // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n        reset: function reset() {\n            this.editLayer.clearLayers();\n            this.initVertexMarkers();\n        },\n\n        addVertexMarker: function addVertexMarker(latlng, latlngs) {\n            return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n        },\n\n        onNewVertex: function onNewVertex(vertex) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:new: VertexEvent\n            // Fired when a new vertex is created.\n            this.fireAndForward('editable:vertex:new', { latlng: vertex.latlng, vertex: vertex });\n        },\n\n        addVertexMarkers: function addVertexMarkers(latlngs) {\n            for (var i = 0; i < latlngs.length; i++) {\n                this.addVertexMarker(latlngs[i], latlngs);\n            }\n        },\n\n        refreshVertexMarkers: function refreshVertexMarkers(latlngs) {\n            latlngs = latlngs || this.getDefaultLatLngs();\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].__vertex.update();\n            }\n        },\n\n        addMiddleMarker: function addMiddleMarker(left, right, latlngs) {\n            return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n        },\n\n        onVertexMarkerClick: function onVertexMarkerClick(e) {\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:click: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n            this.fireAndForward('editable:vertex:click', e);\n            if (e._cancelled) return;\n            if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n            var index = e.vertex.getIndex(),\n                commit;\n            if (e.originalEvent.ctrlKey) {\n                this.onVertexMarkerCtrlClick(e);\n            } else if (e.originalEvent.altKey) {\n                this.onVertexMarkerAltClick(e);\n            } else if (e.originalEvent.shiftKey) {\n                this.onVertexMarkerShiftClick(e);\n            } else if (e.originalEvent.metaKey) {\n                this.onVertexMarkerMetaKeyClick(e);\n            } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                if (index >= this.MIN_VERTEX - 1) commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                commit = true; // Allow to close on first point also for polygons\n            } else {\n                this.onVertexRawMarkerClick(e);\n            }\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:clicked: VertexEvent\n            // Fired when a `click` is issued on a vertex, after all internal actions.\n            this.fireAndForward('editable:vertex:clicked', e);\n            if (commit) this.commitDrawing(e);\n        },\n\n        onVertexRawMarkerClick: function onVertexRawMarkerClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n            this.fireAndForward('editable:vertex:rawclick', e);\n            if (e._cancelled) return;\n            if (!this.vertexCanBeDeleted(e.vertex)) return;\n            e.vertex.delete();\n        },\n\n        vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n            return vertex.latlngs.length > this.MIN_VERTEX;\n        },\n\n        onVertexDeleted: function onVertexDeleted(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:deleted: VertexEvent\n            // Fired after a vertex has been deleted by user.\n            this.fireAndForward('editable:vertex:deleted', e);\n        },\n\n        onVertexMarkerCtrlClick: function onVertexMarkerCtrlClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:ctrlclick: VertexEvent\n            // Fired when a `click` with `ctrlKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:ctrlclick', e);\n        },\n\n        onVertexMarkerShiftClick: function onVertexMarkerShiftClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:shiftclick: VertexEvent\n            // Fired when a `click` with `shiftKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:shiftclick', e);\n        },\n\n        onVertexMarkerMetaKeyClick: function onVertexMarkerMetaKeyClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:metakeyclick: VertexEvent\n            // Fired when a `click` with `metaKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:metakeyclick', e);\n        },\n\n        onVertexMarkerAltClick: function onVertexMarkerAltClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:altclick: VertexEvent\n            // Fired when a `click` with `altKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:altclick', e);\n        },\n\n        onVertexMarkerContextMenu: function onVertexMarkerContextMenu(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:contextmenu: VertexEvent\n            // Fired when a `contextmenu` is issued on a vertex.\n            this.fireAndForward('editable:vertex:contextmenu', e);\n        },\n\n        onVertexMarkerMouseDown: function onVertexMarkerMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mousedown: VertexEvent\n            // Fired when user `mousedown` a vertex.\n            this.fireAndForward('editable:vertex:mousedown', e);\n        },\n\n        onVertexMarkerMouseOver: function onVertexMarkerMouseOver(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseover: VertexEvent\n            // Fired when a user's mouse enters the vertex\n            this.fireAndForward('editable:vertex:mouseover', e);\n        },\n\n        onVertexMarkerMouseOut: function onVertexMarkerMouseOut(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseout: VertexEvent\n            // Fired when a user's mouse leaves the vertex\n            this.fireAndForward('editable:vertex:mouseout', e);\n        },\n\n        onMiddleMarkerMouseDown: function onMiddleMarkerMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section MiddleMarker events\n            // 🍂event editable:middlemarker:mousedown: VertexEvent\n            // Fired when user `mousedown` a middle marker.\n            this.fireAndForward('editable:middlemarker:mousedown', e);\n        },\n\n        onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n            this.onMove(e);\n            if (this.feature._bounds) this.extendBounds(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:drag: VertexEvent\n            // Fired when a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:drag', e);\n        },\n\n        onVertexMarkerDragStart: function onVertexMarkerDragStart(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragstart: VertexEvent\n            // Fired before a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragstart', e);\n        },\n\n        onVertexMarkerDragEnd: function onVertexMarkerDragEnd(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragend: VertexEvent\n            // Fired after a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragend', e);\n        },\n\n        setDrawnLatLngs: function setDrawnLatLngs(latlngs) {\n            this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n        },\n\n        startDrawing: function startDrawing() {\n            if (!this._drawnLatLngs) this.setDrawnLatLngs();\n            L.Editable.BaseEditor.prototype.startDrawing.call(this);\n        },\n\n        startDrawingForward: function startDrawingForward() {\n            this.startDrawing();\n        },\n\n        endDrawing: function endDrawing() {\n            this.tools.detachForwardLineGuide();\n            this.tools.detachBackwardLineGuide();\n            if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n            L.Editable.BaseEditor.prototype.endDrawing.call(this);\n            delete this._drawnLatLngs;\n        },\n\n        addLatLng: function addLatLng(latlng) {\n            if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);else this._drawnLatLngs.unshift(latlng);\n            this.feature._bounds.extend(latlng);\n            var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n            this.onNewVertex(vertex);\n            this.refresh();\n        },\n\n        newPointForward: function newPointForward(latlng) {\n            this.addLatLng(latlng);\n            this.tools.attachForwardLineGuide();\n            this.tools.anchorForwardLineGuide(latlng);\n        },\n\n        newPointBackward: function newPointBackward(latlng) {\n            this.addLatLng(latlng);\n            this.tools.anchorBackwardLineGuide(latlng);\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method push()\n        // Programmatically add a point while drawing.\n        push: function push(latlng) {\n            if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);else this.newPointBackward(latlng);\n        },\n\n        removeLatLng: function removeLatLng(latlng) {\n            latlng.__vertex.delete();\n            this.refresh();\n        },\n\n        // 🍂method pop(): L.LatLng or null\n        // Programmatically remove last point (if any) while drawing.\n        pop: function pop() {\n            if (this._drawnLatLngs.length <= 1) return;\n            var latlng;\n            if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];else latlng = this._drawnLatLngs[0];\n            this.removeLatLng(latlng);\n            if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n            return latlng;\n        },\n\n        processDrawingClick: function processDrawingClick(e) {\n            if (e.vertex && e.vertex.editor === this) return;\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);else this.newPointBackward(e.latlng);\n            this.fireAndForward('editable:drawing:clicked', e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) {\n                this.tools.moveForwardLineGuide(e.latlng);\n                this.tools.moveBackwardLineGuide(e.latlng);\n            }\n        },\n\n        refresh: function refresh() {\n            this.feature.redraw();\n            this.onEditing();\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method newShape(latlng?: L.LatLng)\n        // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n        // if optional `latlng` is given, start a path at this point.\n        newShape: function newShape(latlng) {\n            var shape = this.addNewEmptyShape();\n            if (!shape) return;\n            this.setDrawnLatLngs(shape[0] || shape); // Polygon or polyline\n            this.startDrawingForward();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:new: ShapeEvent\n            // Fired when a new shape is created in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:new', { shape: shape });\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        deleteShape: function deleteShape(shape, latlngs) {\n            var e = { shape: shape };\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:delete: CancelableShapeEvent\n            // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:delete', e);\n            if (e._cancelled) return;\n            shape = this._deleteShape(shape, latlngs);\n            if (this.ensureNotFlat) this.ensureNotFlat(); // Polygon.\n            this.feature.setLatLngs(this.getLatLngs()); // Force bounds reset.\n            this.refresh();\n            this.reset();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:deleted: ShapeEvent\n            // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:deleted', { shape: shape });\n            return shape;\n        },\n\n        _deleteShape: function _deleteShape(shape, latlngs) {\n            latlngs = latlngs || this.getLatLngs();\n            if (!latlngs.length) return;\n            var self = this,\n                inplaceDelete = function inplaceDelete(latlngs, shape) {\n                // Called when deleting a flat latlngs\n                shape = latlngs.splice(0, Number.MAX_VALUE);\n                return shape;\n            },\n                spliceDelete = function spliceDelete(latlngs, shape) {\n                // Called when removing a latlngs inside an array\n                latlngs.splice(latlngs.indexOf(shape), 1);\n                if (!latlngs.length) self._deleteShape(latlngs);\n                return shape;\n            };\n            if (latlngs === shape) return inplaceDelete(latlngs, shape);\n            for (var i = 0; i < latlngs.length; i++) {\n                if (latlngs[i] === shape) return spliceDelete(latlngs, shape);else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n            }\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n        // Remove a path shape at the given `latlng`.\n        deleteShapeAt: function deleteShapeAt(latlng) {\n            var shape = this.feature.shapeAt(latlng);\n            if (shape) return this.deleteShape(shape);\n        },\n\n        // 🍂method appendShape(shape: Array)\n        // Append a new shape to the Polygon or Polyline.\n        appendShape: function appendShape(shape) {\n            this.insertShape(shape);\n        },\n\n        // 🍂method prependShape(shape: Array)\n        // Prepend a new shape to the Polygon or Polyline.\n        prependShape: function prependShape(shape) {\n            this.insertShape(shape, 0);\n        },\n\n        // 🍂method insertShape(shape: Array, index: int)\n        // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n        insertShape: function insertShape(shape, index) {\n            this.ensureMulti();\n            shape = this.formatShape(shape);\n            if (typeof index === 'undefined') index = this.feature._latlngs.length;\n            this.feature._latlngs.splice(index, 0, shape);\n            this.feature.redraw();\n            if (this._enabled) this.reset();\n        },\n\n        extendBounds: function extendBounds(e) {\n            this.feature._bounds.extend(e.vertex.latlng);\n        },\n\n        onDragStart: function onDragStart(e) {\n            this.editLayer.clearLayers();\n            L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            this.initVertexMarkers();\n            L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n        startDrawingBackward: function startDrawingBackward() {\n            this._drawing = L.Editable.BACKWARD;\n            this.startDrawing();\n        },\n\n        // 🍂method continueBackward(latlngs?: Array)\n        // Set up drawing tools to continue the line backward.\n        continueBackward: function continueBackward(latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachBackwardLineGuide();\n                this.tools.anchorBackwardLineGuide(latlngs[0]);\n            }\n            this.startDrawingBackward();\n        },\n\n        // 🍂method continueForward(latlngs?: Array)\n        // Set up drawing tools to continue the line forward.\n        continueForward: function continueForward(latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n            }\n            this.startDrawingForward();\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n            latlngs = latlngs || this.feature._latlngs;\n            if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;else return this.getDefaultLatLngs(latlngs[0]);\n        },\n\n        ensureMulti: function ensureMulti() {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        addNewEmptyShape: function addNewEmptyShape() {\n            if (this.feature._latlngs.length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        formatShape: function formatShape(shape) {\n            if (isFlat(shape)) return shape;else if (shape[0]) return this.formatShape(shape[0]);\n        },\n\n        // 🍂method splitShape(latlngs?: Array, index: int)\n        // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n        splitShape: function splitShape(shape, index) {\n            if (!index || index >= shape.length - 1) return;\n            this.ensureMulti();\n            var shapeIndex = this.feature._latlngs.indexOf(shape);\n            if (shapeIndex === -1) return;\n            var first = shape.slice(0, index + 1),\n                second = shape.slice(index);\n            // We deal with reference, we don't want twice the same latlng around.\n            second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n            this.feature._latlngs.splice(shapeIndex, 1, first, second);\n            this.refresh();\n            this.reset();\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 3,\n\n        newPointForward: function newPointForward(latlng) {\n            L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n            if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n            if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n        },\n\n        addNewEmptyHole: function addNewEmptyHole(latlng) {\n            this.ensureNotFlat();\n            var latlngs = this.feature.shapeAt(latlng);\n            if (!latlngs) return;\n            var holes = [];\n            latlngs.push(holes);\n            return holes;\n        },\n\n        // 🍂method newHole(latlng?: L.LatLng, index: int)\n        // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n        newHole: function newHole(latlng) {\n            var holes = this.addNewEmptyHole(latlng);\n            if (!holes) return;\n            this.setDrawnLatLngs(holes);\n            this.startDrawingForward();\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        addNewEmptyShape: function addNewEmptyShape() {\n            if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        ensureMulti: function ensureMulti() {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        ensureNotFlat: function ensureNotFlat() {\n            if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n        },\n\n        vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n            var parent = this.feature.parentShape(vertex.latlngs),\n                idx = L.Util.indexOf(parent, vertex.latlngs);\n            if (idx > 0) return true; // Holes can be totally deleted without removing the layer itself.\n            return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs() {\n            if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n            return this.feature._latlngs[0];\n        },\n\n        formatShape: function formatShape(shape) {\n            // [[1, 2], [3, 4]] => must be nested\n            // [] => must be nested\n            // [[]] => is already nested\n            if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];else return shape;\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n    // 🍂inherits PathEditor\n    L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 4,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        extendBounds: function extendBounds(e) {\n            var index = e.vertex.getIndex(),\n                next = e.vertex.getNext(),\n                previous = e.vertex.getPrevious(),\n                oppositeIndex = (index + 2) % 4,\n                opposite = e.vertex.latlngs[oppositeIndex],\n                bounds = new L.LatLngBounds(e.latlng, opposite);\n            // Update latlngs by hand to preserve order.\n            previous.latlng.update([e.latlng.lat, opposite.lng]);\n            next.latlng.update([opposite.lat, e.latlng.lng]);\n            this.updateBounds(bounds);\n            this.refreshVertexMarkers();\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this.connect();\n            var latlngs = this.getDefaultLatLngs();\n            // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n            // which is the case here as all latlngs are [0, 0]\n            if (latlngs.length === 3) latlngs.push(e.latlng);\n            var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n            this.updateBounds(bounds);\n            this.updateLatLngs(bounds);\n            this.refresh();\n            this.reset();\n            // Stop dragging map.\n            // L.Draggable has two workflows:\n            // - mousedown => mousemove => mouseup\n            // - touchstart => touchmove => touchend\n            // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n            // can deal with mousedown, but then when in a touch device, we are dealing with\n            // simulated events (actually simulated by L.Map.Tap), which are no more taken\n            // into account by L.Draggable.\n            // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the bottom right corner.\n            // Should we refine which corner will handle the drag according to\n            // drag direction?\n            latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n            return latlngs || this.feature._latlngs[0];\n        },\n\n        updateBounds: function updateBounds(bounds) {\n            this.feature._bounds = bounds;\n        },\n\n        updateLatLngs: function updateLatLngs(bounds) {\n            var latlngs = this.getDefaultLatLngs(),\n                newLatlngs = this.feature._boundsToLatLngs(bounds);\n            // Keep references.\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].update(newLatlngs[i]);\n            }\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n    // 🍂inherits PathEditor\n    L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n        MIN_VERTEX: 2,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        initialize: function initialize(map, feature, options) {\n            L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n            this._resizeLatLng = this.computeResizeLatLng();\n        },\n\n        computeResizeLatLng: function computeResizeLatLng() {\n            // While circle is not added to the map, _radius is not set.\n            var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                point = this.map.project(this.feature._latlng);\n            return this.map.unproject([point.x + delta, point.y - delta]);\n        },\n\n        updateResizeLatLng: function updateResizeLatLng() {\n            this._resizeLatLng.update(this.computeResizeLatLng());\n            this._resizeLatLng.__vertex.update();\n        },\n\n        getLatLngs: function getLatLngs() {\n            return [this.feature._latlng, this._resizeLatLng];\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs() {\n            return this.getLatLngs();\n        },\n\n        onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n            if (e.vertex.getIndex() === 1) this.resize(e);else this.updateResizeLatLng(e);\n            L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n        },\n\n        resize: function resize(e) {\n            var radius = this.feature._latlng.distanceTo(e.latlng);\n            this.feature.setRadius(radius);\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this._resizeLatLng.update(e.latlng);\n            this.feature._latlng.update(e.latlng);\n            this.connect();\n            // Stop dragging map.\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the radius handler.\n            this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        onDrag: function onDrag(e) {\n            L.Editable.PathEditor.prototype.onDrag.call(this, e);\n            this.feature.dragging.updateLatLng(this._resizeLatLng);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class EditableMixin\n    // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n    // and `L.Marker`. It adds some methods to them.\n    // *When editing is enabled, the editor is accessible on the instance with the\n    // `editor` property.*\n    var EditableMixin = {\n\n        createEditor: function createEditor(map) {\n            map = map || this._map;\n            var tools = (this.options.editOptions || {}).editTools || map.editTools;\n            if (!tools) throw Error('Unable to detect Editable instance.');\n            var Klass = this.options.editorClass || this.getEditorClass(tools);\n            return new Klass(map, this, this.options.editOptions);\n        },\n\n        // 🍂method enableEdit(map?: L.Map): this.editor\n        // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n        enableEdit: function enableEdit(map) {\n            if (!this.editor) this.createEditor(map);\n            this.editor.enable();\n            return this.editor;\n        },\n\n        // 🍂method editEnabled(): boolean\n        // Return true if current instance has an editor attached, and this editor is enabled.\n        editEnabled: function editEnabled() {\n            return this.editor && this.editor.enabled();\n        },\n\n        // 🍂method disableEdit()\n        // Disable editing, also remove the editor property reference.\n        disableEdit: function disableEdit() {\n            if (this.editor) {\n                this.editor.disable();\n                delete this.editor;\n            }\n        },\n\n        // 🍂method toggleEdit()\n        // Enable or disable editing, according to current status.\n        toggleEdit: function toggleEdit() {\n            if (this.editEnabled()) this.disableEdit();else this.enableEdit();\n        },\n\n        _onEditableAdd: function _onEditableAdd() {\n            if (this.editor) this.enableEdit();\n        }\n\n    };\n\n    var PolylineMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.polylineEditorClass ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n        },\n\n        shapeAt: function shapeAt(latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n            }return shape;\n        },\n\n        isInLatLngs: function isInLatLngs(l, latlngs) {\n            if (!latlngs) return false;\n            var i,\n                k,\n                len,\n                part = [],\n                p,\n                w = this._clickTolerance();\n            this._projectLatlngs(latlngs, part, this._pxBounds);\n            part = part[0];\n            p = this._map.latLngToLayerPoint(l);\n\n            if (!this._pxBounds.contains(p)) {\n                return false;\n            }\n            for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    };\n\n    var PolygonMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.polygonEditorClass ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n        },\n\n        shapeAt: function shapeAt(latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n            // - latlngs is an array of arrays of arrays, this is a multi, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n            }return shape;\n        },\n\n        isInLatLngs: function isInLatLngs(l, latlngs) {\n            var inside = false,\n                l1,\n                l2,\n                j,\n                k,\n                len2;\n\n            for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                l1 = latlngs[j];\n                l2 = latlngs[k];\n\n                if (l1.lat > l.lat !== l2.lat > l.lat && l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng) {\n                    inside = !inside;\n                }\n            }\n\n            return inside;\n        },\n\n        parentShape: function parentShape(shape, latlngs) {\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs) return;\n            var idx = L.Util.indexOf(latlngs, shape);\n            if (idx !== -1) return latlngs;\n            for (var i = 0; i < latlngs.length; i++) {\n                idx = L.Util.indexOf(latlngs[i], shape);\n                if (idx !== -1) return latlngs[i];\n            }\n        }\n\n    };\n\n    var MarkerMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.markerEditorClass ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n        }\n\n    };\n\n    var RectangleMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.rectangleEditorClass ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n        }\n\n    };\n\n    var CircleMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.circleEditorClass ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n        }\n\n    };\n\n    var keepEditable = function keepEditable() {\n        // Make sure you can remove/readd an editable layer.\n        this.on('add', this._onEditableAdd);\n    };\n\n    var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat; // <=> 1.1 compat.\n\n\n    if (L.Polyline) {\n        L.Polyline.include(EditableMixin);\n        L.Polyline.include(PolylineMixin);\n        L.Polyline.addInitHook(keepEditable);\n    }\n    if (L.Polygon) {\n        L.Polygon.include(EditableMixin);\n        L.Polygon.include(PolygonMixin);\n    }\n    if (L.Marker) {\n        L.Marker.include(EditableMixin);\n        L.Marker.include(MarkerMixin);\n        L.Marker.addInitHook(keepEditable);\n    }\n    if (L.Rectangle) {\n        L.Rectangle.include(EditableMixin);\n        L.Rectangle.include(RectangleMixin);\n    }\n    if (L.Circle) {\n        L.Circle.include(EditableMixin);\n        L.Circle.include(CircleMixin);\n    }\n\n    L.LatLng.prototype.update = function (latlng) {\n        latlng = L.latLng(latlng);\n        this.lat = latlng.lat;\n        this.lng = latlng.lng;\n    };\n}\ninit(window.L);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Vue2LeafletEditablePlugin.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fc5a58050f4a70b48c6e","function init(L){\n    // 🍂miniclass CancelableEvent (Event objects)\n    // 🍂method cancel()\n    // Cancel any subsequent action.\n\n    // 🍂miniclass VertexEvent (Event objects)\n    // 🍂property vertex: VertexMarker\n    // The vertex that fires the event.\n\n    // 🍂miniclass ShapeEvent (Event objects)\n    // 🍂property shape: Array\n    // The shape (LatLngs array) subject of the action.\n\n    // 🍂miniclass CancelableVertexEvent (Event objects)\n    // 🍂inherits VertexEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass CancelableShapeEvent (Event objects)\n    // 🍂inherits ShapeEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass LayerEvent (Event objects)\n    // 🍂property layer: object\n    // The Layer (Marker, Polyline…) subject of the action.\n\n    // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n    // Main edition handler. By default, it is attached to the map\n    // as `map.editTools` property.\n    // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n    // the behaviour: using options, listening to events, or extending.\n    L.Editable = L.Evented.extend({\n\n        statics: {\n            FORWARD: 1,\n            BACKWARD: -1\n        },\n\n        options: {\n\n            // You can pass them when creating a map using the `editOptions` key.\n            // 🍂option zIndex: int = 1000\n            // The default zIndex of the editing tools.\n            zIndex: 1000,\n\n            // 🍂option polygonClass: class = L.Polygon\n            // Class to be used when creating a new Polygon.\n            polygonClass: L.Polygon,\n\n            // 🍂option polylineClass: class = L.Polyline\n            // Class to be used when creating a new Polyline.\n            polylineClass: L.Polyline,\n\n            // 🍂option markerClass: class = L.Marker\n            // Class to be used when creating a new Marker.\n            markerClass: L.Marker,\n\n            // 🍂option rectangleClass: class = L.Rectangle\n            // Class to be used when creating a new Rectangle.\n            rectangleClass: L.Rectangle,\n\n            // 🍂option circleClass: class = L.Circle\n            // Class to be used when creating a new Circle.\n            circleClass: L.Circle,\n\n            // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n            // CSS class to be added to the map container while drawing.\n            drawingCSSClass: 'leaflet-editable-drawing',\n\n            // 🍂option drawingCursor: const = 'crosshair'\n            // Cursor mode set to the map while drawing.\n            drawingCursor: 'crosshair',\n\n            // 🍂option editLayer: Layer = new L.LayerGroup()\n            // Layer used to store edit tools (vertex, line guide…).\n            editLayer: undefined,\n\n            // 🍂option featuresLayer: Layer = new L.LayerGroup()\n            // Default layer used to store drawn features (Marker, Polyline…).\n            featuresLayer: undefined,\n\n            // 🍂option polylineEditorClass: class = PolylineEditor\n            // Class to be used as Polyline editor.\n            polylineEditorClass: undefined,\n\n            // 🍂option polygonEditorClass: class = PolygonEditor\n            // Class to be used as Polygon editor.\n            polygonEditorClass: undefined,\n\n            // 🍂option markerEditorClass: class = MarkerEditor\n            // Class to be used as Marker editor.\n            markerEditorClass: undefined,\n\n            // 🍂option rectangleEditorClass: class = RectangleEditor\n            // Class to be used as Rectangle editor.\n            rectangleEditorClass: undefined,\n\n            // 🍂option circleEditorClass: class = CircleEditor\n            // Class to be used as Circle editor.\n            circleEditorClass: undefined,\n\n            // 🍂option lineGuideOptions: hash = {}\n            // Options to be passed to the line guides.\n            lineGuideOptions: {},\n\n            // 🍂option skipMiddleMarkers: boolean = false\n            // Set this to true if you don't want middle markers.\n            skipMiddleMarkers: false\n\n        },\n\n        initialize: function (map, options) {\n            L.setOptions(this, options);\n            this._lastZIndex = this.options.zIndex;\n            this.map = map;\n            this.editLayer = this.createEditLayer();\n            this.featuresLayer = this.createFeaturesLayer();\n            this.forwardLineGuide = this.createLineGuide();\n            this.backwardLineGuide = this.createLineGuide();\n        },\n\n        fireAndForward: function (type, e) {\n            e = e || {};\n            e.editTools = this;\n            this.fire(type, e);\n            this.map.fire(type, e);\n        },\n\n        createLineGuide: function () {\n            var options = L.extend({dashArray: '5,10', weight: 1, interactive: false}, this.options.lineGuideOptions);\n            return L.polyline([], options);\n        },\n\n        createVertexIcon: function (options) {\n            return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n        },\n\n        createEditLayer: function () {\n            return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        createFeaturesLayer: function () {\n            return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        moveForwardLineGuide: function (latlng) {\n            if (this.forwardLineGuide._latlngs.length) {\n                this.forwardLineGuide._latlngs[1] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            }\n        },\n\n        moveBackwardLineGuide: function (latlng) {\n            if (this.backwardLineGuide._latlngs.length) {\n                this.backwardLineGuide._latlngs[1] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            }\n        },\n\n        anchorForwardLineGuide: function (latlng) {\n            this.forwardLineGuide._latlngs[0] = latlng;\n            this.forwardLineGuide._bounds.extend(latlng);\n            this.forwardLineGuide.redraw();\n        },\n\n        anchorBackwardLineGuide: function (latlng) {\n            this.backwardLineGuide._latlngs[0] = latlng;\n            this.backwardLineGuide._bounds.extend(latlng);\n            this.backwardLineGuide.redraw();\n        },\n\n        attachForwardLineGuide: function () {\n            this.editLayer.addLayer(this.forwardLineGuide);\n        },\n\n        attachBackwardLineGuide: function () {\n            this.editLayer.addLayer(this.backwardLineGuide);\n        },\n\n        detachForwardLineGuide: function () {\n            this.forwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.forwardLineGuide);\n        },\n\n        detachBackwardLineGuide: function () {\n            this.backwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.backwardLineGuide);\n        },\n\n        blockEvents: function () {\n            // Hack: force map not to listen to other layers events while drawing.\n            if (!this._oldTargets) {\n                this._oldTargets = this.map._targets;\n                this.map._targets = {};\n            }\n        },\n\n        unblockEvents: function () {\n            if (this._oldTargets) {\n                // Reset, but keep targets created while drawing.\n                this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                delete this._oldTargets;\n            }\n        },\n\n        registerForDrawing: function (editor) {\n            if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n            this.blockEvents();\n            editor.reset();  // Make sure editor tools still receive events.\n            this._drawingEditor = editor;\n            this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.on('mousedown', this.onMousedown, this);\n            this.map.on('mouseup', this.onMouseup, this);\n            L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n            this.defaultMapCursor = this.map._container.style.cursor;\n            this.map._container.style.cursor = this.options.drawingCursor;\n        },\n\n        unregisterForDrawing: function (editor) {\n            this.unblockEvents();\n            L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n            this.map._container.style.cursor = this.defaultMapCursor;\n            editor = editor || this._drawingEditor;\n            if (!editor) return;\n            this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.off('mousedown', this.onMousedown, this);\n            this.map.off('mouseup', this.onMouseup, this);\n            if (editor !== this._drawingEditor) return;\n            delete this._drawingEditor;\n            if (editor._drawing) editor.cancelDrawing();\n        },\n\n        onMousedown: function (e) {\n            if (e.originalEvent.which != 1) return;\n            this._mouseDown = e;\n            this._drawingEditor.onDrawingMouseDown(e);\n        },\n\n        onMouseup: function (e) {\n            if (this._mouseDown) {\n                var editor = this._drawingEditor,\n                    mouseDown = this._mouseDown;\n                this._mouseDown = null;\n                editor.onDrawingMouseUp(e);\n                if (this._drawingEditor !== editor) return;  // onDrawingMouseUp may call unregisterFromDrawing.\n                var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n            }\n        },\n\n        // 🍂section Public methods\n        // You will generally access them by the `map.editTools`\n        // instance:\n        //\n        // `map.editTools.startPolyline();`\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing.\n        drawing: function () {\n            return this._drawingEditor && this._drawingEditor.drawing();\n        },\n\n        // 🍂method stopDrawing()\n        // When you need to stop any ongoing drawing, without needing to know which editor is active.\n        stopDrawing: function () {\n            this.unregisterForDrawing();\n        },\n\n        // 🍂method commitDrawing()\n        // When you need to commit any ongoing drawing, without needing to know which editor is active.\n        commitDrawing: function (e) {\n            if (!this._drawingEditor) return;\n            this._drawingEditor.commitDrawing(e);\n        },\n\n        connectCreatedToMap: function (layer) {\n            return this.featuresLayer.addLayer(layer);\n        },\n\n        // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n        // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polyline class constructor.\n        startPolyline: function (latlng, options) {\n            var line = this.createPolyline([], options);\n            line.enableEdit(this.map).newShape(latlng);\n            return line;\n        },\n\n        // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n        // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polygon class constructor.\n        startPolygon: function (latlng, options) {\n            var polygon = this.createPolygon([], options);\n            polygon.enableEdit(this.map).newShape(latlng);\n            return polygon;\n        },\n\n        // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n        // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n        // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n        // If `options` is given, it will be passed to the Marker class constructor.\n        startMarker: function (latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var marker = this.createMarker(latlng, options);\n            marker.enableEdit(this.map).startDrawing();\n            return marker;\n        },\n\n        // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n        // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Rectangle class constructor.\n        startRectangle: function(latlng, options) {\n            var corner = latlng || L.latLng([0, 0]);\n            var bounds = new L.LatLngBounds(corner, corner);\n            var rectangle = this.createRectangle(bounds, options);\n            rectangle.enableEdit(this.map).startDrawing();\n            return rectangle;\n        },\n\n        // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n        // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Circle class constructor.\n        startCircle: function (latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var circle = this.createCircle(latlng, options);\n            circle.enableEdit(this.map).startDrawing();\n            return circle;\n        },\n\n        startHole: function (editor, latlng) {\n            editor.newHole(latlng);\n        },\n\n        createLayer: function (klass, latlngs, options) {\n            options = L.Util.extend({editOptions: {editTools: this}}, options);\n            var layer = new klass(latlngs, options);\n            // 🍂namespace Editable\n            // 🍂event editable:created: LayerEvent\n            // Fired when a new feature (Marker, Polyline…) is created.\n            this.fireAndForward('editable:created', {layer: layer});\n            return layer;\n        },\n\n        createPolyline: function (latlngs, options) {\n            return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n        },\n\n        createPolygon: function (latlngs, options) {\n            return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n        },\n\n        createMarker: function (latlng, options) {\n            return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n        },\n\n        createRectangle: function (bounds, options) {\n            return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n        },\n\n        createCircle: function (latlng, options) {\n            return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n        }\n\n    });\n\n    L.extend(L.Editable, {\n\n        makeCancellable: function (e) {\n            e.cancel = function () {\n                e._cancelled = true;\n            };\n        }\n\n    });\n\n    // 🍂namespace Map; 🍂class Map\n    // Leaflet.Editable add options and events to the `L.Map` object.\n    // See `Editable` events for the list of events fired on the Map.\n    // 🍂example\n    //\n    // ```js\n    // var map = L.map('map', {\n    //  editable: true,\n    //  editOptions: {\n    //    …\n    // }\n    // });\n    // ```\n    // 🍂section Editable Map Options\n    L.Map.mergeOptions({\n\n        // 🍂namespace Map\n        // 🍂section Map Options\n        // 🍂option editToolsClass: class = L.Editable\n        // Class to be used as vertex, for path editing.\n        editToolsClass: L.Editable,\n\n        // 🍂option editable: boolean = false\n        // Whether to create a L.Editable instance at map init.\n        editable: false,\n\n        // 🍂option editOptions: hash = {}\n        // Options to pass to L.Editable when instantiating.\n        editOptions: {}\n\n    });\n\n    L.Map.addInitHook(function () {\n\n        this.whenReady(function () {\n            if (this.options.editable) {\n                this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n            }\n        });\n\n    });\n\n    L.Editable.VertexIcon = L.DivIcon.extend({\n\n        options: {\n            iconSize: new L.Point(8, 8)\n        }\n\n    });\n\n    L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n        options: {\n            iconSize: new L.Point(20, 20)\n        }\n\n    });\n\n\n    // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n    L.Editable.VertexMarker = L.Marker.extend({\n\n        options: {\n            draggable: true,\n            className: 'leaflet-div-icon leaflet-vertex-icon'\n        },\n\n\n        // 🍂section Public methods\n        // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n        // instance when listening for events like `editable:vertex:ctrlclick`.\n\n        initialize: function (latlng, latlngs, editor, options) {\n            // We don't use this._latlng, because on drag Leaflet replace it while\n            // we want to keep reference.\n            this.latlng = latlng;\n            this.latlngs = latlngs;\n            this.editor = editor;\n            L.Marker.prototype.initialize.call(this, latlng, options);\n            this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n            this.latlng.__vertex = this;\n            this.editor.editLayer.addLayer(this);\n            this.setZIndexOffset(editor.tools._lastZIndex + 1);\n        },\n\n        onAdd: function (map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            this.on('drag', this.onDrag);\n            this.on('dragstart', this.onDragStart);\n            this.on('dragend', this.onDragEnd);\n            this.on('mouseup', this.onMouseup);\n            this.on('click', this.onClick);\n            this.on('contextmenu', this.onContextMenu);\n            this.on('mousedown touchstart', this.onMouseDown);\n            this.on('mouseover', this.onMouseOver);\n            this.on('mouseout', this.onMouseOut);\n            this.addMiddleMarkers();\n        },\n\n        onRemove: function (map) {\n            if (this.middleMarker) this.middleMarker.delete();\n            delete this.latlng.__vertex;\n            this.off('drag', this.onDrag);\n            this.off('dragstart', this.onDragStart);\n            this.off('dragend', this.onDragEnd);\n            this.off('mouseup', this.onMouseup);\n            this.off('click', this.onClick);\n            this.off('contextmenu', this.onContextMenu);\n            this.off('mousedown touchstart', this.onMouseDown);\n            this.off('mouseover', this.onMouseOver);\n            this.off('mouseout', this.onMouseOut);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onDrag: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDrag(e);\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this._map.layerPointToLatLng(iconPos);\n            this.latlng.update(latlng);\n            this._latlng = this.latlng;  // Push back to Leaflet our reference.\n            this.editor.refresh();\n            if (this.middleMarker) this.middleMarker.updateLatLng();\n            var next = this.getNext();\n            if (next && next.middleMarker) next.middleMarker.updateLatLng();\n        },\n\n        onDragStart: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragStart(e);\n        },\n\n        onDragEnd: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragEnd(e);\n        },\n\n        onClick: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerClick(e);\n        },\n\n        onMouseup: function (e) {\n            L.DomEvent.stop(e);\n            e.vertex = this;\n            this.editor.map.fire('mouseup', e);\n        },\n\n        onContextMenu: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerContextMenu(e);\n        },\n\n        onMouseDown: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseDown(e);\n        },\n\n        onMouseOver: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOver(e);\n        },\n\n        onMouseOut: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOut(e);\n        },\n\n        // 🍂method delete()\n        // Delete a vertex and the related LatLng.\n        delete: function () {\n            var next = this.getNext();  // Compute before changing latlng\n            this.latlngs.splice(this.getIndex(), 1);\n            this.editor.editLayer.removeLayer(this);\n            this.editor.onVertexDeleted({latlng: this.latlng, vertex: this});\n            if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n            if (next) next.resetMiddleMarker();\n            this.editor.refresh();\n        },\n\n        // 🍂method getIndex(): int\n        // Get the index of the current vertex among others of the same LatLngs group.\n        getIndex: function () {\n            return this.latlngs.indexOf(this.latlng);\n        },\n\n        // 🍂method getLastIndex(): int\n        // Get last vertex index of the LatLngs group of the current vertex.\n        getLastIndex: function () {\n            return this.latlngs.length - 1;\n        },\n\n        // 🍂method getPrevious(): VertexMarker\n        // Get the previous VertexMarker in the same LatLngs group.\n        getPrevious: function () {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                previousIndex = index - 1;\n            if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n            var previous = this.latlngs[previousIndex];\n            if (previous) return previous.__vertex;\n        },\n\n        // 🍂method getNext(): VertexMarker\n        // Get the next VertexMarker in the same LatLngs group.\n        getNext: function () {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                nextIndex = index + 1;\n            if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n            var next = this.latlngs[nextIndex];\n            if (next) return next.__vertex;\n        },\n\n        addMiddleMarker: function (previous) {\n            if (!this.editor.hasMiddleMarkers()) return;\n            previous = previous || this.getPrevious();\n            if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n        },\n\n        addMiddleMarkers: function () {\n            if (!this.editor.hasMiddleMarkers()) return;\n            var previous = this.getPrevious();\n            if (previous) this.addMiddleMarker(previous);\n            var next = this.getNext();\n            if (next) next.resetMiddleMarker();\n        },\n\n        resetMiddleMarker: function () {\n            if (this.middleMarker) this.middleMarker.delete();\n            this.addMiddleMarker();\n        },\n\n        // 🍂method split()\n        // Split the vertex LatLngs group at its index, if possible.\n        split: function () {\n            if (!this.editor.splitShape) return;  // Only for PolylineEditor\n            this.editor.splitShape(this.latlngs, this.getIndex());\n        },\n\n        // 🍂method continue()\n        // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n        continue: function () {\n            if (!this.editor.continueBackward) return;  // Only for PolylineEditor\n            var index = this.getIndex();\n            if (index === 0) this.editor.continueBackward(this.latlngs);\n            else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option vertexMarkerClass: class = VertexMarker\n        // Class to be used as vertex, for path editing.\n        vertexMarkerClass: L.Editable.VertexMarker\n\n    });\n\n    L.Editable.MiddleMarker = L.Marker.extend({\n\n        options: {\n            opacity: 0.5,\n            className: 'leaflet-div-icon leaflet-middle-icon',\n            draggable: true\n        },\n\n        initialize: function (left, right, latlngs, editor, options) {\n            this.left = left;\n            this.right = right;\n            this.editor = editor;\n            this.latlngs = latlngs;\n            L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n            this._opacity = this.options.opacity;\n            this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n            this.editor.editLayer.addLayer(this);\n            this.setVisibility();\n        },\n\n        setVisibility: function () {\n            var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                size = L.point(this.options.icon.options.iconSize);\n            if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();\n            else this.show();\n        },\n\n        show: function () {\n            this.setOpacity(this._opacity);\n        },\n\n        hide: function () {\n            this.setOpacity(0);\n        },\n\n        updateLatLng: function () {\n            this.setLatLng(this.computeLatLng());\n            this.setVisibility();\n        },\n\n        computeLatLng: function () {\n            var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                y = (leftPoint.y + rightPoint.y) / 2,\n                x = (leftPoint.x + rightPoint.x) / 2;\n            return this.editor.map.containerPointToLatLng([x, y]);\n        },\n\n        onAdd: function (map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.on('zoomend', this.setVisibility, this);\n        },\n\n        onRemove: function (map) {\n            delete this.right.middleMarker;\n            L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.off('zoomend', this.setVisibility, this);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onMouseDown: function (e) {\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this.editor.map.layerPointToLatLng(iconPos);\n            e = {\n                originalEvent: e,\n                latlng: latlng\n            };\n            if (this.options.opacity === 0) return;\n            L.Editable.makeCancellable(e);\n            this.editor.onMiddleMarkerMouseDown(e);\n            if (e._cancelled) return;\n            this.latlngs.splice(this.index(), 0, e.latlng);\n            this.editor.refresh();\n            var icon = this._icon;\n            var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n            this.editor.onNewVertex(marker);\n            /* Hack to workaround browser not firing touchend when element is no more on DOM */\n            var parent = marker._icon.parentNode;\n            parent.removeChild(marker._icon);\n            marker._icon = icon;\n            parent.appendChild(marker._icon);\n            marker._initIcon();\n            marker._initInteraction();\n            marker.setOpacity(1);\n            /* End hack */\n            // Transfer ongoing dragging to real marker\n            L.Draggable._dragging = false;\n            marker.dragging._draggable._onDown(e.originalEvent);\n            this.delete();\n        },\n\n        delete: function () {\n            this.editor.editLayer.removeLayer(this);\n        },\n\n        index: function () {\n            return this.latlngs.indexOf(this.right.latlng);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option middleMarkerClass: class = VertexMarker\n        // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n        middleMarkerClass: L.Editable.MiddleMarker\n\n    });\n\n    // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n    // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n    // editor basically knows how to handle the edition.\n    L.Editable.BaseEditor = L.Handler.extend({\n\n        initialize: function (map, feature, options) {\n            L.setOptions(this, options);\n            this.map = map;\n            this.feature = feature;\n            this.feature.editor = this;\n            this.editLayer = new L.LayerGroup();\n            this.tools = this.options.editTools || map.editTools;\n        },\n\n        // 🍂method enable(): this\n        // Set up the drawing tools for the feature to be editable.\n        addHooks: function () {\n            if (this.isConnected()) this.onFeatureAdd();\n            else this.feature.once('add', this.onFeatureAdd, this);\n            this.onEnable();\n            this.feature.on(this._getEvents(), this);\n        },\n\n        // 🍂method disable(): this\n        // Remove the drawing tools for the feature.\n        removeHooks: function () {\n            this.feature.off(this._getEvents(), this);\n            if (this.feature.dragging) this.feature.dragging.disable();\n            this.editLayer.clearLayers();\n            this.tools.editLayer.removeLayer(this.editLayer);\n            this.onDisable();\n            if (this._drawing) this.cancelDrawing();\n        },\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing with this editor.\n        drawing: function () {\n            return !!this._drawing;\n        },\n\n        reset: function () {},\n\n        onFeatureAdd: function () {\n            this.tools.editLayer.addLayer(this.editLayer);\n            if (this.feature.dragging) this.feature.dragging.enable();\n        },\n\n        hasMiddleMarkers: function () {\n            return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n        },\n\n        fireAndForward: function (type, e) {\n            e = e || {};\n            e.layer = this.feature;\n            this.feature.fire(type, e);\n            this.tools.fireAndForward(type, e);\n        },\n\n        onEnable: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:enable: Event\n            // Fired when an existing feature is ready to be edited.\n            this.fireAndForward('editable:enable');\n        },\n\n        onDisable: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:disable: Event\n            // Fired when an existing feature is not ready anymore to be edited.\n            this.fireAndForward('editable:disable');\n        },\n\n        onEditing: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:editing: Event\n            // Fired as soon as any change is made to the feature geometry.\n            this.fireAndForward('editable:editing');\n        },\n\n        onStartDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:start: Event\n            // Fired when a feature is to be drawn.\n            this.fireAndForward('editable:drawing:start');\n        },\n\n        onEndDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:end: Event\n            // Fired when a feature is not drawn anymore.\n            this.fireAndForward('editable:drawing:end');\n        },\n\n        onCancelDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:cancel: Event\n            // Fired when user cancel drawing while a feature is being drawn.\n            this.fireAndForward('editable:drawing:cancel');\n        },\n\n        onCommitDrawing: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:commit: Event\n            // Fired when user finish drawing a feature.\n            this.fireAndForward('editable:drawing:commit', e);\n        },\n\n        onDrawingMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mousedown: Event\n            // Fired when user `mousedown` while drawing.\n            this.fireAndForward('editable:drawing:mousedown', e);\n        },\n\n        onDrawingMouseUp: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mouseup: Event\n            // Fired when user `mouseup` while drawing.\n            this.fireAndForward('editable:drawing:mouseup', e);\n        },\n\n        startDrawing: function () {\n            if (!this._drawing) this._drawing = L.Editable.FORWARD;\n            this.tools.registerForDrawing(this);\n            this.onStartDrawing();\n        },\n\n        commitDrawing: function (e) {\n            this.onCommitDrawing(e);\n            this.endDrawing();\n        },\n\n        cancelDrawing: function () {\n            // If called during a vertex drag, the vertex will be removed before\n            // the mouseup fires on it. This is a workaround. Maybe better fix is\n            // To have L.Draggable reset it's status on disable (Leaflet side).\n            L.Draggable._dragging = false;\n            this.onCancelDrawing();\n            this.endDrawing();\n        },\n\n        endDrawing: function () {\n            this._drawing = false;\n            this.tools.unregisterForDrawing(this);\n            this.onEndDrawing();\n        },\n\n        onDrawingClick: function (e) {\n            if (!this.drawing()) return;\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:click: CancelableEvent\n            // Fired when user `click` while drawing, before any internal action is being processed.\n            this.fireAndForward('editable:drawing:click', e);\n            if (e._cancelled) return;\n            if (!this.isConnected()) this.connect(e);\n            this.processDrawingClick(e);\n        },\n\n        isConnected: function () {\n            return this.map.hasLayer(this.feature);\n        },\n\n        connect: function () {\n            this.tools.connectCreatedToMap(this.feature);\n            this.tools.editLayer.addLayer(this.editLayer);\n        },\n\n        onMove: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:move: Event\n            // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n            this.fireAndForward('editable:drawing:move', e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            this.onMove(e);\n        },\n\n        _getEvents: function () {\n            return {\n                dragstart: this.onDragStart,\n                drag: this.onDrag,\n                dragend: this.onDragEnd,\n                remove: this.disable\n            };\n        },\n\n        onDragStart: function (e) {\n            this.onEditing();\n            // 🍂namespace Editable\n            // 🍂event editable:dragstart: Event\n            // Fired before a path feature is dragged.\n            this.fireAndForward('editable:dragstart', e);\n        },\n\n        onDrag: function (e) {\n            this.onMove(e);\n            // 🍂namespace Editable\n            // 🍂event editable:drag: Event\n            // Fired when a path feature is being dragged.\n            this.fireAndForward('editable:drag', e);\n        },\n\n        onDragEnd: function (e) {\n            // 🍂namespace Editable\n            // 🍂event editable:dragend: Event\n            // Fired after a path feature has been dragged.\n            this.fireAndForward('editable:dragend', e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n    // 🍂inherits BaseEditor\n    // Editor for Marker.\n    L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n        onDrawingMouseMove: function (e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) this.feature.setLatLng(e.latlng);\n        },\n\n        processDrawingClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:clicked: Event\n            // Fired when user `click` while drawing, after all internal actions.\n            this.fireAndForward('editable:drawing:clicked', e);\n            this.commitDrawing(e);\n        },\n\n        connect: function (e) {\n            // On touch, the latlng has not been updated because there is\n            // no mousemove.\n            if (e) this.feature._latlng = e.latlng;\n            L.Editable.BaseEditor.prototype.connect.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n    // 🍂inherits BaseEditor\n    // Base class for all path editors.\n    L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n        CLOSED: false,\n        MIN_VERTEX: 2,\n\n        addHooks: function () {\n            L.Editable.BaseEditor.prototype.addHooks.call(this);\n            if (this.feature) this.initVertexMarkers();\n            return this;\n        },\n\n        initVertexMarkers: function (latlngs) {\n            if (!this.enabled()) return;\n            latlngs = latlngs || this.getLatLngs();\n            if (isFlat(latlngs)) this.addVertexMarkers(latlngs);\n            else for (var i = 0; i < latlngs.length; i++) this.initVertexMarkers(latlngs[i]);\n        },\n\n        getLatLngs: function () {\n            return this.feature.getLatLngs();\n        },\n\n        // 🍂method reset()\n        // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n        reset: function () {\n            this.editLayer.clearLayers();\n            this.initVertexMarkers();\n        },\n\n        addVertexMarker: function (latlng, latlngs) {\n            return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n        },\n\n        onNewVertex: function (vertex) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:new: VertexEvent\n            // Fired when a new vertex is created.\n            this.fireAndForward('editable:vertex:new', {latlng: vertex.latlng, vertex: vertex});\n        },\n\n        addVertexMarkers: function (latlngs) {\n            for (var i = 0; i < latlngs.length; i++) {\n                this.addVertexMarker(latlngs[i], latlngs);\n            }\n        },\n\n        refreshVertexMarkers: function (latlngs) {\n            latlngs = latlngs || this.getDefaultLatLngs();\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].__vertex.update();\n            }\n        },\n\n        addMiddleMarker: function (left, right, latlngs) {\n            return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n        },\n\n        onVertexMarkerClick: function (e) {\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:click: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n            this.fireAndForward('editable:vertex:click', e);\n            if (e._cancelled) return;\n            if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n            var index = e.vertex.getIndex(), commit;\n            if (e.originalEvent.ctrlKey) {\n                this.onVertexMarkerCtrlClick(e);\n            } else if (e.originalEvent.altKey) {\n                this.onVertexMarkerAltClick(e);\n            } else if (e.originalEvent.shiftKey) {\n                this.onVertexMarkerShiftClick(e);\n            } else if (e.originalEvent.metaKey) {\n                this.onVertexMarkerMetaKeyClick(e);\n            } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                if (index >= this.MIN_VERTEX - 1) commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                commit = true;  // Allow to close on first point also for polygons\n            } else {\n                this.onVertexRawMarkerClick(e);\n            }\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:clicked: VertexEvent\n            // Fired when a `click` is issued on a vertex, after all internal actions.\n            this.fireAndForward('editable:vertex:clicked', e);\n            if (commit) this.commitDrawing(e);\n        },\n\n        onVertexRawMarkerClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n            this.fireAndForward('editable:vertex:rawclick', e);\n            if (e._cancelled) return;\n            if (!this.vertexCanBeDeleted(e.vertex)) return;\n            e.vertex.delete();\n        },\n\n        vertexCanBeDeleted: function (vertex) {\n            return vertex.latlngs.length > this.MIN_VERTEX;\n        },\n\n        onVertexDeleted: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:deleted: VertexEvent\n            // Fired after a vertex has been deleted by user.\n            this.fireAndForward('editable:vertex:deleted', e);\n        },\n\n        onVertexMarkerCtrlClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:ctrlclick: VertexEvent\n            // Fired when a `click` with `ctrlKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:ctrlclick', e);\n        },\n\n        onVertexMarkerShiftClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:shiftclick: VertexEvent\n            // Fired when a `click` with `shiftKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:shiftclick', e);\n        },\n\n        onVertexMarkerMetaKeyClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:metakeyclick: VertexEvent\n            // Fired when a `click` with `metaKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:metakeyclick', e);\n        },\n\n        onVertexMarkerAltClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:altclick: VertexEvent\n            // Fired when a `click` with `altKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:altclick', e);\n        },\n\n        onVertexMarkerContextMenu: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:contextmenu: VertexEvent\n            // Fired when a `contextmenu` is issued on a vertex.\n            this.fireAndForward('editable:vertex:contextmenu', e);\n        },\n\n        onVertexMarkerMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mousedown: VertexEvent\n            // Fired when user `mousedown` a vertex.\n            this.fireAndForward('editable:vertex:mousedown', e);\n        },\n\n        onVertexMarkerMouseOver: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseover: VertexEvent\n            // Fired when a user's mouse enters the vertex\n            this.fireAndForward('editable:vertex:mouseover', e);\n        },\n\n        onVertexMarkerMouseOut: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseout: VertexEvent\n            // Fired when a user's mouse leaves the vertex\n            this.fireAndForward('editable:vertex:mouseout', e);\n        },\n\n        onMiddleMarkerMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section MiddleMarker events\n            // 🍂event editable:middlemarker:mousedown: VertexEvent\n            // Fired when user `mousedown` a middle marker.\n            this.fireAndForward('editable:middlemarker:mousedown', e);\n        },\n\n        onVertexMarkerDrag: function (e) {\n            this.onMove(e);\n            if (this.feature._bounds) this.extendBounds(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:drag: VertexEvent\n            // Fired when a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:drag', e);\n        },\n\n        onVertexMarkerDragStart: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragstart: VertexEvent\n            // Fired before a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragstart', e);\n        },\n\n        onVertexMarkerDragEnd: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragend: VertexEvent\n            // Fired after a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragend', e);\n        },\n\n        setDrawnLatLngs: function (latlngs) {\n            this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n        },\n\n        startDrawing: function () {\n            if (!this._drawnLatLngs) this.setDrawnLatLngs();\n            L.Editable.BaseEditor.prototype.startDrawing.call(this);\n        },\n\n        startDrawingForward: function () {\n            this.startDrawing();\n        },\n\n        endDrawing: function () {\n            this.tools.detachForwardLineGuide();\n            this.tools.detachBackwardLineGuide();\n            if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n            L.Editable.BaseEditor.prototype.endDrawing.call(this);\n            delete this._drawnLatLngs;\n        },\n\n        addLatLng: function (latlng) {\n            if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);\n            else this._drawnLatLngs.unshift(latlng);\n            this.feature._bounds.extend(latlng);\n            var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n            this.onNewVertex(vertex);\n            this.refresh();\n        },\n\n        newPointForward: function (latlng) {\n            this.addLatLng(latlng);\n            this.tools.attachForwardLineGuide();\n            this.tools.anchorForwardLineGuide(latlng);\n        },\n\n        newPointBackward: function (latlng) {\n            this.addLatLng(latlng);\n            this.tools.anchorBackwardLineGuide(latlng);\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method push()\n        // Programmatically add a point while drawing.\n        push: function (latlng) {\n            if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);\n            else this.newPointBackward(latlng);\n        },\n\n        removeLatLng: function (latlng) {\n            latlng.__vertex.delete();\n            this.refresh();\n        },\n\n        // 🍂method pop(): L.LatLng or null\n        // Programmatically remove last point (if any) while drawing.\n        pop: function () {\n            if (this._drawnLatLngs.length <= 1) return;\n            var latlng;\n            if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];\n            else latlng = this._drawnLatLngs[0];\n            this.removeLatLng(latlng);\n            if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);\n            else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n            return latlng;\n        },\n\n        processDrawingClick: function (e) {\n            if (e.vertex && e.vertex.editor === this) return;\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);\n            else this.newPointBackward(e.latlng);\n            this.fireAndForward('editable:drawing:clicked', e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) {\n                this.tools.moveForwardLineGuide(e.latlng);\n                this.tools.moveBackwardLineGuide(e.latlng);\n            }\n        },\n\n        refresh: function () {\n            this.feature.redraw();\n            this.onEditing();\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method newShape(latlng?: L.LatLng)\n        // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n        // if optional `latlng` is given, start a path at this point.\n        newShape: function (latlng) {\n            var shape = this.addNewEmptyShape();\n            if (!shape) return;\n            this.setDrawnLatLngs(shape[0] || shape);  // Polygon or polyline\n            this.startDrawingForward();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:new: ShapeEvent\n            // Fired when a new shape is created in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:new', {shape: shape});\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        deleteShape: function (shape, latlngs) {\n            var e = {shape: shape};\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:delete: CancelableShapeEvent\n            // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:delete', e);\n            if (e._cancelled) return;\n            shape = this._deleteShape(shape, latlngs);\n            if (this.ensureNotFlat) this.ensureNotFlat();  // Polygon.\n            this.feature.setLatLngs(this.getLatLngs());  // Force bounds reset.\n            this.refresh();\n            this.reset();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:deleted: ShapeEvent\n            // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:deleted', {shape: shape});\n            return shape;\n        },\n\n        _deleteShape: function (shape, latlngs) {\n            latlngs = latlngs || this.getLatLngs();\n            if (!latlngs.length) return;\n            var self = this,\n                inplaceDelete = function (latlngs, shape) {\n                    // Called when deleting a flat latlngs\n                    shape = latlngs.splice(0, Number.MAX_VALUE);\n                    return shape;\n                },\n                spliceDelete = function (latlngs, shape) {\n                    // Called when removing a latlngs inside an array\n                    latlngs.splice(latlngs.indexOf(shape), 1);\n                    if (!latlngs.length) self._deleteShape(latlngs);\n                    return shape;\n                };\n            if (latlngs === shape) return inplaceDelete(latlngs, shape);\n            for (var i = 0; i < latlngs.length; i++) {\n                if (latlngs[i] === shape) return spliceDelete(latlngs, shape);\n                else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n            }\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n        // Remove a path shape at the given `latlng`.\n        deleteShapeAt: function (latlng) {\n            var shape = this.feature.shapeAt(latlng);\n            if (shape) return this.deleteShape(shape);\n        },\n\n        // 🍂method appendShape(shape: Array)\n        // Append a new shape to the Polygon or Polyline.\n        appendShape: function (shape) {\n            this.insertShape(shape);\n        },\n\n        // 🍂method prependShape(shape: Array)\n        // Prepend a new shape to the Polygon or Polyline.\n        prependShape: function (shape) {\n            this.insertShape(shape, 0);\n        },\n\n        // 🍂method insertShape(shape: Array, index: int)\n        // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n        insertShape: function (shape, index) {\n            this.ensureMulti();\n            shape = this.formatShape(shape);\n            if (typeof index === 'undefined') index = this.feature._latlngs.length;\n            this.feature._latlngs.splice(index, 0, shape);\n            this.feature.redraw();\n            if (this._enabled) this.reset();\n        },\n\n        extendBounds: function (e) {\n            this.feature._bounds.extend(e.vertex.latlng);\n        },\n\n        onDragStart: function (e) {\n            this.editLayer.clearLayers();\n            L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n        },\n\n        onDragEnd: function (e) {\n            this.initVertexMarkers();\n            L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n        startDrawingBackward: function () {\n            this._drawing = L.Editable.BACKWARD;\n            this.startDrawing();\n        },\n\n        // 🍂method continueBackward(latlngs?: Array)\n        // Set up drawing tools to continue the line backward.\n        continueBackward: function (latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachBackwardLineGuide();\n                this.tools.anchorBackwardLineGuide(latlngs[0]);\n            }\n            this.startDrawingBackward();\n        },\n\n        // 🍂method continueForward(latlngs?: Array)\n        // Set up drawing tools to continue the line forward.\n        continueForward: function (latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n            }\n            this.startDrawingForward();\n        },\n\n        getDefaultLatLngs: function (latlngs) {\n            latlngs = latlngs || this.feature._latlngs;\n            if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;\n            else return this.getDefaultLatLngs(latlngs[0]);\n        },\n\n        ensureMulti: function () {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        addNewEmptyShape: function () {\n            if (this.feature._latlngs.length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        formatShape: function (shape) {\n            if (isFlat(shape)) return shape;\n            else if (shape[0]) return this.formatShape(shape[0]);\n        },\n\n        // 🍂method splitShape(latlngs?: Array, index: int)\n        // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n        splitShape: function (shape, index) {\n            if (!index || index >= shape.length - 1) return;\n            this.ensureMulti();\n            var shapeIndex = this.feature._latlngs.indexOf(shape);\n            if (shapeIndex === -1) return;\n            var first = shape.slice(0, index + 1),\n                second = shape.slice(index);\n            // We deal with reference, we don't want twice the same latlng around.\n            second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n            this.feature._latlngs.splice(shapeIndex, 1, first, second);\n            this.refresh();\n            this.reset();\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 3,\n\n        newPointForward: function (latlng) {\n            L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n            if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n            if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n        },\n\n        addNewEmptyHole: function (latlng) {\n            this.ensureNotFlat();\n            var latlngs = this.feature.shapeAt(latlng);\n            if (!latlngs) return;\n            var holes = [];\n            latlngs.push(holes);\n            return holes;\n        },\n\n        // 🍂method newHole(latlng?: L.LatLng, index: int)\n        // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n        newHole: function (latlng) {\n            var holes = this.addNewEmptyHole(latlng);\n            if (!holes) return;\n            this.setDrawnLatLngs(holes);\n            this.startDrawingForward();\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        addNewEmptyShape: function () {\n            if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        ensureMulti: function () {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        ensureNotFlat: function () {\n            if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n        },\n\n        vertexCanBeDeleted: function (vertex) {\n            var parent = this.feature.parentShape(vertex.latlngs),\n                idx = L.Util.indexOf(parent, vertex.latlngs);\n            if (idx > 0) return true;  // Holes can be totally deleted without removing the layer itself.\n            return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n        },\n\n        getDefaultLatLngs: function () {\n            if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n            return this.feature._latlngs[0];\n        },\n\n        formatShape: function (shape) {\n            // [[1, 2], [3, 4]] => must be nested\n            // [] => must be nested\n            // [[]] => is already nested\n            if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];\n            else return shape;\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n    // 🍂inherits PathEditor\n    L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 4,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        extendBounds: function (e) {\n            var index = e.vertex.getIndex(),\n                next = e.vertex.getNext(),\n                previous = e.vertex.getPrevious(),\n                oppositeIndex = (index + 2) % 4,\n                opposite = e.vertex.latlngs[oppositeIndex],\n                bounds = new L.LatLngBounds(e.latlng, opposite);\n            // Update latlngs by hand to preserve order.\n            previous.latlng.update([e.latlng.lat, opposite.lng]);\n            next.latlng.update([opposite.lat, e.latlng.lng]);\n            this.updateBounds(bounds);\n            this.refreshVertexMarkers();\n        },\n\n        onDrawingMouseDown: function (e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this.connect();\n            var latlngs = this.getDefaultLatLngs();\n            // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n            // which is the case here as all latlngs are [0, 0]\n            if (latlngs.length === 3) latlngs.push(e.latlng);\n            var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n            this.updateBounds(bounds);\n            this.updateLatLngs(bounds);\n            this.refresh();\n            this.reset();\n            // Stop dragging map.\n            // L.Draggable has two workflows:\n            // - mousedown => mousemove => mouseup\n            // - touchstart => touchmove => touchend\n            // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n            // can deal with mousedown, but then when in a touch device, we are dealing with\n            // simulated events (actually simulated by L.Map.Tap), which are no more taken\n            // into account by L.Draggable.\n            // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the bottom right corner.\n            // Should we refine which corner will handle the drag according to\n            // drag direction?\n            latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function (e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n\n        getDefaultLatLngs: function (latlngs) {\n            return latlngs || this.feature._latlngs[0];\n        },\n\n        updateBounds: function (bounds) {\n            this.feature._bounds = bounds;\n        },\n\n        updateLatLngs: function (bounds) {\n            var latlngs = this.getDefaultLatLngs(),\n                newLatlngs = this.feature._boundsToLatLngs(bounds);\n            // Keep references.\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].update(newLatlngs[i]);\n            }\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n    // 🍂inherits PathEditor\n    L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n        MIN_VERTEX: 2,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        initialize: function (map, feature, options) {\n            L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n            this._resizeLatLng = this.computeResizeLatLng();\n        },\n\n        computeResizeLatLng: function () {\n            // While circle is not added to the map, _radius is not set.\n            var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                point = this.map.project(this.feature._latlng);\n            return this.map.unproject([point.x + delta, point.y - delta]);\n        },\n\n        updateResizeLatLng: function () {\n            this._resizeLatLng.update(this.computeResizeLatLng());\n            this._resizeLatLng.__vertex.update();\n        },\n\n        getLatLngs: function () {\n            return [this.feature._latlng, this._resizeLatLng];\n        },\n\n        getDefaultLatLngs: function () {\n            return this.getLatLngs();\n        },\n\n        onVertexMarkerDrag: function (e) {\n            if (e.vertex.getIndex() === 1) this.resize(e);\n            else this.updateResizeLatLng(e);\n            L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n        },\n\n        resize: function (e) {\n            var radius = this.feature._latlng.distanceTo(e.latlng);\n            this.feature.setRadius(radius);\n        },\n\n        onDrawingMouseDown: function (e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this._resizeLatLng.update(e.latlng);\n            this.feature._latlng.update(e.latlng);\n            this.connect();\n            // Stop dragging map.\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the radius handler.\n            this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function (e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        onDrag: function (e) {\n            L.Editable.PathEditor.prototype.onDrag.call(this, e);\n            this.feature.dragging.updateLatLng(this._resizeLatLng);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class EditableMixin\n    // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n    // and `L.Marker`. It adds some methods to them.\n    // *When editing is enabled, the editor is accessible on the instance with the\n    // `editor` property.*\n    var EditableMixin = {\n\n        createEditor: function (map) {\n            map = map || this._map;\n            var tools = (this.options.editOptions || {}).editTools || map.editTools;\n            if (!tools) throw Error('Unable to detect Editable instance.');\n            var Klass = this.options.editorClass || this.getEditorClass(tools);\n            return new Klass(map, this, this.options.editOptions);\n        },\n\n        // 🍂method enableEdit(map?: L.Map): this.editor\n        // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n        enableEdit: function (map) {\n            if (!this.editor) this.createEditor(map);\n            this.editor.enable();\n            return this.editor;\n        },\n\n        // 🍂method editEnabled(): boolean\n        // Return true if current instance has an editor attached, and this editor is enabled.\n        editEnabled: function () {\n            return this.editor && this.editor.enabled();\n        },\n\n        // 🍂method disableEdit()\n        // Disable editing, also remove the editor property reference.\n        disableEdit: function () {\n            if (this.editor) {\n                this.editor.disable();\n                delete this.editor;\n            }\n        },\n\n        // 🍂method toggleEdit()\n        // Enable or disable editing, according to current status.\n        toggleEdit: function () {\n            if (this.editEnabled()) this.disableEdit();\n            else this.enableEdit();\n        },\n\n        _onEditableAdd: function () {\n            if (this.editor) this.enableEdit();\n        }\n\n    };\n\n    var PolylineMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.polylineEditorClass) ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n        },\n\n        shapeAt: function (latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;\n            else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n            else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n            return shape;\n        },\n\n        isInLatLngs: function (l, latlngs) {\n            if (!latlngs) return false;\n            var i, k, len, part = [], p,\n                w = this._clickTolerance();\n            this._projectLatlngs(latlngs, part, this._pxBounds);\n            part = part[0];\n            p = this._map.latLngToLayerPoint(l);\n\n            if (!this._pxBounds.contains(p)) { return false; }\n            for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    };\n\n    var PolygonMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.polygonEditorClass) ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n        },\n\n        shapeAt: function (latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n            // - latlngs is an array of arrays of arrays, this is a multi, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;\n            else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n            else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;\n            else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n            return shape;\n        },\n\n        isInLatLngs: function (l, latlngs) {\n            var inside = false, l1, l2, j, k, len2;\n\n            for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                l1 = latlngs[j];\n                l2 = latlngs[k];\n\n                if (((l1.lat > l.lat) !== (l2.lat > l.lat)) &&\n                    (l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng)) {\n                    inside = !inside;\n                }\n            }\n\n            return inside;\n        },\n\n        parentShape: function (shape, latlngs) {\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs) return;\n            var idx = L.Util.indexOf(latlngs, shape);\n            if (idx !== -1) return latlngs;\n            for (var i = 0; i < latlngs.length; i++) {\n                idx = L.Util.indexOf(latlngs[i], shape);\n                if (idx !== -1) return latlngs[i];\n            }\n        }\n\n    };\n\n\n    var MarkerMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.markerEditorClass) ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n        }\n\n    };\n\n    var RectangleMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.rectangleEditorClass) ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n        }\n\n    };\n\n    var CircleMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.circleEditorClass) ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n        }\n\n    };\n\n    var keepEditable = function () {\n        // Make sure you can remove/readd an editable layer.\n        this.on('add', this._onEditableAdd);\n    };\n\n    var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat;  // <=> 1.1 compat.\n\n\n    if (L.Polyline) {\n        L.Polyline.include(EditableMixin);\n        L.Polyline.include(PolylineMixin);\n        L.Polyline.addInitHook(keepEditable);\n    }\n    if (L.Polygon) {\n        L.Polygon.include(EditableMixin);\n        L.Polygon.include(PolygonMixin);\n    }\n    if (L.Marker) {\n        L.Marker.include(EditableMixin);\n        L.Marker.include(MarkerMixin);\n        L.Marker.addInitHook(keepEditable);\n    }\n    if (L.Rectangle) {\n        L.Rectangle.include(EditableMixin);\n        L.Rectangle.include(RectangleMixin);\n    }\n    if (L.Circle) {\n        L.Circle.include(EditableMixin);\n        L.Circle.include(CircleMixin);\n    }\n\n    L.LatLng.prototype.update = function (latlng) {\n        latlng = L.latLng(latlng);\n        this.lat = latlng.lat;\n        this.lng = latlng.lng;\n    }\n}\ninit(window.L)\n\n\n\n\n// WEBPACK FOOTER //\n// ./Vue2LeafletEditablePlugin.js"],"sourceRoot":""}