{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Vue2LeafletEditablePlugin.js","webpack:///webpack/bootstrap b31ff26b210a6292af03","webpack:///./Vue2LeafletEditablePlugin.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","install","init","window","L","Editable","Evented","extend","statics","FORWARD","BACKWARD","options","zIndex","polygonClass","Polygon","polylineClass","Polyline","markerClass","Marker","rectangleClass","Rectangle","circleClass","Circle","drawingCSSClass","drawingCursor","editLayer","undefined","featuresLayer","polylineEditorClass","polygonEditorClass","markerEditorClass","rectangleEditorClass","circleEditorClass","lineGuideOptions","skipMiddleMarkers","initialize","map","setOptions","_lastZIndex","createEditLayer","createFeaturesLayer","forwardLineGuide","createLineGuide","backwardLineGuide","fireAndForward","type","e","editTools","fire","dashArray","weight","interactive","polyline","createVertexIcon","Browser","mobile","touch","TouchVertexIcon","VertexIcon","LayerGroup","addTo","moveForwardLineGuide","latlng","_latlngs","length","_bounds","redraw","moveBackwardLineGuide","anchorForwardLineGuide","anchorBackwardLineGuide","attachForwardLineGuide","addLayer","attachBackwardLineGuide","detachForwardLineGuide","setLatLngs","removeLayer","detachBackwardLineGuide","blockEvents","_oldTargets","_targets","unblockEvents","registerForDrawing","editor","_drawingEditor","unregisterForDrawing","reset","on","onDrawingMouseMove","onMousedown","onMouseup","DomUtil","addClass","_container","defaultMapCursor","style","cursor","removeClass","off","_drawing","cancelDrawing","originalEvent","which","_mouseDown","onDrawingMouseDown","mouseDown","onDrawingMouseUp","origin","point","clientX","clientY","distance","distanceTo","Math","abs","devicePixelRatio","onDrawingClick","drawing","stopDrawing","commitDrawing","connectCreatedToMap","layer","startPolyline","line","createPolyline","enableEdit","newShape","startPolygon","polygon","createPolygon","startMarker","getCenter","clone","marker","createMarker","startDrawing","startRectangle","corner","latLng","bounds","LatLngBounds","rectangle","createRectangle","startCircle","circle","createCircle","startHole","newHole","createLayer","klass","latlngs","Util","editOptions","makeCancellable","cancel","_cancelled","Map","mergeOptions","editToolsClass","editable","addInitHook","whenReady","DivIcon","iconSize","Point","VertexMarker","draggable","className","icon","tools","__vertex","setZIndexOffset","onAdd","onDrag","onDragStart","onDragEnd","onClick","onContextMenu","onMouseDown","onMouseOver","onMouseOut","addMiddleMarkers","onRemove","middleMarker","delete","vertex","onVertexMarkerDrag","iconPos","getPosition","_icon","_map","layerPointToLatLng","update","_latlng","refresh","updateLatLng","next","getNext","onVertexMarkerDragStart","onVertexMarkerDragEnd","onVertexMarkerClick","DomEvent","stop","onVertexMarkerContextMenu","onVertexMarkerMouseDown","onVertexMarkerMouseOver","onVertexMarkerMouseOut","splice","getIndex","onVertexDeleted","deleteShape","resetMiddleMarker","indexOf","getLastIndex","getPrevious","index","previousIndex","CLOSED","previous","nextIndex","addMiddleMarker","hasMiddleMarkers","split","splitShape","continue","continueBackward","continueForward","vertexMarkerClass","MiddleMarker","opacity","left","right","computeLatLng","_opacity","setVisibility","leftPoint","latLngToContainerPoint","rightPoint","size","x","hide","show","setOpacity","setLatLng","y","containerPointToLatLng","onMiddleMarkerMouseDown","addVertexMarker","onNewVertex","parent","parentNode","removeChild","appendChild","_initIcon","_initInteraction","Draggable","_dragging","dragging","_draggable","_onDown","middleMarkerClass","BaseEditor","Handler","feature","addHooks","isConnected","onFeatureAdd","once","onEnable","_getEvents","removeHooks","disable","clearLayers","onDisable","enable","onEditing","onStartDrawing","onEndDrawing","onCancelDrawing","onCommitDrawing","endDrawing","connect","processDrawingClick","hasLayer","onMove","dragstart","drag","dragend","remove","MarkerEditor","PathEditor","MIN_VERTEX","initVertexMarkers","enabled","getLatLngs","isFlat","addVertexMarkers","refreshVertexMarkers","getDefaultLatLngs","commit","ctrlKey","onVertexMarkerCtrlClick","altKey","onVertexMarkerAltClick","shiftKey","onVertexMarkerShiftClick","metaKey","onVertexMarkerMetaKeyClick","_drawnLatLngs","onVertexRawMarkerClick","vertexCanBeDeleted","extendBounds","setDrawnLatLngs","startDrawingForward","addLatLng","push","unshift","newPointForward","newPointBackward","console","error","removeLatLng","pop","shape","addNewEmptyShape","_deleteShape","ensureNotFlat","self","spliceDelete","Number","MAX_VALUE","deleteShapeAt","shapeAt","appendShape","insertShape","prependShape","ensureMulti","formatShape","_enabled","PolylineEditor","startDrawingBackward","LatLng","shapeIndex","first","slice","second","lat","lng","alt","PolygonEditor","addNewEmptyHole","holes","parentShape","RectangleEditor","oppositeIndex","opposite","updateBounds","updateLatLngs","_simulated","_onUp","newLatlngs","_boundsToLatLngs","CircleEditor","_resizeLatLng","computeResizeLatLng","delta","_radius","_mRadius","cos","PI","project","unproject","updateResizeLatLng","resize","radius","setRadius","EditableMixin","createEditor","Error","editorClass","getEditorClass","editEnabled","disableEdit","toggleEdit","_onEditableAdd","PolylineMixin","isInLatLngs","k","len","part","w","_clickTolerance","_projectLatlngs","_pxBounds","latLngToLayerPoint","contains","LineUtil","pointToSegmentDistance","PolygonMixin","l1","l2","j","len2","inside","idx","MarkerMixin","RectangleMixin","CircleMixin","keepEditable","_flat","include"],"mappings":"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","file":"Vue2LeafletEditablePlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditablePlugin\"] = factory();\n\telse\n\t\troot[\"Vue2LeafletEditablePlugin\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditablePlugin\"] = factory();\n\telse\n\t\troot[\"Vue2LeafletEditablePlugin\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    install: function install() {\n        this.init(window.L);\n    },\n    init: function init(L) {\n        // 🍂miniclass CancelableEvent (Event objects)\n        // 🍂method cancel()\n        // Cancel any subsequent action.\n\n        // 🍂miniclass VertexEvent (Event objects)\n        // 🍂property vertex: VertexMarker\n        // The vertex that fires the event.\n\n        // 🍂miniclass ShapeEvent (Event objects)\n        // 🍂property shape: Array\n        // The shape (LatLngs array) subject of the action.\n\n        // 🍂miniclass CancelableVertexEvent (Event objects)\n        // 🍂inherits VertexEvent\n        // 🍂inherits CancelableEvent\n\n        // 🍂miniclass CancelableShapeEvent (Event objects)\n        // 🍂inherits ShapeEvent\n        // 🍂inherits CancelableEvent\n\n        // 🍂miniclass LayerEvent (Event objects)\n        // 🍂property layer: object\n        // The Layer (Marker, Polyline…) subject of the action.\n\n        // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n        // Main edition handler. By default, it is attached to the map\n        // as `map.editTools` property.\n        // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n        // the behaviour: using options, listening to events, or extending.\n        L.Editable = L.Evented.extend({\n\n            statics: {\n                FORWARD: 1,\n                BACKWARD: -1\n            },\n\n            options: {\n\n                // You can pass them when creating a map using the `editOptions` key.\n                // 🍂option zIndex: int = 1000\n                // The default zIndex of the editing tools.\n                zIndex: 1000,\n\n                // 🍂option polygonClass: class = L.Polygon\n                // Class to be used when creating a new Polygon.\n                polygonClass: L.Polygon,\n\n                // 🍂option polylineClass: class = L.Polyline\n                // Class to be used when creating a new Polyline.\n                polylineClass: L.Polyline,\n\n                // 🍂option markerClass: class = L.Marker\n                // Class to be used when creating a new Marker.\n                markerClass: L.Marker,\n\n                // 🍂option rectangleClass: class = L.Rectangle\n                // Class to be used when creating a new Rectangle.\n                rectangleClass: L.Rectangle,\n\n                // 🍂option circleClass: class = L.Circle\n                // Class to be used when creating a new Circle.\n                circleClass: L.Circle,\n\n                // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n                // CSS class to be added to the map container while drawing.\n                drawingCSSClass: 'leaflet-editable-drawing',\n\n                // 🍂option drawingCursor: const = 'crosshair'\n                // Cursor mode set to the map while drawing.\n                drawingCursor: 'crosshair',\n\n                // 🍂option editLayer: Layer = new L.LayerGroup()\n                // Layer used to store edit tools (vertex, line guide…).\n                editLayer: undefined,\n\n                // 🍂option featuresLayer: Layer = new L.LayerGroup()\n                // Default layer used to store drawn features (Marker, Polyline…).\n                featuresLayer: undefined,\n\n                // 🍂option polylineEditorClass: class = PolylineEditor\n                // Class to be used as Polyline editor.\n                polylineEditorClass: undefined,\n\n                // 🍂option polygonEditorClass: class = PolygonEditor\n                // Class to be used as Polygon editor.\n                polygonEditorClass: undefined,\n\n                // 🍂option markerEditorClass: class = MarkerEditor\n                // Class to be used as Marker editor.\n                markerEditorClass: undefined,\n\n                // 🍂option rectangleEditorClass: class = RectangleEditor\n                // Class to be used as Rectangle editor.\n                rectangleEditorClass: undefined,\n\n                // 🍂option circleEditorClass: class = CircleEditor\n                // Class to be used as Circle editor.\n                circleEditorClass: undefined,\n\n                // 🍂option lineGuideOptions: hash = {}\n                // Options to be passed to the line guides.\n                lineGuideOptions: {},\n\n                // 🍂option skipMiddleMarkers: boolean = false\n                // Set this to true if you don't want middle markers.\n                skipMiddleMarkers: false\n\n            },\n\n            initialize: function initialize(map, options) {\n                L.setOptions(this, options);\n                this._lastZIndex = this.options.zIndex;\n                this.map = map;\n                this.editLayer = this.createEditLayer();\n                this.featuresLayer = this.createFeaturesLayer();\n                this.forwardLineGuide = this.createLineGuide();\n                this.backwardLineGuide = this.createLineGuide();\n            },\n\n            fireAndForward: function fireAndForward(type, e) {\n                e = e || {};\n                e.editTools = this;\n                this.fire(type, e);\n                this.map.fire(type, e);\n            },\n\n            createLineGuide: function createLineGuide() {\n                var options = L.extend({ dashArray: '5,10', weight: 1, interactive: false }, this.options.lineGuideOptions);\n                return L.polyline([], options);\n            },\n\n            createVertexIcon: function createVertexIcon(options) {\n                return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n            },\n\n            createEditLayer: function createEditLayer() {\n                return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n            },\n\n            createFeaturesLayer: function createFeaturesLayer() {\n                return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n            },\n\n            moveForwardLineGuide: function moveForwardLineGuide(latlng) {\n                if (this.forwardLineGuide._latlngs.length) {\n                    this.forwardLineGuide._latlngs[1] = latlng;\n                    this.forwardLineGuide._bounds.extend(latlng);\n                    this.forwardLineGuide.redraw();\n                }\n            },\n\n            moveBackwardLineGuide: function moveBackwardLineGuide(latlng) {\n                if (this.backwardLineGuide._latlngs.length) {\n                    this.backwardLineGuide._latlngs[1] = latlng;\n                    this.backwardLineGuide._bounds.extend(latlng);\n                    this.backwardLineGuide.redraw();\n                }\n            },\n\n            anchorForwardLineGuide: function anchorForwardLineGuide(latlng) {\n                this.forwardLineGuide._latlngs[0] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            },\n\n            anchorBackwardLineGuide: function anchorBackwardLineGuide(latlng) {\n                this.backwardLineGuide._latlngs[0] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            },\n\n            attachForwardLineGuide: function attachForwardLineGuide() {\n                this.editLayer.addLayer(this.forwardLineGuide);\n            },\n\n            attachBackwardLineGuide: function attachBackwardLineGuide() {\n                this.editLayer.addLayer(this.backwardLineGuide);\n            },\n\n            detachForwardLineGuide: function detachForwardLineGuide() {\n                this.forwardLineGuide.setLatLngs([]);\n                this.editLayer.removeLayer(this.forwardLineGuide);\n            },\n\n            detachBackwardLineGuide: function detachBackwardLineGuide() {\n                this.backwardLineGuide.setLatLngs([]);\n                this.editLayer.removeLayer(this.backwardLineGuide);\n            },\n\n            blockEvents: function blockEvents() {\n                // Hack: force map not to listen to other layers events while drawing.\n                if (!this._oldTargets) {\n                    this._oldTargets = this.map._targets;\n                    this.map._targets = {};\n                }\n            },\n\n            unblockEvents: function unblockEvents() {\n                if (this._oldTargets) {\n                    // Reset, but keep targets created while drawing.\n                    this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                    delete this._oldTargets;\n                }\n            },\n\n            registerForDrawing: function registerForDrawing(editor) {\n                if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n                this.blockEvents();\n                editor.reset(); // Make sure editor tools still receive events.\n                this._drawingEditor = editor;\n                this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n                this.map.on('mousedown', this.onMousedown, this);\n                this.map.on('mouseup', this.onMouseup, this);\n                L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n                this.defaultMapCursor = this.map._container.style.cursor;\n                this.map._container.style.cursor = this.options.drawingCursor;\n            },\n\n            unregisterForDrawing: function unregisterForDrawing(editor) {\n                this.unblockEvents();\n                L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n                this.map._container.style.cursor = this.defaultMapCursor;\n                editor = editor || this._drawingEditor;\n                if (!editor) return;\n                this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n                this.map.off('mousedown', this.onMousedown, this);\n                this.map.off('mouseup', this.onMouseup, this);\n                if (editor !== this._drawingEditor) return;\n                delete this._drawingEditor;\n                if (editor._drawing) editor.cancelDrawing();\n            },\n\n            onMousedown: function onMousedown(e) {\n                if (e.originalEvent.which != 1) return;\n                this._mouseDown = e;\n                this._drawingEditor.onDrawingMouseDown(e);\n            },\n\n            onMouseup: function onMouseup(e) {\n                if (this._mouseDown) {\n                    var editor = this._drawingEditor,\n                        mouseDown = this._mouseDown;\n                    this._mouseDown = null;\n                    editor.onDrawingMouseUp(e);\n                    if (this._drawingEditor !== editor) return; // onDrawingMouseUp may call unregisterFromDrawing.\n                    var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                    var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                    if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n                }\n            },\n\n            // 🍂section Public methods\n            // You will generally access them by the `map.editTools`\n            // instance:\n            //\n            // `map.editTools.startPolyline();`\n\n            // 🍂method drawing(): boolean\n            // Return true if any drawing action is ongoing.\n            drawing: function drawing() {\n                return this._drawingEditor && this._drawingEditor.drawing();\n            },\n\n            // 🍂method stopDrawing()\n            // When you need to stop any ongoing drawing, without needing to know which editor is active.\n            stopDrawing: function stopDrawing() {\n                this.unregisterForDrawing();\n            },\n\n            // 🍂method commitDrawing()\n            // When you need to commit any ongoing drawing, without needing to know which editor is active.\n            commitDrawing: function commitDrawing(e) {\n                if (!this._drawingEditor) return;\n                this._drawingEditor.commitDrawing(e);\n            },\n\n            connectCreatedToMap: function connectCreatedToMap(layer) {\n                return this.featuresLayer.addLayer(layer);\n            },\n\n            // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n            // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n            // If `options` is given, it will be passed to the Polyline class constructor.\n            startPolyline: function startPolyline(latlng, options) {\n                var line = this.createPolyline([], options);\n                line.enableEdit(this.map).newShape(latlng);\n                return line;\n            },\n\n            // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n            // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n            // If `options` is given, it will be passed to the Polygon class constructor.\n            startPolygon: function startPolygon(latlng, options) {\n                var polygon = this.createPolygon([], options);\n                polygon.enableEdit(this.map).newShape(latlng);\n                return polygon;\n            },\n\n            // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n            // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n            // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n            // If `options` is given, it will be passed to the Marker class constructor.\n            startMarker: function startMarker(latlng, options) {\n                latlng = latlng || this.map.getCenter().clone();\n                var marker = this.createMarker(latlng, options);\n                marker.enableEdit(this.map).startDrawing();\n                return marker;\n            },\n\n            // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n            // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n            // If `options` is given, it will be passed to the Rectangle class constructor.\n            startRectangle: function startRectangle(latlng, options) {\n                var corner = latlng || L.latLng([0, 0]);\n                var bounds = new L.LatLngBounds(corner, corner);\n                var rectangle = this.createRectangle(bounds, options);\n                rectangle.enableEdit(this.map).startDrawing();\n                return rectangle;\n            },\n\n            // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n            // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n            // If `options` is given, it will be passed to the Circle class constructor.\n            startCircle: function startCircle(latlng, options) {\n                latlng = latlng || this.map.getCenter().clone();\n                var circle = this.createCircle(latlng, options);\n                circle.enableEdit(this.map).startDrawing();\n                return circle;\n            },\n\n            startHole: function startHole(editor, latlng) {\n                editor.newHole(latlng);\n            },\n\n            createLayer: function createLayer(klass, latlngs, options) {\n                options = L.Util.extend({ editOptions: { editTools: this } }, options);\n                var layer = new klass(latlngs, options);\n                // 🍂namespace Editable\n                // 🍂event editable:created: LayerEvent\n                // Fired when a new feature (Marker, Polyline…) is created.\n                this.fireAndForward('editable:created', { layer: layer });\n                return layer;\n            },\n\n            createPolyline: function createPolyline(latlngs, options) {\n                return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n            },\n\n            createPolygon: function createPolygon(latlngs, options) {\n                return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n            },\n\n            createMarker: function createMarker(latlng, options) {\n                return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n            },\n\n            createRectangle: function createRectangle(bounds, options) {\n                return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n            },\n\n            createCircle: function createCircle(latlng, options) {\n                return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n            }\n\n        });\n\n        L.extend(L.Editable, {\n\n            makeCancellable: function makeCancellable(e) {\n                e.cancel = function () {\n                    e._cancelled = true;\n                };\n            }\n\n        });\n\n        // 🍂namespace Map; 🍂class Map\n        // Leaflet.Editable add options and events to the `L.Map` object.\n        // See `Editable` events for the list of events fired on the Map.\n        // 🍂example\n        //\n        // ```js\n        // var map = L.map('map', {\n        //  editable: true,\n        //  editOptions: {\n        //    …\n        // }\n        // });\n        // ```\n        // 🍂section Editable Map Options\n        L.Map.mergeOptions({\n\n            // 🍂namespace Map\n            // 🍂section Map Options\n            // 🍂option editToolsClass: class = L.Editable\n            // Class to be used as vertex, for path editing.\n            editToolsClass: L.Editable,\n\n            // 🍂option editable: boolean = false\n            // Whether to create a L.Editable instance at map init.\n            editable: false,\n\n            // 🍂option editOptions: hash = {}\n            // Options to pass to L.Editable when instantiating.\n            editOptions: {}\n\n        });\n\n        L.Map.addInitHook(function () {\n\n            this.whenReady(function () {\n                if (this.options.editable) {\n                    this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n                }\n            });\n        });\n\n        L.Editable.VertexIcon = L.DivIcon.extend({\n\n            options: {\n                iconSize: new L.Point(8, 8)\n            }\n\n        });\n\n        L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n            options: {\n                iconSize: new L.Point(20, 20)\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n        L.Editable.VertexMarker = L.Marker.extend({\n\n            options: {\n                draggable: true,\n                className: 'leaflet-div-icon leaflet-vertex-icon'\n            },\n\n            // 🍂section Public methods\n            // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n            // instance when listening for events like `editable:vertex:ctrlclick`.\n\n            initialize: function initialize(latlng, latlngs, editor, options) {\n                // We don't use this._latlng, because on drag Leaflet replace it while\n                // we want to keep reference.\n                this.latlng = latlng;\n                this.latlngs = latlngs;\n                this.editor = editor;\n                L.Marker.prototype.initialize.call(this, latlng, options);\n                this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n                this.latlng.__vertex = this;\n                this.editor.editLayer.addLayer(this);\n                this.setZIndexOffset(editor.tools._lastZIndex + 1);\n            },\n\n            onAdd: function onAdd(map) {\n                L.Marker.prototype.onAdd.call(this, map);\n                this.on('drag', this.onDrag);\n                this.on('dragstart', this.onDragStart);\n                this.on('dragend', this.onDragEnd);\n                this.on('mouseup', this.onMouseup);\n                this.on('click', this.onClick);\n                this.on('contextmenu', this.onContextMenu);\n                this.on('mousedown touchstart', this.onMouseDown);\n                this.on('mouseover', this.onMouseOver);\n                this.on('mouseout', this.onMouseOut);\n                this.addMiddleMarkers();\n            },\n\n            onRemove: function onRemove(map) {\n                if (this.middleMarker) this.middleMarker.delete();\n                delete this.latlng.__vertex;\n                this.off('drag', this.onDrag);\n                this.off('dragstart', this.onDragStart);\n                this.off('dragend', this.onDragEnd);\n                this.off('mouseup', this.onMouseup);\n                this.off('click', this.onClick);\n                this.off('contextmenu', this.onContextMenu);\n                this.off('mousedown touchstart', this.onMouseDown);\n                this.off('mouseover', this.onMouseOver);\n                this.off('mouseout', this.onMouseOut);\n                L.Marker.prototype.onRemove.call(this, map);\n            },\n\n            onDrag: function onDrag(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDrag(e);\n                var iconPos = L.DomUtil.getPosition(this._icon),\n                    latlng = this._map.layerPointToLatLng(iconPos);\n                this.latlng.update(latlng);\n                this._latlng = this.latlng; // Push back to Leaflet our reference.\n                this.editor.refresh();\n                if (this.middleMarker) this.middleMarker.updateLatLng();\n                var next = this.getNext();\n                if (next && next.middleMarker) next.middleMarker.updateLatLng();\n            },\n\n            onDragStart: function onDragStart(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDragStart(e);\n            },\n\n            onDragEnd: function onDragEnd(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDragEnd(e);\n            },\n\n            onClick: function onClick(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerClick(e);\n            },\n\n            onMouseup: function onMouseup(e) {\n                L.DomEvent.stop(e);\n                e.vertex = this;\n                this.editor.map.fire('mouseup', e);\n            },\n\n            onContextMenu: function onContextMenu(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerContextMenu(e);\n            },\n\n            onMouseDown: function onMouseDown(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseDown(e);\n            },\n\n            onMouseOver: function onMouseOver(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseOver(e);\n            },\n\n            onMouseOut: function onMouseOut(e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseOut(e);\n            },\n\n            // 🍂method delete()\n            // Delete a vertex and the related LatLng.\n            delete: function _delete() {\n                var next = this.getNext(); // Compute before changing latlng\n                this.latlngs.splice(this.getIndex(), 1);\n                this.editor.editLayer.removeLayer(this);\n                this.editor.onVertexDeleted({ latlng: this.latlng, vertex: this });\n                if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n                if (next) next.resetMiddleMarker();\n                this.editor.refresh();\n            },\n\n            // 🍂method getIndex(): int\n            // Get the index of the current vertex among others of the same LatLngs group.\n            getIndex: function getIndex() {\n                return this.latlngs.indexOf(this.latlng);\n            },\n\n            // 🍂method getLastIndex(): int\n            // Get last vertex index of the LatLngs group of the current vertex.\n            getLastIndex: function getLastIndex() {\n                return this.latlngs.length - 1;\n            },\n\n            // 🍂method getPrevious(): VertexMarker\n            // Get the previous VertexMarker in the same LatLngs group.\n            getPrevious: function getPrevious() {\n                if (this.latlngs.length < 2) return;\n                var index = this.getIndex(),\n                    previousIndex = index - 1;\n                if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n                var previous = this.latlngs[previousIndex];\n                if (previous) return previous.__vertex;\n            },\n\n            // 🍂method getNext(): VertexMarker\n            // Get the next VertexMarker in the same LatLngs group.\n            getNext: function getNext() {\n                if (this.latlngs.length < 2) return;\n                var index = this.getIndex(),\n                    nextIndex = index + 1;\n                if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n                var next = this.latlngs[nextIndex];\n                if (next) return next.__vertex;\n            },\n\n            addMiddleMarker: function addMiddleMarker(previous) {\n                if (!this.editor.hasMiddleMarkers()) return;\n                previous = previous || this.getPrevious();\n                if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n            },\n\n            addMiddleMarkers: function addMiddleMarkers() {\n                if (!this.editor.hasMiddleMarkers()) return;\n                var previous = this.getPrevious();\n                if (previous) this.addMiddleMarker(previous);\n                var next = this.getNext();\n                if (next) next.resetMiddleMarker();\n            },\n\n            resetMiddleMarker: function resetMiddleMarker() {\n                if (this.middleMarker) this.middleMarker.delete();\n                this.addMiddleMarker();\n            },\n\n            // 🍂method split()\n            // Split the vertex LatLngs group at its index, if possible.\n            split: function split() {\n                if (!this.editor.splitShape) return; // Only for PolylineEditor\n                this.editor.splitShape(this.latlngs, this.getIndex());\n            },\n\n            // 🍂method continue()\n            // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n            continue: function _continue() {\n                if (!this.editor.continueBackward) return; // Only for PolylineEditor\n                var index = this.getIndex();\n                if (index === 0) this.editor.continueBackward(this.latlngs);else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n            }\n\n        });\n\n        L.Editable.mergeOptions({\n\n            // 🍂namespace Editable\n            // 🍂option vertexMarkerClass: class = VertexMarker\n            // Class to be used as vertex, for path editing.\n            vertexMarkerClass: L.Editable.VertexMarker\n\n        });\n\n        L.Editable.MiddleMarker = L.Marker.extend({\n\n            options: {\n                opacity: 0.5,\n                className: 'leaflet-div-icon leaflet-middle-icon',\n                draggable: true\n            },\n\n            initialize: function initialize(left, right, latlngs, editor, options) {\n                this.left = left;\n                this.right = right;\n                this.editor = editor;\n                this.latlngs = latlngs;\n                L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n                this._opacity = this.options.opacity;\n                this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n                this.editor.editLayer.addLayer(this);\n                this.setVisibility();\n            },\n\n            setVisibility: function setVisibility() {\n                var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                    rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                    size = L.point(this.options.icon.options.iconSize);\n                if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();else this.show();\n            },\n\n            show: function show() {\n                this.setOpacity(this._opacity);\n            },\n\n            hide: function hide() {\n                this.setOpacity(0);\n            },\n\n            updateLatLng: function updateLatLng() {\n                this.setLatLng(this.computeLatLng());\n                this.setVisibility();\n            },\n\n            computeLatLng: function computeLatLng() {\n                var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                    rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                    y = (leftPoint.y + rightPoint.y) / 2,\n                    x = (leftPoint.x + rightPoint.x) / 2;\n                return this.editor.map.containerPointToLatLng([x, y]);\n            },\n\n            onAdd: function onAdd(map) {\n                L.Marker.prototype.onAdd.call(this, map);\n                L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n                map.on('zoomend', this.setVisibility, this);\n            },\n\n            onRemove: function onRemove(map) {\n                delete this.right.middleMarker;\n                L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n                map.off('zoomend', this.setVisibility, this);\n                L.Marker.prototype.onRemove.call(this, map);\n            },\n\n            onMouseDown: function onMouseDown(e) {\n                var iconPos = L.DomUtil.getPosition(this._icon),\n                    latlng = this.editor.map.layerPointToLatLng(iconPos);\n                e = {\n                    originalEvent: e,\n                    latlng: latlng\n                };\n                if (this.options.opacity === 0) return;\n                L.Editable.makeCancellable(e);\n                this.editor.onMiddleMarkerMouseDown(e);\n                if (e._cancelled) return;\n                this.latlngs.splice(this.index(), 0, e.latlng);\n                this.editor.refresh();\n                var icon = this._icon;\n                var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n                this.editor.onNewVertex(marker);\n                /* Hack to workaround browser not firing touchend when element is no more on DOM */\n                var parent = marker._icon.parentNode;\n                parent.removeChild(marker._icon);\n                marker._icon = icon;\n                parent.appendChild(marker._icon);\n                marker._initIcon();\n                marker._initInteraction();\n                marker.setOpacity(1);\n                /* End hack */\n                // Transfer ongoing dragging to real marker\n                L.Draggable._dragging = false;\n                marker.dragging._draggable._onDown(e.originalEvent);\n                this.delete();\n            },\n\n            delete: function _delete() {\n                this.editor.editLayer.removeLayer(this);\n            },\n\n            index: function index() {\n                return this.latlngs.indexOf(this.right.latlng);\n            }\n\n        });\n\n        L.Editable.mergeOptions({\n\n            // 🍂namespace Editable\n            // 🍂option middleMarkerClass: class = VertexMarker\n            // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n            middleMarkerClass: L.Editable.MiddleMarker\n\n        });\n\n        // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n        // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n        // editor basically knows how to handle the edition.\n        L.Editable.BaseEditor = L.Handler.extend({\n\n            initialize: function initialize(map, feature, options) {\n                L.setOptions(this, options);\n                this.map = map;\n                this.feature = feature;\n                this.feature.editor = this;\n                this.editLayer = new L.LayerGroup();\n                this.tools = this.options.editTools || map.editTools;\n            },\n\n            // 🍂method enable(): this\n            // Set up the drawing tools for the feature to be editable.\n            addHooks: function addHooks() {\n                if (this.isConnected()) this.onFeatureAdd();else this.feature.once('add', this.onFeatureAdd, this);\n                this.onEnable();\n                this.feature.on(this._getEvents(), this);\n            },\n\n            // 🍂method disable(): this\n            // Remove the drawing tools for the feature.\n            removeHooks: function removeHooks() {\n                this.feature.off(this._getEvents(), this);\n                if (this.feature.dragging) this.feature.dragging.disable();\n                this.editLayer.clearLayers();\n                this.tools.editLayer.removeLayer(this.editLayer);\n                this.onDisable();\n                if (this._drawing) this.cancelDrawing();\n            },\n\n            // 🍂method drawing(): boolean\n            // Return true if any drawing action is ongoing with this editor.\n            drawing: function drawing() {\n                return !!this._drawing;\n            },\n\n            reset: function reset() {},\n\n            onFeatureAdd: function onFeatureAdd() {\n                this.tools.editLayer.addLayer(this.editLayer);\n                if (this.feature.dragging) this.feature.dragging.enable();\n            },\n\n            hasMiddleMarkers: function hasMiddleMarkers() {\n                return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n            },\n\n            fireAndForward: function fireAndForward(type, e) {\n                e = e || {};\n                e.layer = this.feature;\n                this.feature.fire(type, e);\n                this.tools.fireAndForward(type, e);\n            },\n\n            onEnable: function onEnable() {\n                // 🍂namespace Editable\n                // 🍂event editable:enable: Event\n                // Fired when an existing feature is ready to be edited.\n                this.fireAndForward('editable:enable');\n            },\n\n            onDisable: function onDisable() {\n                // 🍂namespace Editable\n                // 🍂event editable:disable: Event\n                // Fired when an existing feature is not ready anymore to be edited.\n                this.fireAndForward('editable:disable');\n            },\n\n            onEditing: function onEditing() {\n                // 🍂namespace Editable\n                // 🍂event editable:editing: Event\n                // Fired as soon as any change is made to the feature geometry.\n                this.fireAndForward('editable:editing');\n            },\n\n            onStartDrawing: function onStartDrawing() {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:start: Event\n                // Fired when a feature is to be drawn.\n                this.fireAndForward('editable:drawing:start');\n            },\n\n            onEndDrawing: function onEndDrawing() {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:end: Event\n                // Fired when a feature is not drawn anymore.\n                this.fireAndForward('editable:drawing:end');\n            },\n\n            onCancelDrawing: function onCancelDrawing() {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:cancel: Event\n                // Fired when user cancel drawing while a feature is being drawn.\n                this.fireAndForward('editable:drawing:cancel');\n            },\n\n            onCommitDrawing: function onCommitDrawing(e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:commit: Event\n                // Fired when user finish drawing a feature.\n                this.fireAndForward('editable:drawing:commit', e);\n            },\n\n            onDrawingMouseDown: function onDrawingMouseDown(e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:mousedown: Event\n                // Fired when user `mousedown` while drawing.\n                this.fireAndForward('editable:drawing:mousedown', e);\n            },\n\n            onDrawingMouseUp: function onDrawingMouseUp(e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:mouseup: Event\n                // Fired when user `mouseup` while drawing.\n                this.fireAndForward('editable:drawing:mouseup', e);\n            },\n\n            startDrawing: function startDrawing() {\n                if (!this._drawing) this._drawing = L.Editable.FORWARD;\n                this.tools.registerForDrawing(this);\n                this.onStartDrawing();\n            },\n\n            commitDrawing: function commitDrawing(e) {\n                this.onCommitDrawing(e);\n                this.endDrawing();\n            },\n\n            cancelDrawing: function cancelDrawing() {\n                // If called during a vertex drag, the vertex will be removed before\n                // the mouseup fires on it. This is a workaround. Maybe better fix is\n                // To have L.Draggable reset it's status on disable (Leaflet side).\n                L.Draggable._dragging = false;\n                this.onCancelDrawing();\n                this.endDrawing();\n            },\n\n            endDrawing: function endDrawing() {\n                this._drawing = false;\n                this.tools.unregisterForDrawing(this);\n                this.onEndDrawing();\n            },\n\n            onDrawingClick: function onDrawingClick(e) {\n                if (!this.drawing()) return;\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:click: CancelableEvent\n                // Fired when user `click` while drawing, before any internal action is being processed.\n                this.fireAndForward('editable:drawing:click', e);\n                if (e._cancelled) return;\n                if (!this.isConnected()) this.connect(e);\n                this.processDrawingClick(e);\n            },\n\n            isConnected: function isConnected() {\n                return this.map.hasLayer(this.feature);\n            },\n\n            connect: function connect() {\n                this.tools.connectCreatedToMap(this.feature);\n                this.tools.editLayer.addLayer(this.editLayer);\n            },\n\n            onMove: function onMove(e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:move: Event\n                // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n                this.fireAndForward('editable:drawing:move', e);\n            },\n\n            onDrawingMouseMove: function onDrawingMouseMove(e) {\n                this.onMove(e);\n            },\n\n            _getEvents: function _getEvents() {\n                return {\n                    dragstart: this.onDragStart,\n                    drag: this.onDrag,\n                    dragend: this.onDragEnd,\n                    remove: this.disable\n                };\n            },\n\n            onDragStart: function onDragStart(e) {\n                this.onEditing();\n                // 🍂namespace Editable\n                // 🍂event editable:dragstart: Event\n                // Fired before a path feature is dragged.\n                this.fireAndForward('editable:dragstart', e);\n            },\n\n            onDrag: function onDrag(e) {\n                this.onMove(e);\n                // 🍂namespace Editable\n                // 🍂event editable:drag: Event\n                // Fired when a path feature is being dragged.\n                this.fireAndForward('editable:drag', e);\n            },\n\n            onDragEnd: function onDragEnd(e) {\n                // 🍂namespace Editable\n                // 🍂event editable:dragend: Event\n                // Fired after a path feature has been dragged.\n                this.fireAndForward('editable:dragend', e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n        // 🍂inherits BaseEditor\n        // Editor for Marker.\n        L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n            onDrawingMouseMove: function onDrawingMouseMove(e) {\n                L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n                if (this._drawing) this.feature.setLatLng(e.latlng);\n            },\n\n            processDrawingClick: function processDrawingClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:clicked: Event\n                // Fired when user `click` while drawing, after all internal actions.\n                this.fireAndForward('editable:drawing:clicked', e);\n                this.commitDrawing(e);\n            },\n\n            connect: function connect(e) {\n                // On touch, the latlng has not been updated because there is\n                // no mousemove.\n                if (e) this.feature._latlng = e.latlng;\n                L.Editable.BaseEditor.prototype.connect.call(this, e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n        // 🍂inherits BaseEditor\n        // Base class for all path editors.\n        L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n            CLOSED: false,\n            MIN_VERTEX: 2,\n\n            addHooks: function addHooks() {\n                L.Editable.BaseEditor.prototype.addHooks.call(this);\n                if (this.feature) this.initVertexMarkers();\n                return this;\n            },\n\n            initVertexMarkers: function initVertexMarkers(latlngs) {\n                if (!this.enabled()) return;\n                latlngs = latlngs || this.getLatLngs();\n                if (isFlat(latlngs)) this.addVertexMarkers(latlngs);else for (var i = 0; i < latlngs.length; i++) {\n                    this.initVertexMarkers(latlngs[i]);\n                }\n            },\n\n            getLatLngs: function getLatLngs() {\n                return this.feature.getLatLngs();\n            },\n\n            // 🍂method reset()\n            // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n            reset: function reset() {\n                this.editLayer.clearLayers();\n                this.initVertexMarkers();\n            },\n\n            addVertexMarker: function addVertexMarker(latlng, latlngs) {\n                return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n            },\n\n            onNewVertex: function onNewVertex(vertex) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:new: VertexEvent\n                // Fired when a new vertex is created.\n                this.fireAndForward('editable:vertex:new', { latlng: vertex.latlng, vertex: vertex });\n            },\n\n            addVertexMarkers: function addVertexMarkers(latlngs) {\n                for (var i = 0; i < latlngs.length; i++) {\n                    this.addVertexMarker(latlngs[i], latlngs);\n                }\n            },\n\n            refreshVertexMarkers: function refreshVertexMarkers(latlngs) {\n                latlngs = latlngs || this.getDefaultLatLngs();\n                for (var i = 0; i < latlngs.length; i++) {\n                    latlngs[i].__vertex.update();\n                }\n            },\n\n            addMiddleMarker: function addMiddleMarker(left, right, latlngs) {\n                return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n            },\n\n            onVertexMarkerClick: function onVertexMarkerClick(e) {\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:click: CancelableVertexEvent\n                // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n                this.fireAndForward('editable:vertex:click', e);\n                if (e._cancelled) return;\n                if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n                var index = e.vertex.getIndex(),\n                    commit;\n                if (e.originalEvent.ctrlKey) {\n                    this.onVertexMarkerCtrlClick(e);\n                } else if (e.originalEvent.altKey) {\n                    this.onVertexMarkerAltClick(e);\n                } else if (e.originalEvent.shiftKey) {\n                    this.onVertexMarkerShiftClick(e);\n                } else if (e.originalEvent.metaKey) {\n                    this.onVertexMarkerMetaKeyClick(e);\n                } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                    if (index >= this.MIN_VERTEX - 1) commit = true;\n                } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                    commit = true;\n                } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                    commit = true; // Allow to close on first point also for polygons\n                } else {\n                    this.onVertexRawMarkerClick(e);\n                }\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:clicked: VertexEvent\n                // Fired when a `click` is issued on a vertex, after all internal actions.\n                this.fireAndForward('editable:vertex:clicked', e);\n                if (commit) this.commitDrawing(e);\n            },\n\n            onVertexRawMarkerClick: function onVertexRawMarkerClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n                // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n                this.fireAndForward('editable:vertex:rawclick', e);\n                if (e._cancelled) return;\n                if (!this.vertexCanBeDeleted(e.vertex)) return;\n                e.vertex.delete();\n            },\n\n            vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n                return vertex.latlngs.length > this.MIN_VERTEX;\n            },\n\n            onVertexDeleted: function onVertexDeleted(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:deleted: VertexEvent\n                // Fired after a vertex has been deleted by user.\n                this.fireAndForward('editable:vertex:deleted', e);\n            },\n\n            onVertexMarkerCtrlClick: function onVertexMarkerCtrlClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:ctrlclick: VertexEvent\n                // Fired when a `click` with `ctrlKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:ctrlclick', e);\n            },\n\n            onVertexMarkerShiftClick: function onVertexMarkerShiftClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:shiftclick: VertexEvent\n                // Fired when a `click` with `shiftKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:shiftclick', e);\n            },\n\n            onVertexMarkerMetaKeyClick: function onVertexMarkerMetaKeyClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:metakeyclick: VertexEvent\n                // Fired when a `click` with `metaKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:metakeyclick', e);\n            },\n\n            onVertexMarkerAltClick: function onVertexMarkerAltClick(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:altclick: VertexEvent\n                // Fired when a `click` with `altKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:altclick', e);\n            },\n\n            onVertexMarkerContextMenu: function onVertexMarkerContextMenu(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:contextmenu: VertexEvent\n                // Fired when a `contextmenu` is issued on a vertex.\n                this.fireAndForward('editable:vertex:contextmenu', e);\n            },\n\n            onVertexMarkerMouseDown: function onVertexMarkerMouseDown(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mousedown: VertexEvent\n                // Fired when user `mousedown` a vertex.\n                this.fireAndForward('editable:vertex:mousedown', e);\n            },\n\n            onVertexMarkerMouseOver: function onVertexMarkerMouseOver(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mouseover: VertexEvent\n                // Fired when a user's mouse enters the vertex\n                this.fireAndForward('editable:vertex:mouseover', e);\n            },\n\n            onVertexMarkerMouseOut: function onVertexMarkerMouseOut(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mouseout: VertexEvent\n                // Fired when a user's mouse leaves the vertex\n                this.fireAndForward('editable:vertex:mouseout', e);\n            },\n\n            onMiddleMarkerMouseDown: function onMiddleMarkerMouseDown(e) {\n                // 🍂namespace Editable\n                // 🍂section MiddleMarker events\n                // 🍂event editable:middlemarker:mousedown: VertexEvent\n                // Fired when user `mousedown` a middle marker.\n                this.fireAndForward('editable:middlemarker:mousedown', e);\n            },\n\n            onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n                this.onMove(e);\n                if (this.feature._bounds) this.extendBounds(e);\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:drag: VertexEvent\n                // Fired when a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:drag', e);\n            },\n\n            onVertexMarkerDragStart: function onVertexMarkerDragStart(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:dragstart: VertexEvent\n                // Fired before a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:dragstart', e);\n            },\n\n            onVertexMarkerDragEnd: function onVertexMarkerDragEnd(e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:dragend: VertexEvent\n                // Fired after a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:dragend', e);\n            },\n\n            setDrawnLatLngs: function setDrawnLatLngs(latlngs) {\n                this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n            },\n\n            startDrawing: function startDrawing() {\n                if (!this._drawnLatLngs) this.setDrawnLatLngs();\n                L.Editable.BaseEditor.prototype.startDrawing.call(this);\n            },\n\n            startDrawingForward: function startDrawingForward() {\n                this.startDrawing();\n            },\n\n            endDrawing: function endDrawing() {\n                this.tools.detachForwardLineGuide();\n                this.tools.detachBackwardLineGuide();\n                if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n                L.Editable.BaseEditor.prototype.endDrawing.call(this);\n                delete this._drawnLatLngs;\n            },\n\n            addLatLng: function addLatLng(latlng) {\n                if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);else this._drawnLatLngs.unshift(latlng);\n                this.feature._bounds.extend(latlng);\n                var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n                this.onNewVertex(vertex);\n                this.refresh();\n            },\n\n            newPointForward: function newPointForward(latlng) {\n                this.addLatLng(latlng);\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlng);\n            },\n\n            newPointBackward: function newPointBackward(latlng) {\n                this.addLatLng(latlng);\n                this.tools.anchorBackwardLineGuide(latlng);\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method push()\n            // Programmatically add a point while drawing.\n            push: function push(latlng) {\n                if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n                if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);else this.newPointBackward(latlng);\n            },\n\n            removeLatLng: function removeLatLng(latlng) {\n                latlng.__vertex.delete();\n                this.refresh();\n            },\n\n            // 🍂method pop(): L.LatLng or null\n            // Programmatically remove last point (if any) while drawing.\n            pop: function pop() {\n                if (this._drawnLatLngs.length <= 1) return;\n                var latlng;\n                if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];else latlng = this._drawnLatLngs[0];\n                this.removeLatLng(latlng);\n                if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n                return latlng;\n            },\n\n            processDrawingClick: function processDrawingClick(e) {\n                if (e.vertex && e.vertex.editor === this) return;\n                if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);else this.newPointBackward(e.latlng);\n                this.fireAndForward('editable:drawing:clicked', e);\n            },\n\n            onDrawingMouseMove: function onDrawingMouseMove(e) {\n                L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n                if (this._drawing) {\n                    this.tools.moveForwardLineGuide(e.latlng);\n                    this.tools.moveBackwardLineGuide(e.latlng);\n                }\n            },\n\n            refresh: function refresh() {\n                this.feature.redraw();\n                this.onEditing();\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method newShape(latlng?: L.LatLng)\n            // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n            // if optional `latlng` is given, start a path at this point.\n            newShape: function newShape(latlng) {\n                var shape = this.addNewEmptyShape();\n                if (!shape) return;\n                this.setDrawnLatLngs(shape[0] || shape); // Polygon or polyline\n                this.startDrawingForward();\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:new: ShapeEvent\n                // Fired when a new shape is created in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:new', { shape: shape });\n                if (latlng) this.newPointForward(latlng);\n            },\n\n            deleteShape: function deleteShape(shape, latlngs) {\n                var e = { shape: shape };\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:delete: CancelableShapeEvent\n                // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:delete', e);\n                if (e._cancelled) return;\n                shape = this._deleteShape(shape, latlngs);\n                if (this.ensureNotFlat) this.ensureNotFlat(); // Polygon.\n                this.feature.setLatLngs(this.getLatLngs()); // Force bounds reset.\n                this.refresh();\n                this.reset();\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:deleted: ShapeEvent\n                // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:deleted', { shape: shape });\n                return shape;\n            },\n\n            _deleteShape: function _deleteShape(shape, latlngs) {\n                latlngs = latlngs || this.getLatLngs();\n                if (!latlngs.length) return;\n                var self = this,\n                    inplaceDelete = function inplaceDelete(latlngs, shape) {\n                    // Called when deleting a flat latlngs\n                    shape = latlngs.splice(0, Number.MAX_VALUE);\n                    return shape;\n                },\n                    spliceDelete = function spliceDelete(latlngs, shape) {\n                    // Called when removing a latlngs inside an array\n                    latlngs.splice(latlngs.indexOf(shape), 1);\n                    if (!latlngs.length) self._deleteShape(latlngs);\n                    return shape;\n                };\n                if (latlngs === shape) return inplaceDelete(latlngs, shape);\n                for (var i = 0; i < latlngs.length; i++) {\n                    if (latlngs[i] === shape) return spliceDelete(latlngs, shape);else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n                }\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n            // Remove a path shape at the given `latlng`.\n            deleteShapeAt: function deleteShapeAt(latlng) {\n                var shape = this.feature.shapeAt(latlng);\n                if (shape) return this.deleteShape(shape);\n            },\n\n            // 🍂method appendShape(shape: Array)\n            // Append a new shape to the Polygon or Polyline.\n            appendShape: function appendShape(shape) {\n                this.insertShape(shape);\n            },\n\n            // 🍂method prependShape(shape: Array)\n            // Prepend a new shape to the Polygon or Polyline.\n            prependShape: function prependShape(shape) {\n                this.insertShape(shape, 0);\n            },\n\n            // 🍂method insertShape(shape: Array, index: int)\n            // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n            insertShape: function insertShape(shape, index) {\n                this.ensureMulti();\n                shape = this.formatShape(shape);\n                if (typeof index === 'undefined') index = this.feature._latlngs.length;\n                this.feature._latlngs.splice(index, 0, shape);\n                this.feature.redraw();\n                if (this._enabled) this.reset();\n            },\n\n            extendBounds: function extendBounds(e) {\n                this.feature._bounds.extend(e.vertex.latlng);\n            },\n\n            onDragStart: function onDragStart(e) {\n                this.editLayer.clearLayers();\n                L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n            },\n\n            onDragEnd: function onDragEnd(e) {\n                this.initVertexMarkers();\n                L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n        // 🍂inherits PathEditor\n        L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n            startDrawingBackward: function startDrawingBackward() {\n                this._drawing = L.Editable.BACKWARD;\n                this.startDrawing();\n            },\n\n            // 🍂method continueBackward(latlngs?: Array)\n            // Set up drawing tools to continue the line backward.\n            continueBackward: function continueBackward(latlngs) {\n                if (this.drawing()) return;\n                latlngs = latlngs || this.getDefaultLatLngs();\n                this.setDrawnLatLngs(latlngs);\n                if (latlngs.length > 0) {\n                    this.tools.attachBackwardLineGuide();\n                    this.tools.anchorBackwardLineGuide(latlngs[0]);\n                }\n                this.startDrawingBackward();\n            },\n\n            // 🍂method continueForward(latlngs?: Array)\n            // Set up drawing tools to continue the line forward.\n            continueForward: function continueForward(latlngs) {\n                if (this.drawing()) return;\n                latlngs = latlngs || this.getDefaultLatLngs();\n                this.setDrawnLatLngs(latlngs);\n                if (latlngs.length > 0) {\n                    this.tools.attachForwardLineGuide();\n                    this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n                }\n                this.startDrawingForward();\n            },\n\n            getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n                latlngs = latlngs || this.feature._latlngs;\n                if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;else return this.getDefaultLatLngs(latlngs[0]);\n            },\n\n            ensureMulti: function ensureMulti() {\n                if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                    this.feature._latlngs = [this.feature._latlngs];\n                }\n            },\n\n            addNewEmptyShape: function addNewEmptyShape() {\n                if (this.feature._latlngs.length) {\n                    var shape = [];\n                    this.appendShape(shape);\n                    return shape;\n                } else {\n                    return this.feature._latlngs;\n                }\n            },\n\n            formatShape: function formatShape(shape) {\n                if (isFlat(shape)) return shape;else if (shape[0]) return this.formatShape(shape[0]);\n            },\n\n            // 🍂method splitShape(latlngs?: Array, index: int)\n            // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n            splitShape: function splitShape(shape, index) {\n                if (!index || index >= shape.length - 1) return;\n                this.ensureMulti();\n                var shapeIndex = this.feature._latlngs.indexOf(shape);\n                if (shapeIndex === -1) return;\n                var first = shape.slice(0, index + 1),\n                    second = shape.slice(index);\n                // We deal with reference, we don't want twice the same latlng around.\n                second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n                this.feature._latlngs.splice(shapeIndex, 1, first, second);\n                this.refresh();\n                this.reset();\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n        // 🍂inherits PathEditor\n        L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n            CLOSED: true,\n            MIN_VERTEX: 3,\n\n            newPointForward: function newPointForward(latlng) {\n                L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n                if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n                if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n            },\n\n            addNewEmptyHole: function addNewEmptyHole(latlng) {\n                this.ensureNotFlat();\n                var latlngs = this.feature.shapeAt(latlng);\n                if (!latlngs) return;\n                var holes = [];\n                latlngs.push(holes);\n                return holes;\n            },\n\n            // 🍂method newHole(latlng?: L.LatLng, index: int)\n            // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n            newHole: function newHole(latlng) {\n                var holes = this.addNewEmptyHole(latlng);\n                if (!holes) return;\n                this.setDrawnLatLngs(holes);\n                this.startDrawingForward();\n                if (latlng) this.newPointForward(latlng);\n            },\n\n            addNewEmptyShape: function addNewEmptyShape() {\n                if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                    var shape = [];\n                    this.appendShape(shape);\n                    return shape;\n                } else {\n                    return this.feature._latlngs;\n                }\n            },\n\n            ensureMulti: function ensureMulti() {\n                if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                    this.feature._latlngs = [this.feature._latlngs];\n                }\n            },\n\n            ensureNotFlat: function ensureNotFlat() {\n                if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n            },\n\n            vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n                var parent = this.feature.parentShape(vertex.latlngs),\n                    idx = L.Util.indexOf(parent, vertex.latlngs);\n                if (idx > 0) return true; // Holes can be totally deleted without removing the layer itself.\n                return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n            },\n\n            getDefaultLatLngs: function getDefaultLatLngs() {\n                if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n                return this.feature._latlngs[0];\n            },\n\n            formatShape: function formatShape(shape) {\n                // [[1, 2], [3, 4]] => must be nested\n                // [] => must be nested\n                // [[]] => is already nested\n                if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];else return shape;\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n        // 🍂inherits PathEditor\n        L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n            CLOSED: true,\n            MIN_VERTEX: 4,\n\n            options: {\n                skipMiddleMarkers: true\n            },\n\n            extendBounds: function extendBounds(e) {\n                var index = e.vertex.getIndex(),\n                    next = e.vertex.getNext(),\n                    previous = e.vertex.getPrevious(),\n                    oppositeIndex = (index + 2) % 4,\n                    opposite = e.vertex.latlngs[oppositeIndex],\n                    bounds = new L.LatLngBounds(e.latlng, opposite);\n                // Update latlngs by hand to preserve order.\n                previous.latlng.update([e.latlng.lat, opposite.lng]);\n                next.latlng.update([opposite.lat, e.latlng.lng]);\n                this.updateBounds(bounds);\n                this.refreshVertexMarkers();\n            },\n\n            onDrawingMouseDown: function onDrawingMouseDown(e) {\n                L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n                this.connect();\n                var latlngs = this.getDefaultLatLngs();\n                // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n                // which is the case here as all latlngs are [0, 0]\n                if (latlngs.length === 3) latlngs.push(e.latlng);\n                var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n                this.updateBounds(bounds);\n                this.updateLatLngs(bounds);\n                this.refresh();\n                this.reset();\n                // Stop dragging map.\n                // L.Draggable has two workflows:\n                // - mousedown => mousemove => mouseup\n                // - touchstart => touchmove => touchend\n                // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n                // can deal with mousedown, but then when in a touch device, we are dealing with\n                // simulated events (actually simulated by L.Map.Tap), which are no more taken\n                // into account by L.Draggable.\n                // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n                e.originalEvent._simulated = false;\n                this.map.dragging._draggable._onUp(e.originalEvent);\n                // Now transfer ongoing drag action to the bottom right corner.\n                // Should we refine which corner will handle the drag according to\n                // drag direction?\n                latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n            },\n\n            onDrawingMouseUp: function onDrawingMouseUp(e) {\n                this.commitDrawing(e);\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n            },\n\n            onDrawingMouseMove: function onDrawingMouseMove(e) {\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n            },\n\n            getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n                return latlngs || this.feature._latlngs[0];\n            },\n\n            updateBounds: function updateBounds(bounds) {\n                this.feature._bounds = bounds;\n            },\n\n            updateLatLngs: function updateLatLngs(bounds) {\n                var latlngs = this.getDefaultLatLngs(),\n                    newLatlngs = this.feature._boundsToLatLngs(bounds);\n                // Keep references.\n                for (var i = 0; i < latlngs.length; i++) {\n                    latlngs[i].update(newLatlngs[i]);\n                }\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n        // 🍂inherits PathEditor\n        L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n            MIN_VERTEX: 2,\n\n            options: {\n                skipMiddleMarkers: true\n            },\n\n            initialize: function initialize(map, feature, options) {\n                L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n                this._resizeLatLng = this.computeResizeLatLng();\n            },\n\n            computeResizeLatLng: function computeResizeLatLng() {\n                // While circle is not added to the map, _radius is not set.\n                var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                    point = this.map.project(this.feature._latlng);\n                return this.map.unproject([point.x + delta, point.y - delta]);\n            },\n\n            updateResizeLatLng: function updateResizeLatLng() {\n                this._resizeLatLng.update(this.computeResizeLatLng());\n                this._resizeLatLng.__vertex.update();\n            },\n\n            getLatLngs: function getLatLngs() {\n                return [this.feature._latlng, this._resizeLatLng];\n            },\n\n            getDefaultLatLngs: function getDefaultLatLngs() {\n                return this.getLatLngs();\n            },\n\n            onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n                if (e.vertex.getIndex() === 1) this.resize(e);else this.updateResizeLatLng(e);\n                L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n            },\n\n            resize: function resize(e) {\n                var radius = this.feature._latlng.distanceTo(e.latlng);\n                this.feature.setRadius(radius);\n            },\n\n            onDrawingMouseDown: function onDrawingMouseDown(e) {\n                L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n                this._resizeLatLng.update(e.latlng);\n                this.feature._latlng.update(e.latlng);\n                this.connect();\n                // Stop dragging map.\n                e.originalEvent._simulated = false;\n                this.map.dragging._draggable._onUp(e.originalEvent);\n                // Now transfer ongoing drag action to the radius handler.\n                this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n            },\n\n            onDrawingMouseUp: function onDrawingMouseUp(e) {\n                this.commitDrawing(e);\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n            },\n\n            onDrawingMouseMove: function onDrawingMouseMove(e) {\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n            },\n\n            onDrag: function onDrag(e) {\n                L.Editable.PathEditor.prototype.onDrag.call(this, e);\n                this.feature.dragging.updateLatLng(this._resizeLatLng);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class EditableMixin\n        // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n        // and `L.Marker`. It adds some methods to them.\n        // *When editing is enabled, the editor is accessible on the instance with the\n        // `editor` property.*\n        var EditableMixin = {\n\n            createEditor: function createEditor(map) {\n                map = map || this._map;\n                var tools = (this.options.editOptions || {}).editTools || map.editTools;\n                if (!tools) throw Error('Unable to detect Editable instance.');\n                var Klass = this.options.editorClass || this.getEditorClass(tools);\n                return new Klass(map, this, this.options.editOptions);\n            },\n\n            // 🍂method enableEdit(map?: L.Map): this.editor\n            // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n            enableEdit: function enableEdit(map) {\n                if (!this.editor) this.createEditor(map);\n                this.editor.enable();\n                return this.editor;\n            },\n\n            // 🍂method editEnabled(): boolean\n            // Return true if current instance has an editor attached, and this editor is enabled.\n            editEnabled: function editEnabled() {\n                return this.editor && this.editor.enabled();\n            },\n\n            // 🍂method disableEdit()\n            // Disable editing, also remove the editor property reference.\n            disableEdit: function disableEdit() {\n                if (this.editor) {\n                    this.editor.disable();\n                    delete this.editor;\n                }\n            },\n\n            // 🍂method toggleEdit()\n            // Enable or disable editing, according to current status.\n            toggleEdit: function toggleEdit() {\n                if (this.editEnabled()) this.disableEdit();else this.enableEdit();\n            },\n\n            _onEditableAdd: function _onEditableAdd() {\n                if (this.editor) this.enableEdit();\n            }\n\n        };\n\n        var PolylineMixin = {\n\n            getEditorClass: function getEditorClass(tools) {\n                return tools && tools.options.polylineEditorClass ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n            },\n\n            shapeAt: function shapeAt(latlng, latlngs) {\n                // We can have those cases:\n                // - latlngs are just a flat array of latlngs, use this\n                // - latlngs is an array of arrays of latlngs, loop over\n                var shape = null;\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                    if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n                }return shape;\n            },\n\n            isInLatLngs: function isInLatLngs(l, latlngs) {\n                if (!latlngs) return false;\n                var i,\n                    k,\n                    len,\n                    part = [],\n                    p,\n                    w = this._clickTolerance();\n                this._projectLatlngs(latlngs, part, this._pxBounds);\n                part = part[0];\n                p = this._map.latLngToLayerPoint(l);\n\n                if (!this._pxBounds.contains(p)) {\n                    return false;\n                }\n                for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                    if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n        };\n\n        var PolygonMixin = {\n\n            getEditorClass: function getEditorClass(tools) {\n                return tools && tools.options.polygonEditorClass ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n            },\n\n            shapeAt: function shapeAt(latlng, latlngs) {\n                // We can have those cases:\n                // - latlngs are just a flat array of latlngs, use this\n                // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n                // - latlngs is an array of arrays of arrays, this is a multi, loop over\n                var shape = null;\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                    if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n                }return shape;\n            },\n\n            isInLatLngs: function isInLatLngs(l, latlngs) {\n                var inside = false,\n                    l1,\n                    l2,\n                    j,\n                    k,\n                    len2;\n\n                for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                    l1 = latlngs[j];\n                    l2 = latlngs[k];\n\n                    if (l1.lat > l.lat !== l2.lat > l.lat && l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng) {\n                        inside = !inside;\n                    }\n                }\n\n                return inside;\n            },\n\n            parentShape: function parentShape(shape, latlngs) {\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs) return;\n                var idx = L.Util.indexOf(latlngs, shape);\n                if (idx !== -1) return latlngs;\n                for (var i = 0; i < latlngs.length; i++) {\n                    idx = L.Util.indexOf(latlngs[i], shape);\n                    if (idx !== -1) return latlngs[i];\n                }\n            }\n\n        };\n\n        var MarkerMixin = {\n\n            getEditorClass: function getEditorClass(tools) {\n                return tools && tools.options.markerEditorClass ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n            }\n\n        };\n\n        var RectangleMixin = {\n\n            getEditorClass: function getEditorClass(tools) {\n                return tools && tools.options.rectangleEditorClass ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n            }\n\n        };\n\n        var CircleMixin = {\n\n            getEditorClass: function getEditorClass(tools) {\n                return tools && tools.options.circleEditorClass ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n            }\n\n        };\n\n        var keepEditable = function keepEditable() {\n            // Make sure you can remove/readd an editable layer.\n            this.on('add', this._onEditableAdd);\n        };\n\n        var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat; // <=> 1.1 compat.\n\n\n        if (L.Polyline) {\n            L.Polyline.include(EditableMixin);\n            L.Polyline.include(PolylineMixin);\n            L.Polyline.addInitHook(keepEditable);\n        }\n        if (L.Polygon) {\n            L.Polygon.include(EditableMixin);\n            L.Polygon.include(PolygonMixin);\n        }\n        if (L.Marker) {\n            L.Marker.include(EditableMixin);\n            L.Marker.include(MarkerMixin);\n            L.Marker.addInitHook(keepEditable);\n        }\n        if (L.Rectangle) {\n            L.Rectangle.include(EditableMixin);\n            L.Rectangle.include(RectangleMixin);\n        }\n        if (L.Circle) {\n            L.Circle.include(EditableMixin);\n            L.Circle.include(CircleMixin);\n        }\n\n        L.LatLng.prototype.update = function (latlng) {\n            latlng = L.latLng(latlng);\n            this.lat = latlng.lat;\n            this.lng = latlng.lng;\n        };\n    }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Vue2LeafletEditablePlugin.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b31ff26b210a6292af03","export default {\n    install(){\n        this.init(window.L)\n    },\n    init(L){\n        // 🍂miniclass CancelableEvent (Event objects)\n        // 🍂method cancel()\n        // Cancel any subsequent action.\n\n        // 🍂miniclass VertexEvent (Event objects)\n        // 🍂property vertex: VertexMarker\n        // The vertex that fires the event.\n\n        // 🍂miniclass ShapeEvent (Event objects)\n        // 🍂property shape: Array\n        // The shape (LatLngs array) subject of the action.\n\n        // 🍂miniclass CancelableVertexEvent (Event objects)\n        // 🍂inherits VertexEvent\n        // 🍂inherits CancelableEvent\n\n        // 🍂miniclass CancelableShapeEvent (Event objects)\n        // 🍂inherits ShapeEvent\n        // 🍂inherits CancelableEvent\n\n        // 🍂miniclass LayerEvent (Event objects)\n        // 🍂property layer: object\n        // The Layer (Marker, Polyline…) subject of the action.\n\n        // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n        // Main edition handler. By default, it is attached to the map\n        // as `map.editTools` property.\n        // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n        // the behaviour: using options, listening to events, or extending.\n        L.Editable = L.Evented.extend({\n\n            statics: {\n                FORWARD: 1,\n                BACKWARD: -1\n            },\n\n            options: {\n\n                // You can pass them when creating a map using the `editOptions` key.\n                // 🍂option zIndex: int = 1000\n                // The default zIndex of the editing tools.\n                zIndex: 1000,\n\n                // 🍂option polygonClass: class = L.Polygon\n                // Class to be used when creating a new Polygon.\n                polygonClass: L.Polygon,\n\n                // 🍂option polylineClass: class = L.Polyline\n                // Class to be used when creating a new Polyline.\n                polylineClass: L.Polyline,\n\n                // 🍂option markerClass: class = L.Marker\n                // Class to be used when creating a new Marker.\n                markerClass: L.Marker,\n\n                // 🍂option rectangleClass: class = L.Rectangle\n                // Class to be used when creating a new Rectangle.\n                rectangleClass: L.Rectangle,\n\n                // 🍂option circleClass: class = L.Circle\n                // Class to be used when creating a new Circle.\n                circleClass: L.Circle,\n\n                // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n                // CSS class to be added to the map container while drawing.\n                drawingCSSClass: 'leaflet-editable-drawing',\n\n                // 🍂option drawingCursor: const = 'crosshair'\n                // Cursor mode set to the map while drawing.\n                drawingCursor: 'crosshair',\n\n                // 🍂option editLayer: Layer = new L.LayerGroup()\n                // Layer used to store edit tools (vertex, line guide…).\n                editLayer: undefined,\n\n                // 🍂option featuresLayer: Layer = new L.LayerGroup()\n                // Default layer used to store drawn features (Marker, Polyline…).\n                featuresLayer: undefined,\n\n                // 🍂option polylineEditorClass: class = PolylineEditor\n                // Class to be used as Polyline editor.\n                polylineEditorClass: undefined,\n\n                // 🍂option polygonEditorClass: class = PolygonEditor\n                // Class to be used as Polygon editor.\n                polygonEditorClass: undefined,\n\n                // 🍂option markerEditorClass: class = MarkerEditor\n                // Class to be used as Marker editor.\n                markerEditorClass: undefined,\n\n                // 🍂option rectangleEditorClass: class = RectangleEditor\n                // Class to be used as Rectangle editor.\n                rectangleEditorClass: undefined,\n\n                // 🍂option circleEditorClass: class = CircleEditor\n                // Class to be used as Circle editor.\n                circleEditorClass: undefined,\n\n                // 🍂option lineGuideOptions: hash = {}\n                // Options to be passed to the line guides.\n                lineGuideOptions: {},\n\n                // 🍂option skipMiddleMarkers: boolean = false\n                // Set this to true if you don't want middle markers.\n                skipMiddleMarkers: false\n\n            },\n\n            initialize: function (map, options) {\n                L.setOptions(this, options);\n                this._lastZIndex = this.options.zIndex;\n                this.map = map;\n                this.editLayer = this.createEditLayer();\n                this.featuresLayer = this.createFeaturesLayer();\n                this.forwardLineGuide = this.createLineGuide();\n                this.backwardLineGuide = this.createLineGuide();\n            },\n\n            fireAndForward: function (type, e) {\n                e = e || {};\n                e.editTools = this;\n                this.fire(type, e);\n                this.map.fire(type, e);\n            },\n\n            createLineGuide: function () {\n                var options = L.extend({dashArray: '5,10', weight: 1, interactive: false}, this.options.lineGuideOptions);\n                return L.polyline([], options);\n            },\n\n            createVertexIcon: function (options) {\n                return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n            },\n\n            createEditLayer: function () {\n                return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n            },\n\n            createFeaturesLayer: function () {\n                return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n            },\n\n            moveForwardLineGuide: function (latlng) {\n                if (this.forwardLineGuide._latlngs.length) {\n                    this.forwardLineGuide._latlngs[1] = latlng;\n                    this.forwardLineGuide._bounds.extend(latlng);\n                    this.forwardLineGuide.redraw();\n                }\n            },\n\n            moveBackwardLineGuide: function (latlng) {\n                if (this.backwardLineGuide._latlngs.length) {\n                    this.backwardLineGuide._latlngs[1] = latlng;\n                    this.backwardLineGuide._bounds.extend(latlng);\n                    this.backwardLineGuide.redraw();\n                }\n            },\n\n            anchorForwardLineGuide: function (latlng) {\n                this.forwardLineGuide._latlngs[0] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            },\n\n            anchorBackwardLineGuide: function (latlng) {\n                this.backwardLineGuide._latlngs[0] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            },\n\n            attachForwardLineGuide: function () {\n                this.editLayer.addLayer(this.forwardLineGuide);\n            },\n\n            attachBackwardLineGuide: function () {\n                this.editLayer.addLayer(this.backwardLineGuide);\n            },\n\n            detachForwardLineGuide: function () {\n                this.forwardLineGuide.setLatLngs([]);\n                this.editLayer.removeLayer(this.forwardLineGuide);\n            },\n\n            detachBackwardLineGuide: function () {\n                this.backwardLineGuide.setLatLngs([]);\n                this.editLayer.removeLayer(this.backwardLineGuide);\n            },\n\n            blockEvents: function () {\n                // Hack: force map not to listen to other layers events while drawing.\n                if (!this._oldTargets) {\n                    this._oldTargets = this.map._targets;\n                    this.map._targets = {};\n                }\n            },\n\n            unblockEvents: function () {\n                if (this._oldTargets) {\n                    // Reset, but keep targets created while drawing.\n                    this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                    delete this._oldTargets;\n                }\n            },\n\n            registerForDrawing: function (editor) {\n                if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n                this.blockEvents();\n                editor.reset();  // Make sure editor tools still receive events.\n                this._drawingEditor = editor;\n                this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n                this.map.on('mousedown', this.onMousedown, this);\n                this.map.on('mouseup', this.onMouseup, this);\n                L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n                this.defaultMapCursor = this.map._container.style.cursor;\n                this.map._container.style.cursor = this.options.drawingCursor;\n            },\n\n            unregisterForDrawing: function (editor) {\n                this.unblockEvents();\n                L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n                this.map._container.style.cursor = this.defaultMapCursor;\n                editor = editor || this._drawingEditor;\n                if (!editor) return;\n                this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n                this.map.off('mousedown', this.onMousedown, this);\n                this.map.off('mouseup', this.onMouseup, this);\n                if (editor !== this._drawingEditor) return;\n                delete this._drawingEditor;\n                if (editor._drawing) editor.cancelDrawing();\n            },\n\n            onMousedown: function (e) {\n                if (e.originalEvent.which != 1) return;\n                this._mouseDown = e;\n                this._drawingEditor.onDrawingMouseDown(e);\n            },\n\n            onMouseup: function (e) {\n                if (this._mouseDown) {\n                    var editor = this._drawingEditor,\n                        mouseDown = this._mouseDown;\n                    this._mouseDown = null;\n                    editor.onDrawingMouseUp(e);\n                    if (this._drawingEditor !== editor) return;  // onDrawingMouseUp may call unregisterFromDrawing.\n                    var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                    var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                    if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n                }\n            },\n\n            // 🍂section Public methods\n            // You will generally access them by the `map.editTools`\n            // instance:\n            //\n            // `map.editTools.startPolyline();`\n\n            // 🍂method drawing(): boolean\n            // Return true if any drawing action is ongoing.\n            drawing: function () {\n                return this._drawingEditor && this._drawingEditor.drawing();\n            },\n\n            // 🍂method stopDrawing()\n            // When you need to stop any ongoing drawing, without needing to know which editor is active.\n            stopDrawing: function () {\n                this.unregisterForDrawing();\n            },\n\n            // 🍂method commitDrawing()\n            // When you need to commit any ongoing drawing, without needing to know which editor is active.\n            commitDrawing: function (e) {\n                if (!this._drawingEditor) return;\n                this._drawingEditor.commitDrawing(e);\n            },\n\n            connectCreatedToMap: function (layer) {\n                return this.featuresLayer.addLayer(layer);\n            },\n\n            // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n            // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n            // If `options` is given, it will be passed to the Polyline class constructor.\n            startPolyline: function (latlng, options) {\n                var line = this.createPolyline([], options);\n                line.enableEdit(this.map).newShape(latlng);\n                return line;\n            },\n\n            // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n            // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n            // If `options` is given, it will be passed to the Polygon class constructor.\n            startPolygon: function (latlng, options) {\n                var polygon = this.createPolygon([], options);\n                polygon.enableEdit(this.map).newShape(latlng);\n                return polygon;\n            },\n\n            // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n            // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n            // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n            // If `options` is given, it will be passed to the Marker class constructor.\n            startMarker: function (latlng, options) {\n                latlng = latlng || this.map.getCenter().clone();\n                var marker = this.createMarker(latlng, options);\n                marker.enableEdit(this.map).startDrawing();\n                return marker;\n            },\n\n            // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n            // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n            // If `options` is given, it will be passed to the Rectangle class constructor.\n            startRectangle: function(latlng, options) {\n                var corner = latlng || L.latLng([0, 0]);\n                var bounds = new L.LatLngBounds(corner, corner);\n                var rectangle = this.createRectangle(bounds, options);\n                rectangle.enableEdit(this.map).startDrawing();\n                return rectangle;\n            },\n\n            // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n            // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n            // If `options` is given, it will be passed to the Circle class constructor.\n            startCircle: function (latlng, options) {\n                latlng = latlng || this.map.getCenter().clone();\n                var circle = this.createCircle(latlng, options);\n                circle.enableEdit(this.map).startDrawing();\n                return circle;\n            },\n\n            startHole: function (editor, latlng) {\n                editor.newHole(latlng);\n            },\n\n            createLayer: function (klass, latlngs, options) {\n                options = L.Util.extend({editOptions: {editTools: this}}, options);\n                var layer = new klass(latlngs, options);\n                // 🍂namespace Editable\n                // 🍂event editable:created: LayerEvent\n                // Fired when a new feature (Marker, Polyline…) is created.\n                this.fireAndForward('editable:created', {layer: layer});\n                return layer;\n            },\n\n            createPolyline: function (latlngs, options) {\n                return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n            },\n\n            createPolygon: function (latlngs, options) {\n                return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n            },\n\n            createMarker: function (latlng, options) {\n                return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n            },\n\n            createRectangle: function (bounds, options) {\n                return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n            },\n\n            createCircle: function (latlng, options) {\n                return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n            }\n\n        });\n\n        L.extend(L.Editable, {\n\n            makeCancellable: function (e) {\n                e.cancel = function () {\n                    e._cancelled = true;\n                };\n            }\n\n        });\n\n        // 🍂namespace Map; 🍂class Map\n        // Leaflet.Editable add options and events to the `L.Map` object.\n        // See `Editable` events for the list of events fired on the Map.\n        // 🍂example\n        //\n        // ```js\n        // var map = L.map('map', {\n        //  editable: true,\n        //  editOptions: {\n        //    …\n        // }\n        // });\n        // ```\n        // 🍂section Editable Map Options\n        L.Map.mergeOptions({\n\n            // 🍂namespace Map\n            // 🍂section Map Options\n            // 🍂option editToolsClass: class = L.Editable\n            // Class to be used as vertex, for path editing.\n            editToolsClass: L.Editable,\n\n            // 🍂option editable: boolean = false\n            // Whether to create a L.Editable instance at map init.\n            editable: false,\n\n            // 🍂option editOptions: hash = {}\n            // Options to pass to L.Editable when instantiating.\n            editOptions: {}\n\n        });\n\n        L.Map.addInitHook(function () {\n\n            this.whenReady(function () {\n                if (this.options.editable) {\n                    this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n                }\n            });\n\n        });\n\n        L.Editable.VertexIcon = L.DivIcon.extend({\n\n            options: {\n                iconSize: new L.Point(8, 8)\n            }\n\n        });\n\n        L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n            options: {\n                iconSize: new L.Point(20, 20)\n            }\n\n        });\n\n\n        // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n        L.Editable.VertexMarker = L.Marker.extend({\n\n            options: {\n                draggable: true,\n                className: 'leaflet-div-icon leaflet-vertex-icon'\n            },\n\n\n            // 🍂section Public methods\n            // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n            // instance when listening for events like `editable:vertex:ctrlclick`.\n\n            initialize: function (latlng, latlngs, editor, options) {\n                // We don't use this._latlng, because on drag Leaflet replace it while\n                // we want to keep reference.\n                this.latlng = latlng;\n                this.latlngs = latlngs;\n                this.editor = editor;\n                L.Marker.prototype.initialize.call(this, latlng, options);\n                this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n                this.latlng.__vertex = this;\n                this.editor.editLayer.addLayer(this);\n                this.setZIndexOffset(editor.tools._lastZIndex + 1);\n            },\n\n            onAdd: function (map) {\n                L.Marker.prototype.onAdd.call(this, map);\n                this.on('drag', this.onDrag);\n                this.on('dragstart', this.onDragStart);\n                this.on('dragend', this.onDragEnd);\n                this.on('mouseup', this.onMouseup);\n                this.on('click', this.onClick);\n                this.on('contextmenu', this.onContextMenu);\n                this.on('mousedown touchstart', this.onMouseDown);\n                this.on('mouseover', this.onMouseOver);\n                this.on('mouseout', this.onMouseOut);\n                this.addMiddleMarkers();\n            },\n\n            onRemove: function (map) {\n                if (this.middleMarker) this.middleMarker.delete();\n                delete this.latlng.__vertex;\n                this.off('drag', this.onDrag);\n                this.off('dragstart', this.onDragStart);\n                this.off('dragend', this.onDragEnd);\n                this.off('mouseup', this.onMouseup);\n                this.off('click', this.onClick);\n                this.off('contextmenu', this.onContextMenu);\n                this.off('mousedown touchstart', this.onMouseDown);\n                this.off('mouseover', this.onMouseOver);\n                this.off('mouseout', this.onMouseOut);\n                L.Marker.prototype.onRemove.call(this, map);\n            },\n\n            onDrag: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDrag(e);\n                var iconPos = L.DomUtil.getPosition(this._icon),\n                    latlng = this._map.layerPointToLatLng(iconPos);\n                this.latlng.update(latlng);\n                this._latlng = this.latlng;  // Push back to Leaflet our reference.\n                this.editor.refresh();\n                if (this.middleMarker) this.middleMarker.updateLatLng();\n                var next = this.getNext();\n                if (next && next.middleMarker) next.middleMarker.updateLatLng();\n            },\n\n            onDragStart: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDragStart(e);\n            },\n\n            onDragEnd: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerDragEnd(e);\n            },\n\n            onClick: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerClick(e);\n            },\n\n            onMouseup: function (e) {\n                L.DomEvent.stop(e);\n                e.vertex = this;\n                this.editor.map.fire('mouseup', e);\n            },\n\n            onContextMenu: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerContextMenu(e);\n            },\n\n            onMouseDown: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseDown(e);\n            },\n\n            onMouseOver: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseOver(e);\n            },\n\n            onMouseOut: function (e) {\n                e.vertex = this;\n                this.editor.onVertexMarkerMouseOut(e);\n            },\n\n            // 🍂method delete()\n            // Delete a vertex and the related LatLng.\n            delete: function () {\n                var next = this.getNext();  // Compute before changing latlng\n                this.latlngs.splice(this.getIndex(), 1);\n                this.editor.editLayer.removeLayer(this);\n                this.editor.onVertexDeleted({latlng: this.latlng, vertex: this});\n                if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n                if (next) next.resetMiddleMarker();\n                this.editor.refresh();\n            },\n\n            // 🍂method getIndex(): int\n            // Get the index of the current vertex among others of the same LatLngs group.\n            getIndex: function () {\n                return this.latlngs.indexOf(this.latlng);\n            },\n\n            // 🍂method getLastIndex(): int\n            // Get last vertex index of the LatLngs group of the current vertex.\n            getLastIndex: function () {\n                return this.latlngs.length - 1;\n            },\n\n            // 🍂method getPrevious(): VertexMarker\n            // Get the previous VertexMarker in the same LatLngs group.\n            getPrevious: function () {\n                if (this.latlngs.length < 2) return;\n                var index = this.getIndex(),\n                    previousIndex = index - 1;\n                if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n                var previous = this.latlngs[previousIndex];\n                if (previous) return previous.__vertex;\n            },\n\n            // 🍂method getNext(): VertexMarker\n            // Get the next VertexMarker in the same LatLngs group.\n            getNext: function () {\n                if (this.latlngs.length < 2) return;\n                var index = this.getIndex(),\n                    nextIndex = index + 1;\n                if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n                var next = this.latlngs[nextIndex];\n                if (next) return next.__vertex;\n            },\n\n            addMiddleMarker: function (previous) {\n                if (!this.editor.hasMiddleMarkers()) return;\n                previous = previous || this.getPrevious();\n                if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n            },\n\n            addMiddleMarkers: function () {\n                if (!this.editor.hasMiddleMarkers()) return;\n                var previous = this.getPrevious();\n                if (previous) this.addMiddleMarker(previous);\n                var next = this.getNext();\n                if (next) next.resetMiddleMarker();\n            },\n\n            resetMiddleMarker: function () {\n                if (this.middleMarker) this.middleMarker.delete();\n                this.addMiddleMarker();\n            },\n\n            // 🍂method split()\n            // Split the vertex LatLngs group at its index, if possible.\n            split: function () {\n                if (!this.editor.splitShape) return;  // Only for PolylineEditor\n                this.editor.splitShape(this.latlngs, this.getIndex());\n            },\n\n            // 🍂method continue()\n            // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n            continue: function () {\n                if (!this.editor.continueBackward) return;  // Only for PolylineEditor\n                var index = this.getIndex();\n                if (index === 0) this.editor.continueBackward(this.latlngs);\n                else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n            }\n\n        });\n\n        L.Editable.mergeOptions({\n\n            // 🍂namespace Editable\n            // 🍂option vertexMarkerClass: class = VertexMarker\n            // Class to be used as vertex, for path editing.\n            vertexMarkerClass: L.Editable.VertexMarker\n\n        });\n\n        L.Editable.MiddleMarker = L.Marker.extend({\n\n            options: {\n                opacity: 0.5,\n                className: 'leaflet-div-icon leaflet-middle-icon',\n                draggable: true\n            },\n\n            initialize: function (left, right, latlngs, editor, options) {\n                this.left = left;\n                this.right = right;\n                this.editor = editor;\n                this.latlngs = latlngs;\n                L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n                this._opacity = this.options.opacity;\n                this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n                this.editor.editLayer.addLayer(this);\n                this.setVisibility();\n            },\n\n            setVisibility: function () {\n                var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                    rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                    size = L.point(this.options.icon.options.iconSize);\n                if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();\n                else this.show();\n            },\n\n            show: function () {\n                this.setOpacity(this._opacity);\n            },\n\n            hide: function () {\n                this.setOpacity(0);\n            },\n\n            updateLatLng: function () {\n                this.setLatLng(this.computeLatLng());\n                this.setVisibility();\n            },\n\n            computeLatLng: function () {\n                var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                    rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                    y = (leftPoint.y + rightPoint.y) / 2,\n                    x = (leftPoint.x + rightPoint.x) / 2;\n                return this.editor.map.containerPointToLatLng([x, y]);\n            },\n\n            onAdd: function (map) {\n                L.Marker.prototype.onAdd.call(this, map);\n                L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n                map.on('zoomend', this.setVisibility, this);\n            },\n\n            onRemove: function (map) {\n                delete this.right.middleMarker;\n                L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n                map.off('zoomend', this.setVisibility, this);\n                L.Marker.prototype.onRemove.call(this, map);\n            },\n\n            onMouseDown: function (e) {\n                var iconPos = L.DomUtil.getPosition(this._icon),\n                    latlng = this.editor.map.layerPointToLatLng(iconPos);\n                e = {\n                    originalEvent: e,\n                    latlng: latlng\n                };\n                if (this.options.opacity === 0) return;\n                L.Editable.makeCancellable(e);\n                this.editor.onMiddleMarkerMouseDown(e);\n                if (e._cancelled) return;\n                this.latlngs.splice(this.index(), 0, e.latlng);\n                this.editor.refresh();\n                var icon = this._icon;\n                var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n                this.editor.onNewVertex(marker);\n                /* Hack to workaround browser not firing touchend when element is no more on DOM */\n                var parent = marker._icon.parentNode;\n                parent.removeChild(marker._icon);\n                marker._icon = icon;\n                parent.appendChild(marker._icon);\n                marker._initIcon();\n                marker._initInteraction();\n                marker.setOpacity(1);\n                /* End hack */\n                // Transfer ongoing dragging to real marker\n                L.Draggable._dragging = false;\n                marker.dragging._draggable._onDown(e.originalEvent);\n                this.delete();\n            },\n\n            delete: function () {\n                this.editor.editLayer.removeLayer(this);\n            },\n\n            index: function () {\n                return this.latlngs.indexOf(this.right.latlng);\n            }\n\n        });\n\n        L.Editable.mergeOptions({\n\n            // 🍂namespace Editable\n            // 🍂option middleMarkerClass: class = VertexMarker\n            // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n            middleMarkerClass: L.Editable.MiddleMarker\n\n        });\n\n        // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n        // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n        // editor basically knows how to handle the edition.\n        L.Editable.BaseEditor = L.Handler.extend({\n\n            initialize: function (map, feature, options) {\n                L.setOptions(this, options);\n                this.map = map;\n                this.feature = feature;\n                this.feature.editor = this;\n                this.editLayer = new L.LayerGroup();\n                this.tools = this.options.editTools || map.editTools;\n            },\n\n            // 🍂method enable(): this\n            // Set up the drawing tools for the feature to be editable.\n            addHooks: function () {\n                if (this.isConnected()) this.onFeatureAdd();\n                else this.feature.once('add', this.onFeatureAdd, this);\n                this.onEnable();\n                this.feature.on(this._getEvents(), this);\n            },\n\n            // 🍂method disable(): this\n            // Remove the drawing tools for the feature.\n            removeHooks: function () {\n                this.feature.off(this._getEvents(), this);\n                if (this.feature.dragging) this.feature.dragging.disable();\n                this.editLayer.clearLayers();\n                this.tools.editLayer.removeLayer(this.editLayer);\n                this.onDisable();\n                if (this._drawing) this.cancelDrawing();\n            },\n\n            // 🍂method drawing(): boolean\n            // Return true if any drawing action is ongoing with this editor.\n            drawing: function () {\n                return !!this._drawing;\n            },\n\n            reset: function () {},\n\n            onFeatureAdd: function () {\n                this.tools.editLayer.addLayer(this.editLayer);\n                if (this.feature.dragging) this.feature.dragging.enable();\n            },\n\n            hasMiddleMarkers: function () {\n                return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n            },\n\n            fireAndForward: function (type, e) {\n                e = e || {};\n                e.layer = this.feature;\n                this.feature.fire(type, e);\n                this.tools.fireAndForward(type, e);\n            },\n\n            onEnable: function () {\n                // 🍂namespace Editable\n                // 🍂event editable:enable: Event\n                // Fired when an existing feature is ready to be edited.\n                this.fireAndForward('editable:enable');\n            },\n\n            onDisable: function () {\n                // 🍂namespace Editable\n                // 🍂event editable:disable: Event\n                // Fired when an existing feature is not ready anymore to be edited.\n                this.fireAndForward('editable:disable');\n            },\n\n            onEditing: function () {\n                // 🍂namespace Editable\n                // 🍂event editable:editing: Event\n                // Fired as soon as any change is made to the feature geometry.\n                this.fireAndForward('editable:editing');\n            },\n\n            onStartDrawing: function () {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:start: Event\n                // Fired when a feature is to be drawn.\n                this.fireAndForward('editable:drawing:start');\n            },\n\n            onEndDrawing: function () {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:end: Event\n                // Fired when a feature is not drawn anymore.\n                this.fireAndForward('editable:drawing:end');\n            },\n\n            onCancelDrawing: function () {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:cancel: Event\n                // Fired when user cancel drawing while a feature is being drawn.\n                this.fireAndForward('editable:drawing:cancel');\n            },\n\n            onCommitDrawing: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:commit: Event\n                // Fired when user finish drawing a feature.\n                this.fireAndForward('editable:drawing:commit', e);\n            },\n\n            onDrawingMouseDown: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:mousedown: Event\n                // Fired when user `mousedown` while drawing.\n                this.fireAndForward('editable:drawing:mousedown', e);\n            },\n\n            onDrawingMouseUp: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:mouseup: Event\n                // Fired when user `mouseup` while drawing.\n                this.fireAndForward('editable:drawing:mouseup', e);\n            },\n\n            startDrawing: function () {\n                if (!this._drawing) this._drawing = L.Editable.FORWARD;\n                this.tools.registerForDrawing(this);\n                this.onStartDrawing();\n            },\n\n            commitDrawing: function (e) {\n                this.onCommitDrawing(e);\n                this.endDrawing();\n            },\n\n            cancelDrawing: function () {\n                // If called during a vertex drag, the vertex will be removed before\n                // the mouseup fires on it. This is a workaround. Maybe better fix is\n                // To have L.Draggable reset it's status on disable (Leaflet side).\n                L.Draggable._dragging = false;\n                this.onCancelDrawing();\n                this.endDrawing();\n            },\n\n            endDrawing: function () {\n                this._drawing = false;\n                this.tools.unregisterForDrawing(this);\n                this.onEndDrawing();\n            },\n\n            onDrawingClick: function (e) {\n                if (!this.drawing()) return;\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:click: CancelableEvent\n                // Fired when user `click` while drawing, before any internal action is being processed.\n                this.fireAndForward('editable:drawing:click', e);\n                if (e._cancelled) return;\n                if (!this.isConnected()) this.connect(e);\n                this.processDrawingClick(e);\n            },\n\n            isConnected: function () {\n                return this.map.hasLayer(this.feature);\n            },\n\n            connect: function () {\n                this.tools.connectCreatedToMap(this.feature);\n                this.tools.editLayer.addLayer(this.editLayer);\n            },\n\n            onMove: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:move: Event\n                // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n                this.fireAndForward('editable:drawing:move', e);\n            },\n\n            onDrawingMouseMove: function (e) {\n                this.onMove(e);\n            },\n\n            _getEvents: function () {\n                return {\n                    dragstart: this.onDragStart,\n                    drag: this.onDrag,\n                    dragend: this.onDragEnd,\n                    remove: this.disable\n                };\n            },\n\n            onDragStart: function (e) {\n                this.onEditing();\n                // 🍂namespace Editable\n                // 🍂event editable:dragstart: Event\n                // Fired before a path feature is dragged.\n                this.fireAndForward('editable:dragstart', e);\n            },\n\n            onDrag: function (e) {\n                this.onMove(e);\n                // 🍂namespace Editable\n                // 🍂event editable:drag: Event\n                // Fired when a path feature is being dragged.\n                this.fireAndForward('editable:drag', e);\n            },\n\n            onDragEnd: function (e) {\n                // 🍂namespace Editable\n                // 🍂event editable:dragend: Event\n                // Fired after a path feature has been dragged.\n                this.fireAndForward('editable:dragend', e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n        // 🍂inherits BaseEditor\n        // Editor for Marker.\n        L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n            onDrawingMouseMove: function (e) {\n                L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n                if (this._drawing) this.feature.setLatLng(e.latlng);\n            },\n\n            processDrawingClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Drawing events\n                // 🍂event editable:drawing:clicked: Event\n                // Fired when user `click` while drawing, after all internal actions.\n                this.fireAndForward('editable:drawing:clicked', e);\n                this.commitDrawing(e);\n            },\n\n            connect: function (e) {\n                // On touch, the latlng has not been updated because there is\n                // no mousemove.\n                if (e) this.feature._latlng = e.latlng;\n                L.Editable.BaseEditor.prototype.connect.call(this, e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n        // 🍂inherits BaseEditor\n        // Base class for all path editors.\n        L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n            CLOSED: false,\n            MIN_VERTEX: 2,\n\n            addHooks: function () {\n                L.Editable.BaseEditor.prototype.addHooks.call(this);\n                if (this.feature) this.initVertexMarkers();\n                return this;\n            },\n\n            initVertexMarkers: function (latlngs) {\n                if (!this.enabled()) return;\n                latlngs = latlngs || this.getLatLngs();\n                if (isFlat(latlngs)) this.addVertexMarkers(latlngs);\n                else for (var i = 0; i < latlngs.length; i++) this.initVertexMarkers(latlngs[i]);\n            },\n\n            getLatLngs: function () {\n                return this.feature.getLatLngs();\n            },\n\n            // 🍂method reset()\n            // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n            reset: function () {\n                this.editLayer.clearLayers();\n                this.initVertexMarkers();\n            },\n\n            addVertexMarker: function (latlng, latlngs) {\n                return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n            },\n\n            onNewVertex: function (vertex) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:new: VertexEvent\n                // Fired when a new vertex is created.\n                this.fireAndForward('editable:vertex:new', {latlng: vertex.latlng, vertex: vertex});\n            },\n\n            addVertexMarkers: function (latlngs) {\n                for (var i = 0; i < latlngs.length; i++) {\n                    this.addVertexMarker(latlngs[i], latlngs);\n                }\n            },\n\n            refreshVertexMarkers: function (latlngs) {\n                latlngs = latlngs || this.getDefaultLatLngs();\n                for (var i = 0; i < latlngs.length; i++) {\n                    latlngs[i].__vertex.update();\n                }\n            },\n\n            addMiddleMarker: function (left, right, latlngs) {\n                return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n            },\n\n            onVertexMarkerClick: function (e) {\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:click: CancelableVertexEvent\n                // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n                this.fireAndForward('editable:vertex:click', e);\n                if (e._cancelled) return;\n                if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n                var index = e.vertex.getIndex(), commit;\n                if (e.originalEvent.ctrlKey) {\n                    this.onVertexMarkerCtrlClick(e);\n                } else if (e.originalEvent.altKey) {\n                    this.onVertexMarkerAltClick(e);\n                } else if (e.originalEvent.shiftKey) {\n                    this.onVertexMarkerShiftClick(e);\n                } else if (e.originalEvent.metaKey) {\n                    this.onVertexMarkerMetaKeyClick(e);\n                } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                    if (index >= this.MIN_VERTEX - 1) commit = true;\n                } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                    commit = true;\n                } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                    commit = true;  // Allow to close on first point also for polygons\n                } else {\n                    this.onVertexRawMarkerClick(e);\n                }\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:clicked: VertexEvent\n                // Fired when a `click` is issued on a vertex, after all internal actions.\n                this.fireAndForward('editable:vertex:clicked', e);\n                if (commit) this.commitDrawing(e);\n            },\n\n            onVertexRawMarkerClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n                // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n                this.fireAndForward('editable:vertex:rawclick', e);\n                if (e._cancelled) return;\n                if (!this.vertexCanBeDeleted(e.vertex)) return;\n                e.vertex.delete();\n            },\n\n            vertexCanBeDeleted: function (vertex) {\n                return vertex.latlngs.length > this.MIN_VERTEX;\n            },\n\n            onVertexDeleted: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:deleted: VertexEvent\n                // Fired after a vertex has been deleted by user.\n                this.fireAndForward('editable:vertex:deleted', e);\n            },\n\n            onVertexMarkerCtrlClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:ctrlclick: VertexEvent\n                // Fired when a `click` with `ctrlKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:ctrlclick', e);\n            },\n\n            onVertexMarkerShiftClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:shiftclick: VertexEvent\n                // Fired when a `click` with `shiftKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:shiftclick', e);\n            },\n\n            onVertexMarkerMetaKeyClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:metakeyclick: VertexEvent\n                // Fired when a `click` with `metaKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:metakeyclick', e);\n            },\n\n            onVertexMarkerAltClick: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:altclick: VertexEvent\n                // Fired when a `click` with `altKey` is issued on a vertex.\n                this.fireAndForward('editable:vertex:altclick', e);\n            },\n\n            onVertexMarkerContextMenu: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:contextmenu: VertexEvent\n                // Fired when a `contextmenu` is issued on a vertex.\n                this.fireAndForward('editable:vertex:contextmenu', e);\n            },\n\n            onVertexMarkerMouseDown: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mousedown: VertexEvent\n                // Fired when user `mousedown` a vertex.\n                this.fireAndForward('editable:vertex:mousedown', e);\n            },\n\n            onVertexMarkerMouseOver: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mouseover: VertexEvent\n                // Fired when a user's mouse enters the vertex\n                this.fireAndForward('editable:vertex:mouseover', e);\n            },\n\n            onVertexMarkerMouseOut: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:mouseout: VertexEvent\n                // Fired when a user's mouse leaves the vertex\n                this.fireAndForward('editable:vertex:mouseout', e);\n            },\n\n            onMiddleMarkerMouseDown: function (e) {\n                // 🍂namespace Editable\n                // 🍂section MiddleMarker events\n                // 🍂event editable:middlemarker:mousedown: VertexEvent\n                // Fired when user `mousedown` a middle marker.\n                this.fireAndForward('editable:middlemarker:mousedown', e);\n            },\n\n            onVertexMarkerDrag: function (e) {\n                this.onMove(e);\n                if (this.feature._bounds) this.extendBounds(e);\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:drag: VertexEvent\n                // Fired when a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:drag', e);\n            },\n\n            onVertexMarkerDragStart: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:dragstart: VertexEvent\n                // Fired before a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:dragstart', e);\n            },\n\n            onVertexMarkerDragEnd: function (e) {\n                // 🍂namespace Editable\n                // 🍂section Vertex events\n                // 🍂event editable:vertex:dragend: VertexEvent\n                // Fired after a vertex is dragged by user.\n                this.fireAndForward('editable:vertex:dragend', e);\n            },\n\n            setDrawnLatLngs: function (latlngs) {\n                this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n            },\n\n            startDrawing: function () {\n                if (!this._drawnLatLngs) this.setDrawnLatLngs();\n                L.Editable.BaseEditor.prototype.startDrawing.call(this);\n            },\n\n            startDrawingForward: function () {\n                this.startDrawing();\n            },\n\n            endDrawing: function () {\n                this.tools.detachForwardLineGuide();\n                this.tools.detachBackwardLineGuide();\n                if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n                L.Editable.BaseEditor.prototype.endDrawing.call(this);\n                delete this._drawnLatLngs;\n            },\n\n            addLatLng: function (latlng) {\n                if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);\n                else this._drawnLatLngs.unshift(latlng);\n                this.feature._bounds.extend(latlng);\n                var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n                this.onNewVertex(vertex);\n                this.refresh();\n            },\n\n            newPointForward: function (latlng) {\n                this.addLatLng(latlng);\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlng);\n            },\n\n            newPointBackward: function (latlng) {\n                this.addLatLng(latlng);\n                this.tools.anchorBackwardLineGuide(latlng);\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method push()\n            // Programmatically add a point while drawing.\n            push: function (latlng) {\n                if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n                if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);\n                else this.newPointBackward(latlng);\n            },\n\n            removeLatLng: function (latlng) {\n                latlng.__vertex.delete();\n                this.refresh();\n            },\n\n            // 🍂method pop(): L.LatLng or null\n            // Programmatically remove last point (if any) while drawing.\n            pop: function () {\n                if (this._drawnLatLngs.length <= 1) return;\n                var latlng;\n                if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];\n                else latlng = this._drawnLatLngs[0];\n                this.removeLatLng(latlng);\n                if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);\n                else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n                return latlng;\n            },\n\n            processDrawingClick: function (e) {\n                if (e.vertex && e.vertex.editor === this) return;\n                if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);\n                else this.newPointBackward(e.latlng);\n                this.fireAndForward('editable:drawing:clicked', e);\n            },\n\n            onDrawingMouseMove: function (e) {\n                L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n                if (this._drawing) {\n                    this.tools.moveForwardLineGuide(e.latlng);\n                    this.tools.moveBackwardLineGuide(e.latlng);\n                }\n            },\n\n            refresh: function () {\n                this.feature.redraw();\n                this.onEditing();\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method newShape(latlng?: L.LatLng)\n            // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n            // if optional `latlng` is given, start a path at this point.\n            newShape: function (latlng) {\n                var shape = this.addNewEmptyShape();\n                if (!shape) return;\n                this.setDrawnLatLngs(shape[0] || shape);  // Polygon or polyline\n                this.startDrawingForward();\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:new: ShapeEvent\n                // Fired when a new shape is created in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:new', {shape: shape});\n                if (latlng) this.newPointForward(latlng);\n            },\n\n            deleteShape: function (shape, latlngs) {\n                var e = {shape: shape};\n                L.Editable.makeCancellable(e);\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:delete: CancelableShapeEvent\n                // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:delete', e);\n                if (e._cancelled) return;\n                shape = this._deleteShape(shape, latlngs);\n                if (this.ensureNotFlat) this.ensureNotFlat();  // Polygon.\n                this.feature.setLatLngs(this.getLatLngs());  // Force bounds reset.\n                this.refresh();\n                this.reset();\n                // 🍂namespace Editable\n                // 🍂section Shape events\n                // 🍂event editable:shape:deleted: ShapeEvent\n                // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n                this.fireAndForward('editable:shape:deleted', {shape: shape});\n                return shape;\n            },\n\n            _deleteShape: function (shape, latlngs) {\n                latlngs = latlngs || this.getLatLngs();\n                if (!latlngs.length) return;\n                var self = this,\n                    inplaceDelete = function (latlngs, shape) {\n                        // Called when deleting a flat latlngs\n                        shape = latlngs.splice(0, Number.MAX_VALUE);\n                        return shape;\n                    },\n                    spliceDelete = function (latlngs, shape) {\n                        // Called when removing a latlngs inside an array\n                        latlngs.splice(latlngs.indexOf(shape), 1);\n                        if (!latlngs.length) self._deleteShape(latlngs);\n                        return shape;\n                    };\n                if (latlngs === shape) return inplaceDelete(latlngs, shape);\n                for (var i = 0; i < latlngs.length; i++) {\n                    if (latlngs[i] === shape) return spliceDelete(latlngs, shape);\n                    else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n                }\n            },\n\n            // 🍂namespace PathEditor\n            // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n            // Remove a path shape at the given `latlng`.\n            deleteShapeAt: function (latlng) {\n                var shape = this.feature.shapeAt(latlng);\n                if (shape) return this.deleteShape(shape);\n            },\n\n            // 🍂method appendShape(shape: Array)\n            // Append a new shape to the Polygon or Polyline.\n            appendShape: function (shape) {\n                this.insertShape(shape);\n            },\n\n            // 🍂method prependShape(shape: Array)\n            // Prepend a new shape to the Polygon or Polyline.\n            prependShape: function (shape) {\n                this.insertShape(shape, 0);\n            },\n\n            // 🍂method insertShape(shape: Array, index: int)\n            // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n            insertShape: function (shape, index) {\n                this.ensureMulti();\n                shape = this.formatShape(shape);\n                if (typeof index === 'undefined') index = this.feature._latlngs.length;\n                this.feature._latlngs.splice(index, 0, shape);\n                this.feature.redraw();\n                if (this._enabled) this.reset();\n            },\n\n            extendBounds: function (e) {\n                this.feature._bounds.extend(e.vertex.latlng);\n            },\n\n            onDragStart: function (e) {\n                this.editLayer.clearLayers();\n                L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n            },\n\n            onDragEnd: function (e) {\n                this.initVertexMarkers();\n                L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n        // 🍂inherits PathEditor\n        L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n            startDrawingBackward: function () {\n                this._drawing = L.Editable.BACKWARD;\n                this.startDrawing();\n            },\n\n            // 🍂method continueBackward(latlngs?: Array)\n            // Set up drawing tools to continue the line backward.\n            continueBackward: function (latlngs) {\n                if (this.drawing()) return;\n                latlngs = latlngs || this.getDefaultLatLngs();\n                this.setDrawnLatLngs(latlngs);\n                if (latlngs.length > 0) {\n                    this.tools.attachBackwardLineGuide();\n                    this.tools.anchorBackwardLineGuide(latlngs[0]);\n                }\n                this.startDrawingBackward();\n            },\n\n            // 🍂method continueForward(latlngs?: Array)\n            // Set up drawing tools to continue the line forward.\n            continueForward: function (latlngs) {\n                if (this.drawing()) return;\n                latlngs = latlngs || this.getDefaultLatLngs();\n                this.setDrawnLatLngs(latlngs);\n                if (latlngs.length > 0) {\n                    this.tools.attachForwardLineGuide();\n                    this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n                }\n                this.startDrawingForward();\n            },\n\n            getDefaultLatLngs: function (latlngs) {\n                latlngs = latlngs || this.feature._latlngs;\n                if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;\n                else return this.getDefaultLatLngs(latlngs[0]);\n            },\n\n            ensureMulti: function () {\n                if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                    this.feature._latlngs = [this.feature._latlngs];\n                }\n            },\n\n            addNewEmptyShape: function () {\n                if (this.feature._latlngs.length) {\n                    var shape = [];\n                    this.appendShape(shape);\n                    return shape;\n                } else {\n                    return this.feature._latlngs;\n                }\n            },\n\n            formatShape: function (shape) {\n                if (isFlat(shape)) return shape;\n                else if (shape[0]) return this.formatShape(shape[0]);\n            },\n\n            // 🍂method splitShape(latlngs?: Array, index: int)\n            // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n            splitShape: function (shape, index) {\n                if (!index || index >= shape.length - 1) return;\n                this.ensureMulti();\n                var shapeIndex = this.feature._latlngs.indexOf(shape);\n                if (shapeIndex === -1) return;\n                var first = shape.slice(0, index + 1),\n                    second = shape.slice(index);\n                // We deal with reference, we don't want twice the same latlng around.\n                second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n                this.feature._latlngs.splice(shapeIndex, 1, first, second);\n                this.refresh();\n                this.reset();\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n        // 🍂inherits PathEditor\n        L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n            CLOSED: true,\n            MIN_VERTEX: 3,\n\n            newPointForward: function (latlng) {\n                L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n                if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n                if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n            },\n\n            addNewEmptyHole: function (latlng) {\n                this.ensureNotFlat();\n                var latlngs = this.feature.shapeAt(latlng);\n                if (!latlngs) return;\n                var holes = [];\n                latlngs.push(holes);\n                return holes;\n            },\n\n            // 🍂method newHole(latlng?: L.LatLng, index: int)\n            // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n            newHole: function (latlng) {\n                var holes = this.addNewEmptyHole(latlng);\n                if (!holes) return;\n                this.setDrawnLatLngs(holes);\n                this.startDrawingForward();\n                if (latlng) this.newPointForward(latlng);\n            },\n\n            addNewEmptyShape: function () {\n                if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                    var shape = [];\n                    this.appendShape(shape);\n                    return shape;\n                } else {\n                    return this.feature._latlngs;\n                }\n            },\n\n            ensureMulti: function () {\n                if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                    this.feature._latlngs = [this.feature._latlngs];\n                }\n            },\n\n            ensureNotFlat: function () {\n                if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n            },\n\n            vertexCanBeDeleted: function (vertex) {\n                var parent = this.feature.parentShape(vertex.latlngs),\n                    idx = L.Util.indexOf(parent, vertex.latlngs);\n                if (idx > 0) return true;  // Holes can be totally deleted without removing the layer itself.\n                return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n            },\n\n            getDefaultLatLngs: function () {\n                if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n                return this.feature._latlngs[0];\n            },\n\n            formatShape: function (shape) {\n                // [[1, 2], [3, 4]] => must be nested\n                // [] => must be nested\n                // [[]] => is already nested\n                if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];\n                else return shape;\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n        // 🍂inherits PathEditor\n        L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n            CLOSED: true,\n            MIN_VERTEX: 4,\n\n            options: {\n                skipMiddleMarkers: true\n            },\n\n            extendBounds: function (e) {\n                var index = e.vertex.getIndex(),\n                    next = e.vertex.getNext(),\n                    previous = e.vertex.getPrevious(),\n                    oppositeIndex = (index + 2) % 4,\n                    opposite = e.vertex.latlngs[oppositeIndex],\n                    bounds = new L.LatLngBounds(e.latlng, opposite);\n                // Update latlngs by hand to preserve order.\n                previous.latlng.update([e.latlng.lat, opposite.lng]);\n                next.latlng.update([opposite.lat, e.latlng.lng]);\n                this.updateBounds(bounds);\n                this.refreshVertexMarkers();\n            },\n\n            onDrawingMouseDown: function (e) {\n                L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n                this.connect();\n                var latlngs = this.getDefaultLatLngs();\n                // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n                // which is the case here as all latlngs are [0, 0]\n                if (latlngs.length === 3) latlngs.push(e.latlng);\n                var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n                this.updateBounds(bounds);\n                this.updateLatLngs(bounds);\n                this.refresh();\n                this.reset();\n                // Stop dragging map.\n                // L.Draggable has two workflows:\n                // - mousedown => mousemove => mouseup\n                // - touchstart => touchmove => touchend\n                // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n                // can deal with mousedown, but then when in a touch device, we are dealing with\n                // simulated events (actually simulated by L.Map.Tap), which are no more taken\n                // into account by L.Draggable.\n                // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n                e.originalEvent._simulated = false;\n                this.map.dragging._draggable._onUp(e.originalEvent);\n                // Now transfer ongoing drag action to the bottom right corner.\n                // Should we refine which corner will handle the drag according to\n                // drag direction?\n                latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n            },\n\n            onDrawingMouseUp: function (e) {\n                this.commitDrawing(e);\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n            },\n\n            onDrawingMouseMove: function (e) {\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n            },\n\n\n            getDefaultLatLngs: function (latlngs) {\n                return latlngs || this.feature._latlngs[0];\n            },\n\n            updateBounds: function (bounds) {\n                this.feature._bounds = bounds;\n            },\n\n            updateLatLngs: function (bounds) {\n                var latlngs = this.getDefaultLatLngs(),\n                    newLatlngs = this.feature._boundsToLatLngs(bounds);\n                // Keep references.\n                for (var i = 0; i < latlngs.length; i++) {\n                    latlngs[i].update(newLatlngs[i]);\n                }\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n        // 🍂inherits PathEditor\n        L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n            MIN_VERTEX: 2,\n\n            options: {\n                skipMiddleMarkers: true\n            },\n\n            initialize: function (map, feature, options) {\n                L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n                this._resizeLatLng = this.computeResizeLatLng();\n            },\n\n            computeResizeLatLng: function () {\n                // While circle is not added to the map, _radius is not set.\n                var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                    point = this.map.project(this.feature._latlng);\n                return this.map.unproject([point.x + delta, point.y - delta]);\n            },\n\n            updateResizeLatLng: function () {\n                this._resizeLatLng.update(this.computeResizeLatLng());\n                this._resizeLatLng.__vertex.update();\n            },\n\n            getLatLngs: function () {\n                return [this.feature._latlng, this._resizeLatLng];\n            },\n\n            getDefaultLatLngs: function () {\n                return this.getLatLngs();\n            },\n\n            onVertexMarkerDrag: function (e) {\n                if (e.vertex.getIndex() === 1) this.resize(e);\n                else this.updateResizeLatLng(e);\n                L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n            },\n\n            resize: function (e) {\n                var radius = this.feature._latlng.distanceTo(e.latlng);\n                this.feature.setRadius(radius);\n            },\n\n            onDrawingMouseDown: function (e) {\n                L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n                this._resizeLatLng.update(e.latlng);\n                this.feature._latlng.update(e.latlng);\n                this.connect();\n                // Stop dragging map.\n                e.originalEvent._simulated = false;\n                this.map.dragging._draggable._onUp(e.originalEvent);\n                // Now transfer ongoing drag action to the radius handler.\n                this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n            },\n\n            onDrawingMouseUp: function (e) {\n                this.commitDrawing(e);\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n            },\n\n            onDrawingMouseMove: function (e) {\n                e.originalEvent._simulated = false;\n                L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n            },\n\n            onDrag: function (e) {\n                L.Editable.PathEditor.prototype.onDrag.call(this, e);\n                this.feature.dragging.updateLatLng(this._resizeLatLng);\n            }\n\n        });\n\n        // 🍂namespace Editable; 🍂class EditableMixin\n        // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n        // and `L.Marker`. It adds some methods to them.\n        // *When editing is enabled, the editor is accessible on the instance with the\n        // `editor` property.*\n        var EditableMixin = {\n\n            createEditor: function (map) {\n                map = map || this._map;\n                var tools = (this.options.editOptions || {}).editTools || map.editTools;\n                if (!tools) throw Error('Unable to detect Editable instance.');\n                var Klass = this.options.editorClass || this.getEditorClass(tools);\n                return new Klass(map, this, this.options.editOptions);\n            },\n\n            // 🍂method enableEdit(map?: L.Map): this.editor\n            // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n            enableEdit: function (map) {\n                if (!this.editor) this.createEditor(map);\n                this.editor.enable();\n                return this.editor;\n            },\n\n            // 🍂method editEnabled(): boolean\n            // Return true if current instance has an editor attached, and this editor is enabled.\n            editEnabled: function () {\n                return this.editor && this.editor.enabled();\n            },\n\n            // 🍂method disableEdit()\n            // Disable editing, also remove the editor property reference.\n            disableEdit: function () {\n                if (this.editor) {\n                    this.editor.disable();\n                    delete this.editor;\n                }\n            },\n\n            // 🍂method toggleEdit()\n            // Enable or disable editing, according to current status.\n            toggleEdit: function () {\n                if (this.editEnabled()) this.disableEdit();\n                else this.enableEdit();\n            },\n\n            _onEditableAdd: function () {\n                if (this.editor) this.enableEdit();\n            }\n\n        };\n\n        var PolylineMixin = {\n\n            getEditorClass: function (tools) {\n                return (tools && tools.options.polylineEditorClass) ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n            },\n\n            shapeAt: function (latlng, latlngs) {\n                // We can have those cases:\n                // - latlngs are just a flat array of latlngs, use this\n                // - latlngs is an array of arrays of latlngs, loop over\n                var shape = null;\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs.length) return shape;\n                else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n                else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n                return shape;\n            },\n\n            isInLatLngs: function (l, latlngs) {\n                if (!latlngs) return false;\n                var i, k, len, part = [], p,\n                    w = this._clickTolerance();\n                this._projectLatlngs(latlngs, part, this._pxBounds);\n                part = part[0];\n                p = this._map.latLngToLayerPoint(l);\n\n                if (!this._pxBounds.contains(p)) { return false; }\n                for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                    if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n        };\n\n        var PolygonMixin = {\n\n            getEditorClass: function (tools) {\n                return (tools && tools.options.polygonEditorClass) ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n            },\n\n            shapeAt: function (latlng, latlngs) {\n                // We can have those cases:\n                // - latlngs are just a flat array of latlngs, use this\n                // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n                // - latlngs is an array of arrays of arrays, this is a multi, loop over\n                var shape = null;\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs.length) return shape;\n                else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n                else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;\n                else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n                return shape;\n            },\n\n            isInLatLngs: function (l, latlngs) {\n                var inside = false, l1, l2, j, k, len2;\n\n                for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                    l1 = latlngs[j];\n                    l2 = latlngs[k];\n\n                    if (((l1.lat > l.lat) !== (l2.lat > l.lat)) &&\n                        (l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng)) {\n                        inside = !inside;\n                    }\n                }\n\n                return inside;\n            },\n\n            parentShape: function (shape, latlngs) {\n                latlngs = latlngs || this._latlngs;\n                if (!latlngs) return;\n                var idx = L.Util.indexOf(latlngs, shape);\n                if (idx !== -1) return latlngs;\n                for (var i = 0; i < latlngs.length; i++) {\n                    idx = L.Util.indexOf(latlngs[i], shape);\n                    if (idx !== -1) return latlngs[i];\n                }\n            }\n\n        };\n\n\n        var MarkerMixin = {\n\n            getEditorClass: function (tools) {\n                return (tools && tools.options.markerEditorClass) ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n            }\n\n        };\n\n        var RectangleMixin = {\n\n            getEditorClass: function (tools) {\n                return (tools && tools.options.rectangleEditorClass) ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n            }\n\n        };\n\n        var CircleMixin = {\n\n            getEditorClass: function (tools) {\n                return (tools && tools.options.circleEditorClass) ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n            }\n\n        };\n\n        var keepEditable = function () {\n            // Make sure you can remove/readd an editable layer.\n            this.on('add', this._onEditableAdd);\n        };\n\n        var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat;  // <=> 1.1 compat.\n\n\n        if (L.Polyline) {\n            L.Polyline.include(EditableMixin);\n            L.Polyline.include(PolylineMixin);\n            L.Polyline.addInitHook(keepEditable);\n        }\n        if (L.Polygon) {\n            L.Polygon.include(EditableMixin);\n            L.Polygon.include(PolygonMixin);\n        }\n        if (L.Marker) {\n            L.Marker.include(EditableMixin);\n            L.Marker.include(MarkerMixin);\n            L.Marker.addInitHook(keepEditable);\n        }\n        if (L.Rectangle) {\n            L.Rectangle.include(EditableMixin);\n            L.Rectangle.include(RectangleMixin);\n        }\n        if (L.Circle) {\n            L.Circle.include(EditableMixin);\n            L.Circle.include(CircleMixin);\n        }\n\n        L.LatLng.prototype.update = function (latlng) {\n            latlng = L.latLng(latlng);\n            this.lat = latlng.lat;\n            this.lng = latlng.lng;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./Vue2LeafletEditablePlugin.js"],"sourceRoot":""}