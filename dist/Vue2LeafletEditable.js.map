{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///Vue2LeafletEditable.js","webpack:///webpack/bootstrap ab1e40ceaf21c8c66859","webpack:///./Vue2LeafletEditable.js","webpack:///external \"leaflet\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Symbol","iterator","window","undefined","apply","L","Editable","Evented","extend","statics","FORWARD","BACKWARD","options","zIndex","polygonClass","Polygon","polylineClass","Polyline","markerClass","Marker","rectangleClass","Rectangle","circleClass","Circle","drawingCSSClass","drawingCursor","editLayer","featuresLayer","polylineEditorClass","polygonEditorClass","markerEditorClass","rectangleEditorClass","circleEditorClass","lineGuideOptions","skipMiddleMarkers","initialize","map","setOptions","_lastZIndex","createEditLayer","createFeaturesLayer","forwardLineGuide","createLineGuide","backwardLineGuide","fireAndForward","type","e","editTools","fire","dashArray","weight","interactive","polyline","createVertexIcon","Browser","mobile","touch","TouchVertexIcon","VertexIcon","LayerGroup","addTo","moveForwardLineGuide","latlng","_latlngs","length","_bounds","redraw","moveBackwardLineGuide","anchorForwardLineGuide","anchorBackwardLineGuide","attachForwardLineGuide","addLayer","attachBackwardLineGuide","detachForwardLineGuide","setLatLngs","removeLayer","detachBackwardLineGuide","blockEvents","_oldTargets","_targets","unblockEvents","registerForDrawing","editor","_drawingEditor","unregisterForDrawing","reset","on","onDrawingMouseMove","onMousedown","onMouseup","DomUtil","addClass","_container","defaultMapCursor","style","cursor","removeClass","off","_drawing","cancelDrawing","originalEvent","which","_mouseDown","onDrawingMouseDown","mouseDown","onDrawingMouseUp","origin","point","clientX","clientY","distance","distanceTo","Math","abs","devicePixelRatio","onDrawingClick","drawing","stopDrawing","commitDrawing","connectCreatedToMap","layer","startPolyline","line","createPolyline","enableEdit","newShape","startPolygon","polygon","createPolygon","startMarker","getCenter","clone","marker","createMarker","startDrawing","startRectangle","corner","latLng","bounds","LatLngBounds","rectangle","createRectangle","startCircle","circle","createCircle","startHole","newHole","createLayer","klass","latlngs","Util","editOptions","makeCancellable","cancel","_cancelled","Map","mergeOptions","editToolsClass","editable","addInitHook","whenReady","DivIcon","iconSize","Point","VertexMarker","draggable","className","icon","tools","__vertex","setZIndexOffset","onAdd","onDrag","onDragStart","onDragEnd","onClick","onContextMenu","onMouseDown","onMouseOver","onMouseOut","addMiddleMarkers","onRemove","middleMarker","delete","vertex","onVertexMarkerDrag","iconPos","getPosition","_icon","_map","layerPointToLatLng","update","_latlng","refresh","updateLatLng","next","getNext","onVertexMarkerDragStart","onVertexMarkerDragEnd","onVertexMarkerClick","DomEvent","stop","onVertexMarkerContextMenu","onVertexMarkerMouseDown","onVertexMarkerMouseOver","onVertexMarkerMouseOut","splice","getIndex","onVertexDeleted","deleteShape","resetMiddleMarker","indexOf","getLastIndex","getPrevious","index","previousIndex","CLOSED","previous","nextIndex","addMiddleMarker","hasMiddleMarkers","split","splitShape","continue","continueBackward","continueForward","vertexMarkerClass","MiddleMarker","opacity","left","right","computeLatLng","_opacity","setVisibility","leftPoint","latLngToContainerPoint","rightPoint","size","x","hide","show","setOpacity","setLatLng","y","containerPointToLatLng","onMiddleMarkerMouseDown","addVertexMarker","onNewVertex","parent","parentNode","removeChild","appendChild","_initIcon","_initInteraction","Draggable","_dragging","dragging","_draggable","_onDown","middleMarkerClass","BaseEditor","Handler","feature","addHooks","isConnected","onFeatureAdd","once","onEnable","_getEvents","removeHooks","disable","clearLayers","onDisable","enable","onEditing","onStartDrawing","onEndDrawing","onCancelDrawing","onCommitDrawing","endDrawing","connect","processDrawingClick","hasLayer","onMove","dragstart","drag","dragend","remove","MarkerEditor","PathEditor","MIN_VERTEX","initVertexMarkers","enabled","getLatLngs","isFlat","addVertexMarkers","refreshVertexMarkers","getDefaultLatLngs","commit","ctrlKey","onVertexMarkerCtrlClick","altKey","onVertexMarkerAltClick","shiftKey","onVertexMarkerShiftClick","metaKey","onVertexMarkerMetaKeyClick","_drawnLatLngs","onVertexRawMarkerClick","vertexCanBeDeleted","extendBounds","setDrawnLatLngs","startDrawingForward","addLatLng","push","unshift","newPointForward","newPointBackward","console","error","removeLatLng","pop","shape","addNewEmptyShape","_deleteShape","ensureNotFlat","self","spliceDelete","Number","MAX_VALUE","deleteShapeAt","shapeAt","appendShape","insertShape","prependShape","ensureMulti","formatShape","_enabled","PolylineEditor","startDrawingBackward","LatLng","shapeIndex","first","slice","second","lat","lng","alt","PolygonEditor","addNewEmptyHole","holes","parentShape","RectangleEditor","oppositeIndex","opposite","updateBounds","updateLatLngs","_simulated","_onUp","newLatlngs","_boundsToLatLngs","CircleEditor","_resizeLatLng","computeResizeLatLng","delta","_radius","_mRadius","cos","PI","project","unproject","updateResizeLatLng","resize","radius","setRadius","EditableMixin","createEditor","Error","editorClass","getEditorClass","editEnabled","disableEdit","toggleEdit","_onEditableAdd","PolylineMixin","isInLatLngs","k","len","part","w","_clickTolerance","_projectLatlngs","_pxBounds","latLngToLayerPoint","contains","LineUtil","pointToSegmentDistance","PolygonMixin","l1","l2","j","len2","inside","idx","MarkerMixin","RectangleMixin","CircleMixin","keepEditable","_flat","include"],"mappings":"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","file":"Vue2LeafletEditable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditable\"] = factory(require(\"leaflet\"));\n\telse\n\t\troot[\"Vue2LeafletEditable\"] = factory(root[\"leaflet\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue2LeafletEditable\"] = factory(require(\"leaflet\"));\n\telse\n\t\troot[\"Vue2LeafletEditable\"] = factory(root[\"leaflet\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (factory, window) {\n    /*globals define, module, require*/\n\n    // define an AMD module that relies on 'leaflet'\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n        // define a Common JS module that relies on 'leaflet'\n    } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {\n        module.exports = factory(require('leaflet'));\n    }\n\n    // attach your plugin to the global 'L' variable\n    if (typeof window !== 'undefined' && window.L) {\n        factory(window.L);\n    }\n})(function (L) {\n    // 🍂miniclass CancelableEvent (Event objects)\n    // 🍂method cancel()\n    // Cancel any subsequent action.\n\n    // 🍂miniclass VertexEvent (Event objects)\n    // 🍂property vertex: VertexMarker\n    // The vertex that fires the event.\n\n    // 🍂miniclass ShapeEvent (Event objects)\n    // 🍂property shape: Array\n    // The shape (LatLngs array) subject of the action.\n\n    // 🍂miniclass CancelableVertexEvent (Event objects)\n    // 🍂inherits VertexEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass CancelableShapeEvent (Event objects)\n    // 🍂inherits ShapeEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass LayerEvent (Event objects)\n    // 🍂property layer: object\n    // The Layer (Marker, Polyline…) subject of the action.\n\n    // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n    // Main edition handler. By default, it is attached to the map\n    // as `map.editTools` property.\n    // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n    // the behaviour: using options, listening to events, or extending.\n    L.Editable = L.Evented.extend({\n\n        statics: {\n            FORWARD: 1,\n            BACKWARD: -1\n        },\n\n        options: {\n\n            // You can pass them when creating a map using the `editOptions` key.\n            // 🍂option zIndex: int = 1000\n            // The default zIndex of the editing tools.\n            zIndex: 1000,\n\n            // 🍂option polygonClass: class = L.Polygon\n            // Class to be used when creating a new Polygon.\n            polygonClass: L.Polygon,\n\n            // 🍂option polylineClass: class = L.Polyline\n            // Class to be used when creating a new Polyline.\n            polylineClass: L.Polyline,\n\n            // 🍂option markerClass: class = L.Marker\n            // Class to be used when creating a new Marker.\n            markerClass: L.Marker,\n\n            // 🍂option rectangleClass: class = L.Rectangle\n            // Class to be used when creating a new Rectangle.\n            rectangleClass: L.Rectangle,\n\n            // 🍂option circleClass: class = L.Circle\n            // Class to be used when creating a new Circle.\n            circleClass: L.Circle,\n\n            // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n            // CSS class to be added to the map container while drawing.\n            drawingCSSClass: 'leaflet-editable-drawing',\n\n            // 🍂option drawingCursor: const = 'crosshair'\n            // Cursor mode set to the map while drawing.\n            drawingCursor: 'crosshair',\n\n            // 🍂option editLayer: Layer = new L.LayerGroup()\n            // Layer used to store edit tools (vertex, line guide…).\n            editLayer: undefined,\n\n            // 🍂option featuresLayer: Layer = new L.LayerGroup()\n            // Default layer used to store drawn features (Marker, Polyline…).\n            featuresLayer: undefined,\n\n            // 🍂option polylineEditorClass: class = PolylineEditor\n            // Class to be used as Polyline editor.\n            polylineEditorClass: undefined,\n\n            // 🍂option polygonEditorClass: class = PolygonEditor\n            // Class to be used as Polygon editor.\n            polygonEditorClass: undefined,\n\n            // 🍂option markerEditorClass: class = MarkerEditor\n            // Class to be used as Marker editor.\n            markerEditorClass: undefined,\n\n            // 🍂option rectangleEditorClass: class = RectangleEditor\n            // Class to be used as Rectangle editor.\n            rectangleEditorClass: undefined,\n\n            // 🍂option circleEditorClass: class = CircleEditor\n            // Class to be used as Circle editor.\n            circleEditorClass: undefined,\n\n            // 🍂option lineGuideOptions: hash = {}\n            // Options to be passed to the line guides.\n            lineGuideOptions: {},\n\n            // 🍂option skipMiddleMarkers: boolean = false\n            // Set this to true if you don't want middle markers.\n            skipMiddleMarkers: false\n\n        },\n\n        initialize: function initialize(map, options) {\n            L.setOptions(this, options);\n            this._lastZIndex = this.options.zIndex;\n            this.map = map;\n            this.editLayer = this.createEditLayer();\n            this.featuresLayer = this.createFeaturesLayer();\n            this.forwardLineGuide = this.createLineGuide();\n            this.backwardLineGuide = this.createLineGuide();\n        },\n\n        fireAndForward: function fireAndForward(type, e) {\n            e = e || {};\n            e.editTools = this;\n            this.fire(type, e);\n            this.map.fire(type, e);\n        },\n\n        createLineGuide: function createLineGuide() {\n            var options = L.extend({ dashArray: '5,10', weight: 1, interactive: false }, this.options.lineGuideOptions);\n            return L.polyline([], options);\n        },\n\n        createVertexIcon: function createVertexIcon(options) {\n            return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n        },\n\n        createEditLayer: function createEditLayer() {\n            return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        createFeaturesLayer: function createFeaturesLayer() {\n            return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        moveForwardLineGuide: function moveForwardLineGuide(latlng) {\n            if (this.forwardLineGuide._latlngs.length) {\n                this.forwardLineGuide._latlngs[1] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            }\n        },\n\n        moveBackwardLineGuide: function moveBackwardLineGuide(latlng) {\n            if (this.backwardLineGuide._latlngs.length) {\n                this.backwardLineGuide._latlngs[1] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            }\n        },\n\n        anchorForwardLineGuide: function anchorForwardLineGuide(latlng) {\n            this.forwardLineGuide._latlngs[0] = latlng;\n            this.forwardLineGuide._bounds.extend(latlng);\n            this.forwardLineGuide.redraw();\n        },\n\n        anchorBackwardLineGuide: function anchorBackwardLineGuide(latlng) {\n            this.backwardLineGuide._latlngs[0] = latlng;\n            this.backwardLineGuide._bounds.extend(latlng);\n            this.backwardLineGuide.redraw();\n        },\n\n        attachForwardLineGuide: function attachForwardLineGuide() {\n            this.editLayer.addLayer(this.forwardLineGuide);\n        },\n\n        attachBackwardLineGuide: function attachBackwardLineGuide() {\n            this.editLayer.addLayer(this.backwardLineGuide);\n        },\n\n        detachForwardLineGuide: function detachForwardLineGuide() {\n            this.forwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.forwardLineGuide);\n        },\n\n        detachBackwardLineGuide: function detachBackwardLineGuide() {\n            this.backwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.backwardLineGuide);\n        },\n\n        blockEvents: function blockEvents() {\n            // Hack: force map not to listen to other layers events while drawing.\n            if (!this._oldTargets) {\n                this._oldTargets = this.map._targets;\n                this.map._targets = {};\n            }\n        },\n\n        unblockEvents: function unblockEvents() {\n            if (this._oldTargets) {\n                // Reset, but keep targets created while drawing.\n                this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                delete this._oldTargets;\n            }\n        },\n\n        registerForDrawing: function registerForDrawing(editor) {\n            if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n            this.blockEvents();\n            editor.reset(); // Make sure editor tools still receive events.\n            this._drawingEditor = editor;\n            this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.on('mousedown', this.onMousedown, this);\n            this.map.on('mouseup', this.onMouseup, this);\n            L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n            this.defaultMapCursor = this.map._container.style.cursor;\n            this.map._container.style.cursor = this.options.drawingCursor;\n        },\n\n        unregisterForDrawing: function unregisterForDrawing(editor) {\n            this.unblockEvents();\n            L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n            this.map._container.style.cursor = this.defaultMapCursor;\n            editor = editor || this._drawingEditor;\n            if (!editor) return;\n            this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.off('mousedown', this.onMousedown, this);\n            this.map.off('mouseup', this.onMouseup, this);\n            if (editor !== this._drawingEditor) return;\n            delete this._drawingEditor;\n            if (editor._drawing) editor.cancelDrawing();\n        },\n\n        onMousedown: function onMousedown(e) {\n            if (e.originalEvent.which != 1) return;\n            this._mouseDown = e;\n            this._drawingEditor.onDrawingMouseDown(e);\n        },\n\n        onMouseup: function onMouseup(e) {\n            if (this._mouseDown) {\n                var editor = this._drawingEditor,\n                    mouseDown = this._mouseDown;\n                this._mouseDown = null;\n                editor.onDrawingMouseUp(e);\n                if (this._drawingEditor !== editor) return; // onDrawingMouseUp may call unregisterFromDrawing.\n                var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n            }\n        },\n\n        // 🍂section Public methods\n        // You will generally access them by the `map.editTools`\n        // instance:\n        //\n        // `map.editTools.startPolyline();`\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing.\n        drawing: function drawing() {\n            return this._drawingEditor && this._drawingEditor.drawing();\n        },\n\n        // 🍂method stopDrawing()\n        // When you need to stop any ongoing drawing, without needing to know which editor is active.\n        stopDrawing: function stopDrawing() {\n            this.unregisterForDrawing();\n        },\n\n        // 🍂method commitDrawing()\n        // When you need to commit any ongoing drawing, without needing to know which editor is active.\n        commitDrawing: function commitDrawing(e) {\n            if (!this._drawingEditor) return;\n            this._drawingEditor.commitDrawing(e);\n        },\n\n        connectCreatedToMap: function connectCreatedToMap(layer) {\n            return this.featuresLayer.addLayer(layer);\n        },\n\n        // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n        // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polyline class constructor.\n        startPolyline: function startPolyline(latlng, options) {\n            var line = this.createPolyline([], options);\n            line.enableEdit(this.map).newShape(latlng);\n            return line;\n        },\n\n        // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n        // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polygon class constructor.\n        startPolygon: function startPolygon(latlng, options) {\n            var polygon = this.createPolygon([], options);\n            polygon.enableEdit(this.map).newShape(latlng);\n            return polygon;\n        },\n\n        // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n        // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n        // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n        // If `options` is given, it will be passed to the Marker class constructor.\n        startMarker: function startMarker(latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var marker = this.createMarker(latlng, options);\n            marker.enableEdit(this.map).startDrawing();\n            return marker;\n        },\n\n        // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n        // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Rectangle class constructor.\n        startRectangle: function startRectangle(latlng, options) {\n            var corner = latlng || L.latLng([0, 0]);\n            var bounds = new L.LatLngBounds(corner, corner);\n            var rectangle = this.createRectangle(bounds, options);\n            rectangle.enableEdit(this.map).startDrawing();\n            return rectangle;\n        },\n\n        // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n        // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Circle class constructor.\n        startCircle: function startCircle(latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var circle = this.createCircle(latlng, options);\n            circle.enableEdit(this.map).startDrawing();\n            return circle;\n        },\n\n        startHole: function startHole(editor, latlng) {\n            editor.newHole(latlng);\n        },\n\n        createLayer: function createLayer(klass, latlngs, options) {\n            options = L.Util.extend({ editOptions: { editTools: this } }, options);\n            var layer = new klass(latlngs, options);\n            // 🍂namespace Editable\n            // 🍂event editable:created: LayerEvent\n            // Fired when a new feature (Marker, Polyline…) is created.\n            this.fireAndForward('editable:created', { layer: layer });\n            return layer;\n        },\n\n        createPolyline: function createPolyline(latlngs, options) {\n            return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n        },\n\n        createPolygon: function createPolygon(latlngs, options) {\n            return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n        },\n\n        createMarker: function createMarker(latlng, options) {\n            return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n        },\n\n        createRectangle: function createRectangle(bounds, options) {\n            return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n        },\n\n        createCircle: function createCircle(latlng, options) {\n            return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n        }\n\n    });\n\n    L.extend(L.Editable, {\n\n        makeCancellable: function makeCancellable(e) {\n            e.cancel = function () {\n                e._cancelled = true;\n            };\n        }\n\n    });\n\n    // 🍂namespace Map; 🍂class Map\n    // Leaflet.Editable add options and events to the `L.Map` object.\n    // See `Editable` events for the list of events fired on the Map.\n    // 🍂example\n    //\n    // ```js\n    // var map = L.map('map', {\n    //  editable: true,\n    //  editOptions: {\n    //    …\n    // }\n    // });\n    // ```\n    // 🍂section Editable Map Options\n    L.Map.mergeOptions({\n\n        // 🍂namespace Map\n        // 🍂section Map Options\n        // 🍂option editToolsClass: class = L.Editable\n        // Class to be used as vertex, for path editing.\n        editToolsClass: L.Editable,\n\n        // 🍂option editable: boolean = false\n        // Whether to create a L.Editable instance at map init.\n        editable: false,\n\n        // 🍂option editOptions: hash = {}\n        // Options to pass to L.Editable when instantiating.\n        editOptions: {}\n\n    });\n\n    L.Map.addInitHook(function () {\n\n        this.whenReady(function () {\n            if (this.options.editable) {\n                this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n            }\n        });\n    });\n\n    L.Editable.VertexIcon = L.DivIcon.extend({\n\n        options: {\n            iconSize: new L.Point(8, 8)\n        }\n\n    });\n\n    L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n        options: {\n            iconSize: new L.Point(20, 20)\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n    L.Editable.VertexMarker = L.Marker.extend({\n\n        options: {\n            draggable: true,\n            className: 'leaflet-div-icon leaflet-vertex-icon'\n        },\n\n        // 🍂section Public methods\n        // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n        // instance when listening for events like `editable:vertex:ctrlclick`.\n\n        initialize: function initialize(latlng, latlngs, editor, options) {\n            // We don't use this._latlng, because on drag Leaflet replace it while\n            // we want to keep reference.\n            this.latlng = latlng;\n            this.latlngs = latlngs;\n            this.editor = editor;\n            L.Marker.prototype.initialize.call(this, latlng, options);\n            this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n            this.latlng.__vertex = this;\n            this.editor.editLayer.addLayer(this);\n            this.setZIndexOffset(editor.tools._lastZIndex + 1);\n        },\n\n        onAdd: function onAdd(map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            this.on('drag', this.onDrag);\n            this.on('dragstart', this.onDragStart);\n            this.on('dragend', this.onDragEnd);\n            this.on('mouseup', this.onMouseup);\n            this.on('click', this.onClick);\n            this.on('contextmenu', this.onContextMenu);\n            this.on('mousedown touchstart', this.onMouseDown);\n            this.on('mouseover', this.onMouseOver);\n            this.on('mouseout', this.onMouseOut);\n            this.addMiddleMarkers();\n        },\n\n        onRemove: function onRemove(map) {\n            if (this.middleMarker) this.middleMarker.delete();\n            delete this.latlng.__vertex;\n            this.off('drag', this.onDrag);\n            this.off('dragstart', this.onDragStart);\n            this.off('dragend', this.onDragEnd);\n            this.off('mouseup', this.onMouseup);\n            this.off('click', this.onClick);\n            this.off('contextmenu', this.onContextMenu);\n            this.off('mousedown touchstart', this.onMouseDown);\n            this.off('mouseover', this.onMouseOver);\n            this.off('mouseout', this.onMouseOut);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onDrag: function onDrag(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDrag(e);\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this._map.layerPointToLatLng(iconPos);\n            this.latlng.update(latlng);\n            this._latlng = this.latlng; // Push back to Leaflet our reference.\n            this.editor.refresh();\n            if (this.middleMarker) this.middleMarker.updateLatLng();\n            var next = this.getNext();\n            if (next && next.middleMarker) next.middleMarker.updateLatLng();\n        },\n\n        onDragStart: function onDragStart(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragStart(e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragEnd(e);\n        },\n\n        onClick: function onClick(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerClick(e);\n        },\n\n        onMouseup: function onMouseup(e) {\n            L.DomEvent.stop(e);\n            e.vertex = this;\n            this.editor.map.fire('mouseup', e);\n        },\n\n        onContextMenu: function onContextMenu(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerContextMenu(e);\n        },\n\n        onMouseDown: function onMouseDown(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseDown(e);\n        },\n\n        onMouseOver: function onMouseOver(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOver(e);\n        },\n\n        onMouseOut: function onMouseOut(e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOut(e);\n        },\n\n        // 🍂method delete()\n        // Delete a vertex and the related LatLng.\n        delete: function _delete() {\n            var next = this.getNext(); // Compute before changing latlng\n            this.latlngs.splice(this.getIndex(), 1);\n            this.editor.editLayer.removeLayer(this);\n            this.editor.onVertexDeleted({ latlng: this.latlng, vertex: this });\n            if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n            if (next) next.resetMiddleMarker();\n            this.editor.refresh();\n        },\n\n        // 🍂method getIndex(): int\n        // Get the index of the current vertex among others of the same LatLngs group.\n        getIndex: function getIndex() {\n            return this.latlngs.indexOf(this.latlng);\n        },\n\n        // 🍂method getLastIndex(): int\n        // Get last vertex index of the LatLngs group of the current vertex.\n        getLastIndex: function getLastIndex() {\n            return this.latlngs.length - 1;\n        },\n\n        // 🍂method getPrevious(): VertexMarker\n        // Get the previous VertexMarker in the same LatLngs group.\n        getPrevious: function getPrevious() {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                previousIndex = index - 1;\n            if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n            var previous = this.latlngs[previousIndex];\n            if (previous) return previous.__vertex;\n        },\n\n        // 🍂method getNext(): VertexMarker\n        // Get the next VertexMarker in the same LatLngs group.\n        getNext: function getNext() {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                nextIndex = index + 1;\n            if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n            var next = this.latlngs[nextIndex];\n            if (next) return next.__vertex;\n        },\n\n        addMiddleMarker: function addMiddleMarker(previous) {\n            if (!this.editor.hasMiddleMarkers()) return;\n            previous = previous || this.getPrevious();\n            if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n        },\n\n        addMiddleMarkers: function addMiddleMarkers() {\n            if (!this.editor.hasMiddleMarkers()) return;\n            var previous = this.getPrevious();\n            if (previous) this.addMiddleMarker(previous);\n            var next = this.getNext();\n            if (next) next.resetMiddleMarker();\n        },\n\n        resetMiddleMarker: function resetMiddleMarker() {\n            if (this.middleMarker) this.middleMarker.delete();\n            this.addMiddleMarker();\n        },\n\n        // 🍂method split()\n        // Split the vertex LatLngs group at its index, if possible.\n        split: function split() {\n            if (!this.editor.splitShape) return; // Only for PolylineEditor\n            this.editor.splitShape(this.latlngs, this.getIndex());\n        },\n\n        // 🍂method continue()\n        // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n        continue: function _continue() {\n            if (!this.editor.continueBackward) return; // Only for PolylineEditor\n            var index = this.getIndex();\n            if (index === 0) this.editor.continueBackward(this.latlngs);else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option vertexMarkerClass: class = VertexMarker\n        // Class to be used as vertex, for path editing.\n        vertexMarkerClass: L.Editable.VertexMarker\n\n    });\n\n    L.Editable.MiddleMarker = L.Marker.extend({\n\n        options: {\n            opacity: 0.5,\n            className: 'leaflet-div-icon leaflet-middle-icon',\n            draggable: true\n        },\n\n        initialize: function initialize(left, right, latlngs, editor, options) {\n            this.left = left;\n            this.right = right;\n            this.editor = editor;\n            this.latlngs = latlngs;\n            L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n            this._opacity = this.options.opacity;\n            this.options.icon = this.editor.tools.createVertexIcon({ className: this.options.className });\n            this.editor.editLayer.addLayer(this);\n            this.setVisibility();\n        },\n\n        setVisibility: function setVisibility() {\n            var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                size = L.point(this.options.icon.options.iconSize);\n            if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();else this.show();\n        },\n\n        show: function show() {\n            this.setOpacity(this._opacity);\n        },\n\n        hide: function hide() {\n            this.setOpacity(0);\n        },\n\n        updateLatLng: function updateLatLng() {\n            this.setLatLng(this.computeLatLng());\n            this.setVisibility();\n        },\n\n        computeLatLng: function computeLatLng() {\n            var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                y = (leftPoint.y + rightPoint.y) / 2,\n                x = (leftPoint.x + rightPoint.x) / 2;\n            return this.editor.map.containerPointToLatLng([x, y]);\n        },\n\n        onAdd: function onAdd(map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.on('zoomend', this.setVisibility, this);\n        },\n\n        onRemove: function onRemove(map) {\n            delete this.right.middleMarker;\n            L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.off('zoomend', this.setVisibility, this);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onMouseDown: function onMouseDown(e) {\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this.editor.map.layerPointToLatLng(iconPos);\n            e = {\n                originalEvent: e,\n                latlng: latlng\n            };\n            if (this.options.opacity === 0) return;\n            L.Editable.makeCancellable(e);\n            this.editor.onMiddleMarkerMouseDown(e);\n            if (e._cancelled) return;\n            this.latlngs.splice(this.index(), 0, e.latlng);\n            this.editor.refresh();\n            var icon = this._icon;\n            var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n            this.editor.onNewVertex(marker);\n            /* Hack to workaround browser not firing touchend when element is no more on DOM */\n            var parent = marker._icon.parentNode;\n            parent.removeChild(marker._icon);\n            marker._icon = icon;\n            parent.appendChild(marker._icon);\n            marker._initIcon();\n            marker._initInteraction();\n            marker.setOpacity(1);\n            /* End hack */\n            // Transfer ongoing dragging to real marker\n            L.Draggable._dragging = false;\n            marker.dragging._draggable._onDown(e.originalEvent);\n            this.delete();\n        },\n\n        delete: function _delete() {\n            this.editor.editLayer.removeLayer(this);\n        },\n\n        index: function index() {\n            return this.latlngs.indexOf(this.right.latlng);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option middleMarkerClass: class = VertexMarker\n        // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n        middleMarkerClass: L.Editable.MiddleMarker\n\n    });\n\n    // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n    // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n    // editor basically knows how to handle the edition.\n    L.Editable.BaseEditor = L.Handler.extend({\n\n        initialize: function initialize(map, feature, options) {\n            L.setOptions(this, options);\n            this.map = map;\n            this.feature = feature;\n            this.feature.editor = this;\n            this.editLayer = new L.LayerGroup();\n            this.tools = this.options.editTools || map.editTools;\n        },\n\n        // 🍂method enable(): this\n        // Set up the drawing tools for the feature to be editable.\n        addHooks: function addHooks() {\n            if (this.isConnected()) this.onFeatureAdd();else this.feature.once('add', this.onFeatureAdd, this);\n            this.onEnable();\n            this.feature.on(this._getEvents(), this);\n        },\n\n        // 🍂method disable(): this\n        // Remove the drawing tools for the feature.\n        removeHooks: function removeHooks() {\n            this.feature.off(this._getEvents(), this);\n            if (this.feature.dragging) this.feature.dragging.disable();\n            this.editLayer.clearLayers();\n            this.tools.editLayer.removeLayer(this.editLayer);\n            this.onDisable();\n            if (this._drawing) this.cancelDrawing();\n        },\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing with this editor.\n        drawing: function drawing() {\n            return !!this._drawing;\n        },\n\n        reset: function reset() {},\n\n        onFeatureAdd: function onFeatureAdd() {\n            this.tools.editLayer.addLayer(this.editLayer);\n            if (this.feature.dragging) this.feature.dragging.enable();\n        },\n\n        hasMiddleMarkers: function hasMiddleMarkers() {\n            return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n        },\n\n        fireAndForward: function fireAndForward(type, e) {\n            e = e || {};\n            e.layer = this.feature;\n            this.feature.fire(type, e);\n            this.tools.fireAndForward(type, e);\n        },\n\n        onEnable: function onEnable() {\n            // 🍂namespace Editable\n            // 🍂event editable:enable: Event\n            // Fired when an existing feature is ready to be edited.\n            this.fireAndForward('editable:enable');\n        },\n\n        onDisable: function onDisable() {\n            // 🍂namespace Editable\n            // 🍂event editable:disable: Event\n            // Fired when an existing feature is not ready anymore to be edited.\n            this.fireAndForward('editable:disable');\n        },\n\n        onEditing: function onEditing() {\n            // 🍂namespace Editable\n            // 🍂event editable:editing: Event\n            // Fired as soon as any change is made to the feature geometry.\n            this.fireAndForward('editable:editing');\n        },\n\n        onStartDrawing: function onStartDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:start: Event\n            // Fired when a feature is to be drawn.\n            this.fireAndForward('editable:drawing:start');\n        },\n\n        onEndDrawing: function onEndDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:end: Event\n            // Fired when a feature is not drawn anymore.\n            this.fireAndForward('editable:drawing:end');\n        },\n\n        onCancelDrawing: function onCancelDrawing() {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:cancel: Event\n            // Fired when user cancel drawing while a feature is being drawn.\n            this.fireAndForward('editable:drawing:cancel');\n        },\n\n        onCommitDrawing: function onCommitDrawing(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:commit: Event\n            // Fired when user finish drawing a feature.\n            this.fireAndForward('editable:drawing:commit', e);\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mousedown: Event\n            // Fired when user `mousedown` while drawing.\n            this.fireAndForward('editable:drawing:mousedown', e);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mouseup: Event\n            // Fired when user `mouseup` while drawing.\n            this.fireAndForward('editable:drawing:mouseup', e);\n        },\n\n        startDrawing: function startDrawing() {\n            if (!this._drawing) this._drawing = L.Editable.FORWARD;\n            this.tools.registerForDrawing(this);\n            this.onStartDrawing();\n        },\n\n        commitDrawing: function commitDrawing(e) {\n            this.onCommitDrawing(e);\n            this.endDrawing();\n        },\n\n        cancelDrawing: function cancelDrawing() {\n            // If called during a vertex drag, the vertex will be removed before\n            // the mouseup fires on it. This is a workaround. Maybe better fix is\n            // To have L.Draggable reset it's status on disable (Leaflet side).\n            L.Draggable._dragging = false;\n            this.onCancelDrawing();\n            this.endDrawing();\n        },\n\n        endDrawing: function endDrawing() {\n            this._drawing = false;\n            this.tools.unregisterForDrawing(this);\n            this.onEndDrawing();\n        },\n\n        onDrawingClick: function onDrawingClick(e) {\n            if (!this.drawing()) return;\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:click: CancelableEvent\n            // Fired when user `click` while drawing, before any internal action is being processed.\n            this.fireAndForward('editable:drawing:click', e);\n            if (e._cancelled) return;\n            if (!this.isConnected()) this.connect(e);\n            this.processDrawingClick(e);\n        },\n\n        isConnected: function isConnected() {\n            return this.map.hasLayer(this.feature);\n        },\n\n        connect: function connect() {\n            this.tools.connectCreatedToMap(this.feature);\n            this.tools.editLayer.addLayer(this.editLayer);\n        },\n\n        onMove: function onMove(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:move: Event\n            // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n            this.fireAndForward('editable:drawing:move', e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            this.onMove(e);\n        },\n\n        _getEvents: function _getEvents() {\n            return {\n                dragstart: this.onDragStart,\n                drag: this.onDrag,\n                dragend: this.onDragEnd,\n                remove: this.disable\n            };\n        },\n\n        onDragStart: function onDragStart(e) {\n            this.onEditing();\n            // 🍂namespace Editable\n            // 🍂event editable:dragstart: Event\n            // Fired before a path feature is dragged.\n            this.fireAndForward('editable:dragstart', e);\n        },\n\n        onDrag: function onDrag(e) {\n            this.onMove(e);\n            // 🍂namespace Editable\n            // 🍂event editable:drag: Event\n            // Fired when a path feature is being dragged.\n            this.fireAndForward('editable:drag', e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            // 🍂namespace Editable\n            // 🍂event editable:dragend: Event\n            // Fired after a path feature has been dragged.\n            this.fireAndForward('editable:dragend', e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n    // 🍂inherits BaseEditor\n    // Editor for Marker.\n    L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) this.feature.setLatLng(e.latlng);\n        },\n\n        processDrawingClick: function processDrawingClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:clicked: Event\n            // Fired when user `click` while drawing, after all internal actions.\n            this.fireAndForward('editable:drawing:clicked', e);\n            this.commitDrawing(e);\n        },\n\n        connect: function connect(e) {\n            // On touch, the latlng has not been updated because there is\n            // no mousemove.\n            if (e) this.feature._latlng = e.latlng;\n            L.Editable.BaseEditor.prototype.connect.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n    // 🍂inherits BaseEditor\n    // Base class for all path editors.\n    L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n        CLOSED: false,\n        MIN_VERTEX: 2,\n\n        addHooks: function addHooks() {\n            L.Editable.BaseEditor.prototype.addHooks.call(this);\n            if (this.feature) this.initVertexMarkers();\n            return this;\n        },\n\n        initVertexMarkers: function initVertexMarkers(latlngs) {\n            if (!this.enabled()) return;\n            latlngs = latlngs || this.getLatLngs();\n            if (isFlat(latlngs)) this.addVertexMarkers(latlngs);else for (var i = 0; i < latlngs.length; i++) {\n                this.initVertexMarkers(latlngs[i]);\n            }\n        },\n\n        getLatLngs: function getLatLngs() {\n            return this.feature.getLatLngs();\n        },\n\n        // 🍂method reset()\n        // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n        reset: function reset() {\n            this.editLayer.clearLayers();\n            this.initVertexMarkers();\n        },\n\n        addVertexMarker: function addVertexMarker(latlng, latlngs) {\n            return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n        },\n\n        onNewVertex: function onNewVertex(vertex) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:new: VertexEvent\n            // Fired when a new vertex is created.\n            this.fireAndForward('editable:vertex:new', { latlng: vertex.latlng, vertex: vertex });\n        },\n\n        addVertexMarkers: function addVertexMarkers(latlngs) {\n            for (var i = 0; i < latlngs.length; i++) {\n                this.addVertexMarker(latlngs[i], latlngs);\n            }\n        },\n\n        refreshVertexMarkers: function refreshVertexMarkers(latlngs) {\n            latlngs = latlngs || this.getDefaultLatLngs();\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].__vertex.update();\n            }\n        },\n\n        addMiddleMarker: function addMiddleMarker(left, right, latlngs) {\n            return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n        },\n\n        onVertexMarkerClick: function onVertexMarkerClick(e) {\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:click: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n            this.fireAndForward('editable:vertex:click', e);\n            if (e._cancelled) return;\n            if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n            var index = e.vertex.getIndex(),\n                commit;\n            if (e.originalEvent.ctrlKey) {\n                this.onVertexMarkerCtrlClick(e);\n            } else if (e.originalEvent.altKey) {\n                this.onVertexMarkerAltClick(e);\n            } else if (e.originalEvent.shiftKey) {\n                this.onVertexMarkerShiftClick(e);\n            } else if (e.originalEvent.metaKey) {\n                this.onVertexMarkerMetaKeyClick(e);\n            } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                if (index >= this.MIN_VERTEX - 1) commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                commit = true; // Allow to close on first point also for polygons\n            } else {\n                this.onVertexRawMarkerClick(e);\n            }\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:clicked: VertexEvent\n            // Fired when a `click` is issued on a vertex, after all internal actions.\n            this.fireAndForward('editable:vertex:clicked', e);\n            if (commit) this.commitDrawing(e);\n        },\n\n        onVertexRawMarkerClick: function onVertexRawMarkerClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n            this.fireAndForward('editable:vertex:rawclick', e);\n            if (e._cancelled) return;\n            if (!this.vertexCanBeDeleted(e.vertex)) return;\n            e.vertex.delete();\n        },\n\n        vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n            return vertex.latlngs.length > this.MIN_VERTEX;\n        },\n\n        onVertexDeleted: function onVertexDeleted(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:deleted: VertexEvent\n            // Fired after a vertex has been deleted by user.\n            this.fireAndForward('editable:vertex:deleted', e);\n        },\n\n        onVertexMarkerCtrlClick: function onVertexMarkerCtrlClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:ctrlclick: VertexEvent\n            // Fired when a `click` with `ctrlKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:ctrlclick', e);\n        },\n\n        onVertexMarkerShiftClick: function onVertexMarkerShiftClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:shiftclick: VertexEvent\n            // Fired when a `click` with `shiftKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:shiftclick', e);\n        },\n\n        onVertexMarkerMetaKeyClick: function onVertexMarkerMetaKeyClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:metakeyclick: VertexEvent\n            // Fired when a `click` with `metaKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:metakeyclick', e);\n        },\n\n        onVertexMarkerAltClick: function onVertexMarkerAltClick(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:altclick: VertexEvent\n            // Fired when a `click` with `altKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:altclick', e);\n        },\n\n        onVertexMarkerContextMenu: function onVertexMarkerContextMenu(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:contextmenu: VertexEvent\n            // Fired when a `contextmenu` is issued on a vertex.\n            this.fireAndForward('editable:vertex:contextmenu', e);\n        },\n\n        onVertexMarkerMouseDown: function onVertexMarkerMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mousedown: VertexEvent\n            // Fired when user `mousedown` a vertex.\n            this.fireAndForward('editable:vertex:mousedown', e);\n        },\n\n        onVertexMarkerMouseOver: function onVertexMarkerMouseOver(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseover: VertexEvent\n            // Fired when a user's mouse enters the vertex\n            this.fireAndForward('editable:vertex:mouseover', e);\n        },\n\n        onVertexMarkerMouseOut: function onVertexMarkerMouseOut(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseout: VertexEvent\n            // Fired when a user's mouse leaves the vertex\n            this.fireAndForward('editable:vertex:mouseout', e);\n        },\n\n        onMiddleMarkerMouseDown: function onMiddleMarkerMouseDown(e) {\n            // 🍂namespace Editable\n            // 🍂section MiddleMarker events\n            // 🍂event editable:middlemarker:mousedown: VertexEvent\n            // Fired when user `mousedown` a middle marker.\n            this.fireAndForward('editable:middlemarker:mousedown', e);\n        },\n\n        onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n            this.onMove(e);\n            if (this.feature._bounds) this.extendBounds(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:drag: VertexEvent\n            // Fired when a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:drag', e);\n        },\n\n        onVertexMarkerDragStart: function onVertexMarkerDragStart(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragstart: VertexEvent\n            // Fired before a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragstart', e);\n        },\n\n        onVertexMarkerDragEnd: function onVertexMarkerDragEnd(e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragend: VertexEvent\n            // Fired after a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragend', e);\n        },\n\n        setDrawnLatLngs: function setDrawnLatLngs(latlngs) {\n            this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n        },\n\n        startDrawing: function startDrawing() {\n            if (!this._drawnLatLngs) this.setDrawnLatLngs();\n            L.Editable.BaseEditor.prototype.startDrawing.call(this);\n        },\n\n        startDrawingForward: function startDrawingForward() {\n            this.startDrawing();\n        },\n\n        endDrawing: function endDrawing() {\n            this.tools.detachForwardLineGuide();\n            this.tools.detachBackwardLineGuide();\n            if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n            L.Editable.BaseEditor.prototype.endDrawing.call(this);\n            delete this._drawnLatLngs;\n        },\n\n        addLatLng: function addLatLng(latlng) {\n            if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);else this._drawnLatLngs.unshift(latlng);\n            this.feature._bounds.extend(latlng);\n            var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n            this.onNewVertex(vertex);\n            this.refresh();\n        },\n\n        newPointForward: function newPointForward(latlng) {\n            this.addLatLng(latlng);\n            this.tools.attachForwardLineGuide();\n            this.tools.anchorForwardLineGuide(latlng);\n        },\n\n        newPointBackward: function newPointBackward(latlng) {\n            this.addLatLng(latlng);\n            this.tools.anchorBackwardLineGuide(latlng);\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method push()\n        // Programmatically add a point while drawing.\n        push: function push(latlng) {\n            if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);else this.newPointBackward(latlng);\n        },\n\n        removeLatLng: function removeLatLng(latlng) {\n            latlng.__vertex.delete();\n            this.refresh();\n        },\n\n        // 🍂method pop(): L.LatLng or null\n        // Programmatically remove last point (if any) while drawing.\n        pop: function pop() {\n            if (this._drawnLatLngs.length <= 1) return;\n            var latlng;\n            if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];else latlng = this._drawnLatLngs[0];\n            this.removeLatLng(latlng);\n            if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n            return latlng;\n        },\n\n        processDrawingClick: function processDrawingClick(e) {\n            if (e.vertex && e.vertex.editor === this) return;\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);else this.newPointBackward(e.latlng);\n            this.fireAndForward('editable:drawing:clicked', e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) {\n                this.tools.moveForwardLineGuide(e.latlng);\n                this.tools.moveBackwardLineGuide(e.latlng);\n            }\n        },\n\n        refresh: function refresh() {\n            this.feature.redraw();\n            this.onEditing();\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method newShape(latlng?: L.LatLng)\n        // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n        // if optional `latlng` is given, start a path at this point.\n        newShape: function newShape(latlng) {\n            var shape = this.addNewEmptyShape();\n            if (!shape) return;\n            this.setDrawnLatLngs(shape[0] || shape); // Polygon or polyline\n            this.startDrawingForward();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:new: ShapeEvent\n            // Fired when a new shape is created in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:new', { shape: shape });\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        deleteShape: function deleteShape(shape, latlngs) {\n            var e = { shape: shape };\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:delete: CancelableShapeEvent\n            // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:delete', e);\n            if (e._cancelled) return;\n            shape = this._deleteShape(shape, latlngs);\n            if (this.ensureNotFlat) this.ensureNotFlat(); // Polygon.\n            this.feature.setLatLngs(this.getLatLngs()); // Force bounds reset.\n            this.refresh();\n            this.reset();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:deleted: ShapeEvent\n            // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:deleted', { shape: shape });\n            return shape;\n        },\n\n        _deleteShape: function _deleteShape(shape, latlngs) {\n            latlngs = latlngs || this.getLatLngs();\n            if (!latlngs.length) return;\n            var self = this,\n                inplaceDelete = function inplaceDelete(latlngs, shape) {\n                // Called when deleting a flat latlngs\n                shape = latlngs.splice(0, Number.MAX_VALUE);\n                return shape;\n            },\n                spliceDelete = function spliceDelete(latlngs, shape) {\n                // Called when removing a latlngs inside an array\n                latlngs.splice(latlngs.indexOf(shape), 1);\n                if (!latlngs.length) self._deleteShape(latlngs);\n                return shape;\n            };\n            if (latlngs === shape) return inplaceDelete(latlngs, shape);\n            for (var i = 0; i < latlngs.length; i++) {\n                if (latlngs[i] === shape) return spliceDelete(latlngs, shape);else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n            }\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n        // Remove a path shape at the given `latlng`.\n        deleteShapeAt: function deleteShapeAt(latlng) {\n            var shape = this.feature.shapeAt(latlng);\n            if (shape) return this.deleteShape(shape);\n        },\n\n        // 🍂method appendShape(shape: Array)\n        // Append a new shape to the Polygon or Polyline.\n        appendShape: function appendShape(shape) {\n            this.insertShape(shape);\n        },\n\n        // 🍂method prependShape(shape: Array)\n        // Prepend a new shape to the Polygon or Polyline.\n        prependShape: function prependShape(shape) {\n            this.insertShape(shape, 0);\n        },\n\n        // 🍂method insertShape(shape: Array, index: int)\n        // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n        insertShape: function insertShape(shape, index) {\n            this.ensureMulti();\n            shape = this.formatShape(shape);\n            if (typeof index === 'undefined') index = this.feature._latlngs.length;\n            this.feature._latlngs.splice(index, 0, shape);\n            this.feature.redraw();\n            if (this._enabled) this.reset();\n        },\n\n        extendBounds: function extendBounds(e) {\n            this.feature._bounds.extend(e.vertex.latlng);\n        },\n\n        onDragStart: function onDragStart(e) {\n            this.editLayer.clearLayers();\n            L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n        },\n\n        onDragEnd: function onDragEnd(e) {\n            this.initVertexMarkers();\n            L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n        startDrawingBackward: function startDrawingBackward() {\n            this._drawing = L.Editable.BACKWARD;\n            this.startDrawing();\n        },\n\n        // 🍂method continueBackward(latlngs?: Array)\n        // Set up drawing tools to continue the line backward.\n        continueBackward: function continueBackward(latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachBackwardLineGuide();\n                this.tools.anchorBackwardLineGuide(latlngs[0]);\n            }\n            this.startDrawingBackward();\n        },\n\n        // 🍂method continueForward(latlngs?: Array)\n        // Set up drawing tools to continue the line forward.\n        continueForward: function continueForward(latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n            }\n            this.startDrawingForward();\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n            latlngs = latlngs || this.feature._latlngs;\n            if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;else return this.getDefaultLatLngs(latlngs[0]);\n        },\n\n        ensureMulti: function ensureMulti() {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        addNewEmptyShape: function addNewEmptyShape() {\n            if (this.feature._latlngs.length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        formatShape: function formatShape(shape) {\n            if (isFlat(shape)) return shape;else if (shape[0]) return this.formatShape(shape[0]);\n        },\n\n        // 🍂method splitShape(latlngs?: Array, index: int)\n        // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n        splitShape: function splitShape(shape, index) {\n            if (!index || index >= shape.length - 1) return;\n            this.ensureMulti();\n            var shapeIndex = this.feature._latlngs.indexOf(shape);\n            if (shapeIndex === -1) return;\n            var first = shape.slice(0, index + 1),\n                second = shape.slice(index);\n            // We deal with reference, we don't want twice the same latlng around.\n            second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n            this.feature._latlngs.splice(shapeIndex, 1, first, second);\n            this.refresh();\n            this.reset();\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 3,\n\n        newPointForward: function newPointForward(latlng) {\n            L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n            if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n            if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n        },\n\n        addNewEmptyHole: function addNewEmptyHole(latlng) {\n            this.ensureNotFlat();\n            var latlngs = this.feature.shapeAt(latlng);\n            if (!latlngs) return;\n            var holes = [];\n            latlngs.push(holes);\n            return holes;\n        },\n\n        // 🍂method newHole(latlng?: L.LatLng, index: int)\n        // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n        newHole: function newHole(latlng) {\n            var holes = this.addNewEmptyHole(latlng);\n            if (!holes) return;\n            this.setDrawnLatLngs(holes);\n            this.startDrawingForward();\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        addNewEmptyShape: function addNewEmptyShape() {\n            if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        ensureMulti: function ensureMulti() {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        ensureNotFlat: function ensureNotFlat() {\n            if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n        },\n\n        vertexCanBeDeleted: function vertexCanBeDeleted(vertex) {\n            var parent = this.feature.parentShape(vertex.latlngs),\n                idx = L.Util.indexOf(parent, vertex.latlngs);\n            if (idx > 0) return true; // Holes can be totally deleted without removing the layer itself.\n            return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs() {\n            if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n            return this.feature._latlngs[0];\n        },\n\n        formatShape: function formatShape(shape) {\n            // [[1, 2], [3, 4]] => must be nested\n            // [] => must be nested\n            // [[]] => is already nested\n            if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];else return shape;\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n    // 🍂inherits PathEditor\n    L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 4,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        extendBounds: function extendBounds(e) {\n            var index = e.vertex.getIndex(),\n                next = e.vertex.getNext(),\n                previous = e.vertex.getPrevious(),\n                oppositeIndex = (index + 2) % 4,\n                opposite = e.vertex.latlngs[oppositeIndex],\n                bounds = new L.LatLngBounds(e.latlng, opposite);\n            // Update latlngs by hand to preserve order.\n            previous.latlng.update([e.latlng.lat, opposite.lng]);\n            next.latlng.update([opposite.lat, e.latlng.lng]);\n            this.updateBounds(bounds);\n            this.refreshVertexMarkers();\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this.connect();\n            var latlngs = this.getDefaultLatLngs();\n            // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n            // which is the case here as all latlngs are [0, 0]\n            if (latlngs.length === 3) latlngs.push(e.latlng);\n            var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n            this.updateBounds(bounds);\n            this.updateLatLngs(bounds);\n            this.refresh();\n            this.reset();\n            // Stop dragging map.\n            // L.Draggable has two workflows:\n            // - mousedown => mousemove => mouseup\n            // - touchstart => touchmove => touchend\n            // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n            // can deal with mousedown, but then when in a touch device, we are dealing with\n            // simulated events (actually simulated by L.Map.Tap), which are no more taken\n            // into account by L.Draggable.\n            // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the bottom right corner.\n            // Should we refine which corner will handle the drag according to\n            // drag direction?\n            latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs(latlngs) {\n            return latlngs || this.feature._latlngs[0];\n        },\n\n        updateBounds: function updateBounds(bounds) {\n            this.feature._bounds = bounds;\n        },\n\n        updateLatLngs: function updateLatLngs(bounds) {\n            var latlngs = this.getDefaultLatLngs(),\n                newLatlngs = this.feature._boundsToLatLngs(bounds);\n            // Keep references.\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].update(newLatlngs[i]);\n            }\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n    // 🍂inherits PathEditor\n    L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n        MIN_VERTEX: 2,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        initialize: function initialize(map, feature, options) {\n            L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n            this._resizeLatLng = this.computeResizeLatLng();\n        },\n\n        computeResizeLatLng: function computeResizeLatLng() {\n            // While circle is not added to the map, _radius is not set.\n            var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                point = this.map.project(this.feature._latlng);\n            return this.map.unproject([point.x + delta, point.y - delta]);\n        },\n\n        updateResizeLatLng: function updateResizeLatLng() {\n            this._resizeLatLng.update(this.computeResizeLatLng());\n            this._resizeLatLng.__vertex.update();\n        },\n\n        getLatLngs: function getLatLngs() {\n            return [this.feature._latlng, this._resizeLatLng];\n        },\n\n        getDefaultLatLngs: function getDefaultLatLngs() {\n            return this.getLatLngs();\n        },\n\n        onVertexMarkerDrag: function onVertexMarkerDrag(e) {\n            if (e.vertex.getIndex() === 1) this.resize(e);else this.updateResizeLatLng(e);\n            L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n        },\n\n        resize: function resize(e) {\n            var radius = this.feature._latlng.distanceTo(e.latlng);\n            this.feature.setRadius(radius);\n        },\n\n        onDrawingMouseDown: function onDrawingMouseDown(e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this._resizeLatLng.update(e.latlng);\n            this.feature._latlng.update(e.latlng);\n            this.connect();\n            // Stop dragging map.\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the radius handler.\n            this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function onDrawingMouseUp(e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function onDrawingMouseMove(e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        onDrag: function onDrag(e) {\n            L.Editable.PathEditor.prototype.onDrag.call(this, e);\n            this.feature.dragging.updateLatLng(this._resizeLatLng);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class EditableMixin\n    // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n    // and `L.Marker`. It adds some methods to them.\n    // *When editing is enabled, the editor is accessible on the instance with the\n    // `editor` property.*\n    var EditableMixin = {\n\n        createEditor: function createEditor(map) {\n            map = map || this._map;\n            var tools = (this.options.editOptions || {}).editTools || map.editTools;\n            if (!tools) throw Error('Unable to detect Editable instance.');\n            var Klass = this.options.editorClass || this.getEditorClass(tools);\n            return new Klass(map, this, this.options.editOptions);\n        },\n\n        // 🍂method enableEdit(map?: L.Map): this.editor\n        // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n        enableEdit: function enableEdit(map) {\n            if (!this.editor) this.createEditor(map);\n            this.editor.enable();\n            return this.editor;\n        },\n\n        // 🍂method editEnabled(): boolean\n        // Return true if current instance has an editor attached, and this editor is enabled.\n        editEnabled: function editEnabled() {\n            return this.editor && this.editor.enabled();\n        },\n\n        // 🍂method disableEdit()\n        // Disable editing, also remove the editor property reference.\n        disableEdit: function disableEdit() {\n            if (this.editor) {\n                this.editor.disable();\n                delete this.editor;\n            }\n        },\n\n        // 🍂method toggleEdit()\n        // Enable or disable editing, according to current status.\n        toggleEdit: function toggleEdit() {\n            if (this.editEnabled()) this.disableEdit();else this.enableEdit();\n        },\n\n        _onEditableAdd: function _onEditableAdd() {\n            if (this.editor) this.enableEdit();\n        }\n\n    };\n\n    var PolylineMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.polylineEditorClass ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n        },\n\n        shapeAt: function shapeAt(latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n            }return shape;\n        },\n\n        isInLatLngs: function isInLatLngs(l, latlngs) {\n            if (!latlngs) return false;\n            var i,\n                k,\n                len,\n                part = [],\n                p,\n                w = this._clickTolerance();\n            this._projectLatlngs(latlngs, part, this._pxBounds);\n            part = part[0];\n            p = this._map.latLngToLayerPoint(l);\n\n            if (!this._pxBounds.contains(p)) {\n                return false;\n            }\n            for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    };\n\n    var PolygonMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.polygonEditorClass ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n        },\n\n        shapeAt: function shapeAt(latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n            // - latlngs is an array of arrays of arrays, this is a multi, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;else for (var i = 0; i < latlngs.length; i++) {\n                if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n            }return shape;\n        },\n\n        isInLatLngs: function isInLatLngs(l, latlngs) {\n            var inside = false,\n                l1,\n                l2,\n                j,\n                k,\n                len2;\n\n            for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                l1 = latlngs[j];\n                l2 = latlngs[k];\n\n                if (l1.lat > l.lat !== l2.lat > l.lat && l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng) {\n                    inside = !inside;\n                }\n            }\n\n            return inside;\n        },\n\n        parentShape: function parentShape(shape, latlngs) {\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs) return;\n            var idx = L.Util.indexOf(latlngs, shape);\n            if (idx !== -1) return latlngs;\n            for (var i = 0; i < latlngs.length; i++) {\n                idx = L.Util.indexOf(latlngs[i], shape);\n                if (idx !== -1) return latlngs[i];\n            }\n        }\n\n    };\n\n    var MarkerMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.markerEditorClass ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n        }\n\n    };\n\n    var RectangleMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.rectangleEditorClass ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n        }\n\n    };\n\n    var CircleMixin = {\n\n        getEditorClass: function getEditorClass(tools) {\n            return tools && tools.options.circleEditorClass ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n        }\n\n    };\n\n    var keepEditable = function keepEditable() {\n        // Make sure you can remove/readd an editable layer.\n        this.on('add', this._onEditableAdd);\n    };\n\n    var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat; // <=> 1.1 compat.\n\n\n    if (L.Polyline) {\n        L.Polyline.include(EditableMixin);\n        L.Polyline.include(PolylineMixin);\n        L.Polyline.addInitHook(keepEditable);\n    }\n    if (L.Polygon) {\n        L.Polygon.include(EditableMixin);\n        L.Polygon.include(PolygonMixin);\n    }\n    if (L.Marker) {\n        L.Marker.include(EditableMixin);\n        L.Marker.include(MarkerMixin);\n        L.Marker.addInitHook(keepEditable);\n    }\n    if (L.Rectangle) {\n        L.Rectangle.include(EditableMixin);\n        L.Rectangle.include(RectangleMixin);\n    }\n    if (L.Circle) {\n        L.Circle.include(EditableMixin);\n        L.Circle.include(CircleMixin);\n    }\n\n    L.LatLng.prototype.update = function (latlng) {\n        latlng = L.latLng(latlng);\n        this.lat = latlng.lat;\n        this.lng = latlng.lng;\n    };\n}, window);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"leaflet\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// Vue2LeafletEditable.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ab1e40ceaf21c8c66859","'use strict';\n(function (factory, window) {\n    /*globals define, module, require*/\n\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('leaflet'));\n    }\n\n    // attach your plugin to the global 'L' variable\n    if(typeof window !== 'undefined' && window.L){\n        factory(window.L);\n    }\n\n}(function (L) {\n    // 🍂miniclass CancelableEvent (Event objects)\n    // 🍂method cancel()\n    // Cancel any subsequent action.\n\n    // 🍂miniclass VertexEvent (Event objects)\n    // 🍂property vertex: VertexMarker\n    // The vertex that fires the event.\n\n    // 🍂miniclass ShapeEvent (Event objects)\n    // 🍂property shape: Array\n    // The shape (LatLngs array) subject of the action.\n\n    // 🍂miniclass CancelableVertexEvent (Event objects)\n    // 🍂inherits VertexEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass CancelableShapeEvent (Event objects)\n    // 🍂inherits ShapeEvent\n    // 🍂inherits CancelableEvent\n\n    // 🍂miniclass LayerEvent (Event objects)\n    // 🍂property layer: object\n    // The Layer (Marker, Polyline…) subject of the action.\n\n    // 🍂namespace Editable; 🍂class Editable; 🍂aka L.Editable\n    // Main edition handler. By default, it is attached to the map\n    // as `map.editTools` property.\n    // Leaflet.Editable is made to be fully extendable. You have three ways to customize\n    // the behaviour: using options, listening to events, or extending.\n    L.Editable = L.Evented.extend({\n\n        statics: {\n            FORWARD: 1,\n            BACKWARD: -1\n        },\n\n        options: {\n\n            // You can pass them when creating a map using the `editOptions` key.\n            // 🍂option zIndex: int = 1000\n            // The default zIndex of the editing tools.\n            zIndex: 1000,\n\n            // 🍂option polygonClass: class = L.Polygon\n            // Class to be used when creating a new Polygon.\n            polygonClass: L.Polygon,\n\n            // 🍂option polylineClass: class = L.Polyline\n            // Class to be used when creating a new Polyline.\n            polylineClass: L.Polyline,\n\n            // 🍂option markerClass: class = L.Marker\n            // Class to be used when creating a new Marker.\n            markerClass: L.Marker,\n\n            // 🍂option rectangleClass: class = L.Rectangle\n            // Class to be used when creating a new Rectangle.\n            rectangleClass: L.Rectangle,\n\n            // 🍂option circleClass: class = L.Circle\n            // Class to be used when creating a new Circle.\n            circleClass: L.Circle,\n\n            // 🍂option drawingCSSClass: string = 'leaflet-editable-drawing'\n            // CSS class to be added to the map container while drawing.\n            drawingCSSClass: 'leaflet-editable-drawing',\n\n            // 🍂option drawingCursor: const = 'crosshair'\n            // Cursor mode set to the map while drawing.\n            drawingCursor: 'crosshair',\n\n            // 🍂option editLayer: Layer = new L.LayerGroup()\n            // Layer used to store edit tools (vertex, line guide…).\n            editLayer: undefined,\n\n            // 🍂option featuresLayer: Layer = new L.LayerGroup()\n            // Default layer used to store drawn features (Marker, Polyline…).\n            featuresLayer: undefined,\n\n            // 🍂option polylineEditorClass: class = PolylineEditor\n            // Class to be used as Polyline editor.\n            polylineEditorClass: undefined,\n\n            // 🍂option polygonEditorClass: class = PolygonEditor\n            // Class to be used as Polygon editor.\n            polygonEditorClass: undefined,\n\n            // 🍂option markerEditorClass: class = MarkerEditor\n            // Class to be used as Marker editor.\n            markerEditorClass: undefined,\n\n            // 🍂option rectangleEditorClass: class = RectangleEditor\n            // Class to be used as Rectangle editor.\n            rectangleEditorClass: undefined,\n\n            // 🍂option circleEditorClass: class = CircleEditor\n            // Class to be used as Circle editor.\n            circleEditorClass: undefined,\n\n            // 🍂option lineGuideOptions: hash = {}\n            // Options to be passed to the line guides.\n            lineGuideOptions: {},\n\n            // 🍂option skipMiddleMarkers: boolean = false\n            // Set this to true if you don't want middle markers.\n            skipMiddleMarkers: false\n\n        },\n\n        initialize: function (map, options) {\n            L.setOptions(this, options);\n            this._lastZIndex = this.options.zIndex;\n            this.map = map;\n            this.editLayer = this.createEditLayer();\n            this.featuresLayer = this.createFeaturesLayer();\n            this.forwardLineGuide = this.createLineGuide();\n            this.backwardLineGuide = this.createLineGuide();\n        },\n\n        fireAndForward: function (type, e) {\n            e = e || {};\n            e.editTools = this;\n            this.fire(type, e);\n            this.map.fire(type, e);\n        },\n\n        createLineGuide: function () {\n            var options = L.extend({dashArray: '5,10', weight: 1, interactive: false}, this.options.lineGuideOptions);\n            return L.polyline([], options);\n        },\n\n        createVertexIcon: function (options) {\n            return L.Browser.mobile && L.Browser.touch ? new L.Editable.TouchVertexIcon(options) : new L.Editable.VertexIcon(options);\n        },\n\n        createEditLayer: function () {\n            return this.options.editLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        createFeaturesLayer: function () {\n            return this.options.featuresLayer || new L.LayerGroup().addTo(this.map);\n        },\n\n        moveForwardLineGuide: function (latlng) {\n            if (this.forwardLineGuide._latlngs.length) {\n                this.forwardLineGuide._latlngs[1] = latlng;\n                this.forwardLineGuide._bounds.extend(latlng);\n                this.forwardLineGuide.redraw();\n            }\n        },\n\n        moveBackwardLineGuide: function (latlng) {\n            if (this.backwardLineGuide._latlngs.length) {\n                this.backwardLineGuide._latlngs[1] = latlng;\n                this.backwardLineGuide._bounds.extend(latlng);\n                this.backwardLineGuide.redraw();\n            }\n        },\n\n        anchorForwardLineGuide: function (latlng) {\n            this.forwardLineGuide._latlngs[0] = latlng;\n            this.forwardLineGuide._bounds.extend(latlng);\n            this.forwardLineGuide.redraw();\n        },\n\n        anchorBackwardLineGuide: function (latlng) {\n            this.backwardLineGuide._latlngs[0] = latlng;\n            this.backwardLineGuide._bounds.extend(latlng);\n            this.backwardLineGuide.redraw();\n        },\n\n        attachForwardLineGuide: function () {\n            this.editLayer.addLayer(this.forwardLineGuide);\n        },\n\n        attachBackwardLineGuide: function () {\n            this.editLayer.addLayer(this.backwardLineGuide);\n        },\n\n        detachForwardLineGuide: function () {\n            this.forwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.forwardLineGuide);\n        },\n\n        detachBackwardLineGuide: function () {\n            this.backwardLineGuide.setLatLngs([]);\n            this.editLayer.removeLayer(this.backwardLineGuide);\n        },\n\n        blockEvents: function () {\n            // Hack: force map not to listen to other layers events while drawing.\n            if (!this._oldTargets) {\n                this._oldTargets = this.map._targets;\n                this.map._targets = {};\n            }\n        },\n\n        unblockEvents: function () {\n            if (this._oldTargets) {\n                // Reset, but keep targets created while drawing.\n                this.map._targets = L.extend(this.map._targets, this._oldTargets);\n                delete this._oldTargets;\n            }\n        },\n\n        registerForDrawing: function (editor) {\n            if (this._drawingEditor) this.unregisterForDrawing(this._drawingEditor);\n            this.blockEvents();\n            editor.reset();  // Make sure editor tools still receive events.\n            this._drawingEditor = editor;\n            this.map.on('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.on('mousedown', this.onMousedown, this);\n            this.map.on('mouseup', this.onMouseup, this);\n            L.DomUtil.addClass(this.map._container, this.options.drawingCSSClass);\n            this.defaultMapCursor = this.map._container.style.cursor;\n            this.map._container.style.cursor = this.options.drawingCursor;\n        },\n\n        unregisterForDrawing: function (editor) {\n            this.unblockEvents();\n            L.DomUtil.removeClass(this.map._container, this.options.drawingCSSClass);\n            this.map._container.style.cursor = this.defaultMapCursor;\n            editor = editor || this._drawingEditor;\n            if (!editor) return;\n            this.map.off('mousemove touchmove', editor.onDrawingMouseMove, editor);\n            this.map.off('mousedown', this.onMousedown, this);\n            this.map.off('mouseup', this.onMouseup, this);\n            if (editor !== this._drawingEditor) return;\n            delete this._drawingEditor;\n            if (editor._drawing) editor.cancelDrawing();\n        },\n\n        onMousedown: function (e) {\n            if (e.originalEvent.which != 1) return;\n            this._mouseDown = e;\n            this._drawingEditor.onDrawingMouseDown(e);\n        },\n\n        onMouseup: function (e) {\n            if (this._mouseDown) {\n                var editor = this._drawingEditor,\n                    mouseDown = this._mouseDown;\n                this._mouseDown = null;\n                editor.onDrawingMouseUp(e);\n                if (this._drawingEditor !== editor) return;  // onDrawingMouseUp may call unregisterFromDrawing.\n                var origin = L.point(mouseDown.originalEvent.clientX, mouseDown.originalEvent.clientY);\n                var distance = L.point(e.originalEvent.clientX, e.originalEvent.clientY).distanceTo(origin);\n                if (Math.abs(distance) < 9 * (window.devicePixelRatio || 1)) this._drawingEditor.onDrawingClick(e);\n            }\n        },\n\n        // 🍂section Public methods\n        // You will generally access them by the `map.editTools`\n        // instance:\n        //\n        // `map.editTools.startPolyline();`\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing.\n        drawing: function () {\n            return this._drawingEditor && this._drawingEditor.drawing();\n        },\n\n        // 🍂method stopDrawing()\n        // When you need to stop any ongoing drawing, without needing to know which editor is active.\n        stopDrawing: function () {\n            this.unregisterForDrawing();\n        },\n\n        // 🍂method commitDrawing()\n        // When you need to commit any ongoing drawing, without needing to know which editor is active.\n        commitDrawing: function (e) {\n            if (!this._drawingEditor) return;\n            this._drawingEditor.commitDrawing(e);\n        },\n\n        connectCreatedToMap: function (layer) {\n            return this.featuresLayer.addLayer(layer);\n        },\n\n        // 🍂method startPolyline(latlng: L.LatLng, options: hash): L.Polyline\n        // Start drawing a Polyline. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polyline class constructor.\n        startPolyline: function (latlng, options) {\n            var line = this.createPolyline([], options);\n            line.enableEdit(this.map).newShape(latlng);\n            return line;\n        },\n\n        // 🍂method startPolygon(latlng: L.LatLng, options: hash): L.Polygon\n        // Start drawing a Polygon. If `latlng` is given, a first point will be added. In any case, continuing on user click.\n        // If `options` is given, it will be passed to the Polygon class constructor.\n        startPolygon: function (latlng, options) {\n            var polygon = this.createPolygon([], options);\n            polygon.enableEdit(this.map).newShape(latlng);\n            return polygon;\n        },\n\n        // 🍂method startMarker(latlng: L.LatLng, options: hash): L.Marker\n        // Start adding a Marker. If `latlng` is given, the Marker will be shown first at this point.\n        // In any case, it will follow the user mouse, and will have a final `latlng` on next click (or touch).\n        // If `options` is given, it will be passed to the Marker class constructor.\n        startMarker: function (latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var marker = this.createMarker(latlng, options);\n            marker.enableEdit(this.map).startDrawing();\n            return marker;\n        },\n\n        // 🍂method startRectangle(latlng: L.LatLng, options: hash): L.Rectangle\n        // Start drawing a Rectangle. If `latlng` is given, the Rectangle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Rectangle class constructor.\n        startRectangle: function(latlng, options) {\n            var corner = latlng || L.latLng([0, 0]);\n            var bounds = new L.LatLngBounds(corner, corner);\n            var rectangle = this.createRectangle(bounds, options);\n            rectangle.enableEdit(this.map).startDrawing();\n            return rectangle;\n        },\n\n        // 🍂method startCircle(latlng: L.LatLng, options: hash): L.Circle\n        // Start drawing a Circle. If `latlng` is given, the Circle anchor will be added. In any case, continuing on user drag.\n        // If `options` is given, it will be passed to the Circle class constructor.\n        startCircle: function (latlng, options) {\n            latlng = latlng || this.map.getCenter().clone();\n            var circle = this.createCircle(latlng, options);\n            circle.enableEdit(this.map).startDrawing();\n            return circle;\n        },\n\n        startHole: function (editor, latlng) {\n            editor.newHole(latlng);\n        },\n\n        createLayer: function (klass, latlngs, options) {\n            options = L.Util.extend({editOptions: {editTools: this}}, options);\n            var layer = new klass(latlngs, options);\n            // 🍂namespace Editable\n            // 🍂event editable:created: LayerEvent\n            // Fired when a new feature (Marker, Polyline…) is created.\n            this.fireAndForward('editable:created', {layer: layer});\n            return layer;\n        },\n\n        createPolyline: function (latlngs, options) {\n            return this.createLayer(options && options.polylineClass || this.options.polylineClass, latlngs, options);\n        },\n\n        createPolygon: function (latlngs, options) {\n            return this.createLayer(options && options.polygonClass || this.options.polygonClass, latlngs, options);\n        },\n\n        createMarker: function (latlng, options) {\n            return this.createLayer(options && options.markerClass || this.options.markerClass, latlng, options);\n        },\n\n        createRectangle: function (bounds, options) {\n            return this.createLayer(options && options.rectangleClass || this.options.rectangleClass, bounds, options);\n        },\n\n        createCircle: function (latlng, options) {\n            return this.createLayer(options && options.circleClass || this.options.circleClass, latlng, options);\n        }\n\n    });\n\n    L.extend(L.Editable, {\n\n        makeCancellable: function (e) {\n            e.cancel = function () {\n                e._cancelled = true;\n            };\n        }\n\n    });\n\n    // 🍂namespace Map; 🍂class Map\n    // Leaflet.Editable add options and events to the `L.Map` object.\n    // See `Editable` events for the list of events fired on the Map.\n    // 🍂example\n    //\n    // ```js\n    // var map = L.map('map', {\n    //  editable: true,\n    //  editOptions: {\n    //    …\n    // }\n    // });\n    // ```\n    // 🍂section Editable Map Options\n    L.Map.mergeOptions({\n\n        // 🍂namespace Map\n        // 🍂section Map Options\n        // 🍂option editToolsClass: class = L.Editable\n        // Class to be used as vertex, for path editing.\n        editToolsClass: L.Editable,\n\n        // 🍂option editable: boolean = false\n        // Whether to create a L.Editable instance at map init.\n        editable: false,\n\n        // 🍂option editOptions: hash = {}\n        // Options to pass to L.Editable when instantiating.\n        editOptions: {}\n\n    });\n\n    L.Map.addInitHook(function () {\n\n        this.whenReady(function () {\n            if (this.options.editable) {\n                this.editTools = new this.options.editToolsClass(this, this.options.editOptions);\n            }\n        });\n\n    });\n\n    L.Editable.VertexIcon = L.DivIcon.extend({\n\n        options: {\n            iconSize: new L.Point(8, 8)\n        }\n\n    });\n\n    L.Editable.TouchVertexIcon = L.Editable.VertexIcon.extend({\n\n        options: {\n            iconSize: new L.Point(20, 20)\n        }\n\n    });\n\n\n    // 🍂namespace Editable; 🍂class VertexMarker; Handler for dragging path vertices.\n    L.Editable.VertexMarker = L.Marker.extend({\n\n        options: {\n            draggable: true,\n            className: 'leaflet-div-icon leaflet-vertex-icon'\n        },\n\n\n        // 🍂section Public methods\n        // The marker used to handle path vertex. You will usually interact with a `VertexMarker`\n        // instance when listening for events like `editable:vertex:ctrlclick`.\n\n        initialize: function (latlng, latlngs, editor, options) {\n            // We don't use this._latlng, because on drag Leaflet replace it while\n            // we want to keep reference.\n            this.latlng = latlng;\n            this.latlngs = latlngs;\n            this.editor = editor;\n            L.Marker.prototype.initialize.call(this, latlng, options);\n            this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n            this.latlng.__vertex = this;\n            this.editor.editLayer.addLayer(this);\n            this.setZIndexOffset(editor.tools._lastZIndex + 1);\n        },\n\n        onAdd: function (map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            this.on('drag', this.onDrag);\n            this.on('dragstart', this.onDragStart);\n            this.on('dragend', this.onDragEnd);\n            this.on('mouseup', this.onMouseup);\n            this.on('click', this.onClick);\n            this.on('contextmenu', this.onContextMenu);\n            this.on('mousedown touchstart', this.onMouseDown);\n            this.on('mouseover', this.onMouseOver);\n            this.on('mouseout', this.onMouseOut);\n            this.addMiddleMarkers();\n        },\n\n        onRemove: function (map) {\n            if (this.middleMarker) this.middleMarker.delete();\n            delete this.latlng.__vertex;\n            this.off('drag', this.onDrag);\n            this.off('dragstart', this.onDragStart);\n            this.off('dragend', this.onDragEnd);\n            this.off('mouseup', this.onMouseup);\n            this.off('click', this.onClick);\n            this.off('contextmenu', this.onContextMenu);\n            this.off('mousedown touchstart', this.onMouseDown);\n            this.off('mouseover', this.onMouseOver);\n            this.off('mouseout', this.onMouseOut);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onDrag: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDrag(e);\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this._map.layerPointToLatLng(iconPos);\n            this.latlng.update(latlng);\n            this._latlng = this.latlng;  // Push back to Leaflet our reference.\n            this.editor.refresh();\n            if (this.middleMarker) this.middleMarker.updateLatLng();\n            var next = this.getNext();\n            if (next && next.middleMarker) next.middleMarker.updateLatLng();\n        },\n\n        onDragStart: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragStart(e);\n        },\n\n        onDragEnd: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerDragEnd(e);\n        },\n\n        onClick: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerClick(e);\n        },\n\n        onMouseup: function (e) {\n            L.DomEvent.stop(e);\n            e.vertex = this;\n            this.editor.map.fire('mouseup', e);\n        },\n\n        onContextMenu: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerContextMenu(e);\n        },\n\n        onMouseDown: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseDown(e);\n        },\n\n        onMouseOver: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOver(e);\n        },\n\n        onMouseOut: function (e) {\n            e.vertex = this;\n            this.editor.onVertexMarkerMouseOut(e);\n        },\n\n        // 🍂method delete()\n        // Delete a vertex and the related LatLng.\n        delete: function () {\n            var next = this.getNext();  // Compute before changing latlng\n            this.latlngs.splice(this.getIndex(), 1);\n            this.editor.editLayer.removeLayer(this);\n            this.editor.onVertexDeleted({latlng: this.latlng, vertex: this});\n            if (!this.latlngs.length) this.editor.deleteShape(this.latlngs);\n            if (next) next.resetMiddleMarker();\n            this.editor.refresh();\n        },\n\n        // 🍂method getIndex(): int\n        // Get the index of the current vertex among others of the same LatLngs group.\n        getIndex: function () {\n            return this.latlngs.indexOf(this.latlng);\n        },\n\n        // 🍂method getLastIndex(): int\n        // Get last vertex index of the LatLngs group of the current vertex.\n        getLastIndex: function () {\n            return this.latlngs.length - 1;\n        },\n\n        // 🍂method getPrevious(): VertexMarker\n        // Get the previous VertexMarker in the same LatLngs group.\n        getPrevious: function () {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                previousIndex = index - 1;\n            if (index === 0 && this.editor.CLOSED) previousIndex = this.getLastIndex();\n            var previous = this.latlngs[previousIndex];\n            if (previous) return previous.__vertex;\n        },\n\n        // 🍂method getNext(): VertexMarker\n        // Get the next VertexMarker in the same LatLngs group.\n        getNext: function () {\n            if (this.latlngs.length < 2) return;\n            var index = this.getIndex(),\n                nextIndex = index + 1;\n            if (index === this.getLastIndex() && this.editor.CLOSED) nextIndex = 0;\n            var next = this.latlngs[nextIndex];\n            if (next) return next.__vertex;\n        },\n\n        addMiddleMarker: function (previous) {\n            if (!this.editor.hasMiddleMarkers()) return;\n            previous = previous || this.getPrevious();\n            if (previous && !this.middleMarker) this.middleMarker = this.editor.addMiddleMarker(previous, this, this.latlngs, this.editor);\n        },\n\n        addMiddleMarkers: function () {\n            if (!this.editor.hasMiddleMarkers()) return;\n            var previous = this.getPrevious();\n            if (previous) this.addMiddleMarker(previous);\n            var next = this.getNext();\n            if (next) next.resetMiddleMarker();\n        },\n\n        resetMiddleMarker: function () {\n            if (this.middleMarker) this.middleMarker.delete();\n            this.addMiddleMarker();\n        },\n\n        // 🍂method split()\n        // Split the vertex LatLngs group at its index, if possible.\n        split: function () {\n            if (!this.editor.splitShape) return;  // Only for PolylineEditor\n            this.editor.splitShape(this.latlngs, this.getIndex());\n        },\n\n        // 🍂method continue()\n        // Continue the vertex LatLngs from this vertex. Only active for first and last vertices of a Polyline.\n        continue: function () {\n            if (!this.editor.continueBackward) return;  // Only for PolylineEditor\n            var index = this.getIndex();\n            if (index === 0) this.editor.continueBackward(this.latlngs);\n            else if (index === this.getLastIndex()) this.editor.continueForward(this.latlngs);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option vertexMarkerClass: class = VertexMarker\n        // Class to be used as vertex, for path editing.\n        vertexMarkerClass: L.Editable.VertexMarker\n\n    });\n\n    L.Editable.MiddleMarker = L.Marker.extend({\n\n        options: {\n            opacity: 0.5,\n            className: 'leaflet-div-icon leaflet-middle-icon',\n            draggable: true\n        },\n\n        initialize: function (left, right, latlngs, editor, options) {\n            this.left = left;\n            this.right = right;\n            this.editor = editor;\n            this.latlngs = latlngs;\n            L.Marker.prototype.initialize.call(this, this.computeLatLng(), options);\n            this._opacity = this.options.opacity;\n            this.options.icon = this.editor.tools.createVertexIcon({className: this.options.className});\n            this.editor.editLayer.addLayer(this);\n            this.setVisibility();\n        },\n\n        setVisibility: function () {\n            var leftPoint = this._map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this._map.latLngToContainerPoint(this.right.latlng),\n                size = L.point(this.options.icon.options.iconSize);\n            if (leftPoint.distanceTo(rightPoint) < size.x * 3) this.hide();\n            else this.show();\n        },\n\n        show: function () {\n            this.setOpacity(this._opacity);\n        },\n\n        hide: function () {\n            this.setOpacity(0);\n        },\n\n        updateLatLng: function () {\n            this.setLatLng(this.computeLatLng());\n            this.setVisibility();\n        },\n\n        computeLatLng: function () {\n            var leftPoint = this.editor.map.latLngToContainerPoint(this.left.latlng),\n                rightPoint = this.editor.map.latLngToContainerPoint(this.right.latlng),\n                y = (leftPoint.y + rightPoint.y) / 2,\n                x = (leftPoint.x + rightPoint.x) / 2;\n            return this.editor.map.containerPointToLatLng([x, y]);\n        },\n\n        onAdd: function (map) {\n            L.Marker.prototype.onAdd.call(this, map);\n            L.DomEvent.on(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.on('zoomend', this.setVisibility, this);\n        },\n\n        onRemove: function (map) {\n            delete this.right.middleMarker;\n            L.DomEvent.off(this._icon, 'mousedown touchstart', this.onMouseDown, this);\n            map.off('zoomend', this.setVisibility, this);\n            L.Marker.prototype.onRemove.call(this, map);\n        },\n\n        onMouseDown: function (e) {\n            var iconPos = L.DomUtil.getPosition(this._icon),\n                latlng = this.editor.map.layerPointToLatLng(iconPos);\n            e = {\n                originalEvent: e,\n                latlng: latlng\n            };\n            if (this.options.opacity === 0) return;\n            L.Editable.makeCancellable(e);\n            this.editor.onMiddleMarkerMouseDown(e);\n            if (e._cancelled) return;\n            this.latlngs.splice(this.index(), 0, e.latlng);\n            this.editor.refresh();\n            var icon = this._icon;\n            var marker = this.editor.addVertexMarker(e.latlng, this.latlngs);\n            this.editor.onNewVertex(marker);\n            /* Hack to workaround browser not firing touchend when element is no more on DOM */\n            var parent = marker._icon.parentNode;\n            parent.removeChild(marker._icon);\n            marker._icon = icon;\n            parent.appendChild(marker._icon);\n            marker._initIcon();\n            marker._initInteraction();\n            marker.setOpacity(1);\n            /* End hack */\n            // Transfer ongoing dragging to real marker\n            L.Draggable._dragging = false;\n            marker.dragging._draggable._onDown(e.originalEvent);\n            this.delete();\n        },\n\n        delete: function () {\n            this.editor.editLayer.removeLayer(this);\n        },\n\n        index: function () {\n            return this.latlngs.indexOf(this.right.latlng);\n        }\n\n    });\n\n    L.Editable.mergeOptions({\n\n        // 🍂namespace Editable\n        // 🍂option middleMarkerClass: class = VertexMarker\n        // Class to be used as middle vertex, pulled by the user to create a new point in the middle of a path.\n        middleMarkerClass: L.Editable.MiddleMarker\n\n    });\n\n    // 🍂namespace Editable; 🍂class BaseEditor; 🍂aka L.Editable.BaseEditor\n    // When editing a feature (Marker, Polyline…), an editor is attached to it. This\n    // editor basically knows how to handle the edition.\n    L.Editable.BaseEditor = L.Handler.extend({\n\n        initialize: function (map, feature, options) {\n            L.setOptions(this, options);\n            this.map = map;\n            this.feature = feature;\n            this.feature.editor = this;\n            this.editLayer = new L.LayerGroup();\n            this.tools = this.options.editTools || map.editTools;\n        },\n\n        // 🍂method enable(): this\n        // Set up the drawing tools for the feature to be editable.\n        addHooks: function () {\n            if (this.isConnected()) this.onFeatureAdd();\n            else this.feature.once('add', this.onFeatureAdd, this);\n            this.onEnable();\n            this.feature.on(this._getEvents(), this);\n        },\n\n        // 🍂method disable(): this\n        // Remove the drawing tools for the feature.\n        removeHooks: function () {\n            this.feature.off(this._getEvents(), this);\n            if (this.feature.dragging) this.feature.dragging.disable();\n            this.editLayer.clearLayers();\n            this.tools.editLayer.removeLayer(this.editLayer);\n            this.onDisable();\n            if (this._drawing) this.cancelDrawing();\n        },\n\n        // 🍂method drawing(): boolean\n        // Return true if any drawing action is ongoing with this editor.\n        drawing: function () {\n            return !!this._drawing;\n        },\n\n        reset: function () {},\n\n        onFeatureAdd: function () {\n            this.tools.editLayer.addLayer(this.editLayer);\n            if (this.feature.dragging) this.feature.dragging.enable();\n        },\n\n        hasMiddleMarkers: function () {\n            return !this.options.skipMiddleMarkers && !this.tools.options.skipMiddleMarkers;\n        },\n\n        fireAndForward: function (type, e) {\n            e = e || {};\n            e.layer = this.feature;\n            this.feature.fire(type, e);\n            this.tools.fireAndForward(type, e);\n        },\n\n        onEnable: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:enable: Event\n            // Fired when an existing feature is ready to be edited.\n            this.fireAndForward('editable:enable');\n        },\n\n        onDisable: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:disable: Event\n            // Fired when an existing feature is not ready anymore to be edited.\n            this.fireAndForward('editable:disable');\n        },\n\n        onEditing: function () {\n            // 🍂namespace Editable\n            // 🍂event editable:editing: Event\n            // Fired as soon as any change is made to the feature geometry.\n            this.fireAndForward('editable:editing');\n        },\n\n        onStartDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:start: Event\n            // Fired when a feature is to be drawn.\n            this.fireAndForward('editable:drawing:start');\n        },\n\n        onEndDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:end: Event\n            // Fired when a feature is not drawn anymore.\n            this.fireAndForward('editable:drawing:end');\n        },\n\n        onCancelDrawing: function () {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:cancel: Event\n            // Fired when user cancel drawing while a feature is being drawn.\n            this.fireAndForward('editable:drawing:cancel');\n        },\n\n        onCommitDrawing: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:commit: Event\n            // Fired when user finish drawing a feature.\n            this.fireAndForward('editable:drawing:commit', e);\n        },\n\n        onDrawingMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mousedown: Event\n            // Fired when user `mousedown` while drawing.\n            this.fireAndForward('editable:drawing:mousedown', e);\n        },\n\n        onDrawingMouseUp: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:mouseup: Event\n            // Fired when user `mouseup` while drawing.\n            this.fireAndForward('editable:drawing:mouseup', e);\n        },\n\n        startDrawing: function () {\n            if (!this._drawing) this._drawing = L.Editable.FORWARD;\n            this.tools.registerForDrawing(this);\n            this.onStartDrawing();\n        },\n\n        commitDrawing: function (e) {\n            this.onCommitDrawing(e);\n            this.endDrawing();\n        },\n\n        cancelDrawing: function () {\n            // If called during a vertex drag, the vertex will be removed before\n            // the mouseup fires on it. This is a workaround. Maybe better fix is\n            // To have L.Draggable reset it's status on disable (Leaflet side).\n            L.Draggable._dragging = false;\n            this.onCancelDrawing();\n            this.endDrawing();\n        },\n\n        endDrawing: function () {\n            this._drawing = false;\n            this.tools.unregisterForDrawing(this);\n            this.onEndDrawing();\n        },\n\n        onDrawingClick: function (e) {\n            if (!this.drawing()) return;\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:click: CancelableEvent\n            // Fired when user `click` while drawing, before any internal action is being processed.\n            this.fireAndForward('editable:drawing:click', e);\n            if (e._cancelled) return;\n            if (!this.isConnected()) this.connect(e);\n            this.processDrawingClick(e);\n        },\n\n        isConnected: function () {\n            return this.map.hasLayer(this.feature);\n        },\n\n        connect: function () {\n            this.tools.connectCreatedToMap(this.feature);\n            this.tools.editLayer.addLayer(this.editLayer);\n        },\n\n        onMove: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:move: Event\n            // Fired when `move` mouse while drawing, while dragging a marker, and while dragging a vertex.\n            this.fireAndForward('editable:drawing:move', e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            this.onMove(e);\n        },\n\n        _getEvents: function () {\n            return {\n                dragstart: this.onDragStart,\n                drag: this.onDrag,\n                dragend: this.onDragEnd,\n                remove: this.disable\n            };\n        },\n\n        onDragStart: function (e) {\n            this.onEditing();\n            // 🍂namespace Editable\n            // 🍂event editable:dragstart: Event\n            // Fired before a path feature is dragged.\n            this.fireAndForward('editable:dragstart', e);\n        },\n\n        onDrag: function (e) {\n            this.onMove(e);\n            // 🍂namespace Editable\n            // 🍂event editable:drag: Event\n            // Fired when a path feature is being dragged.\n            this.fireAndForward('editable:drag', e);\n        },\n\n        onDragEnd: function (e) {\n            // 🍂namespace Editable\n            // 🍂event editable:dragend: Event\n            // Fired after a path feature has been dragged.\n            this.fireAndForward('editable:dragend', e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class MarkerEditor; 🍂aka L.Editable.MarkerEditor\n    // 🍂inherits BaseEditor\n    // Editor for Marker.\n    L.Editable.MarkerEditor = L.Editable.BaseEditor.extend({\n\n        onDrawingMouseMove: function (e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) this.feature.setLatLng(e.latlng);\n        },\n\n        processDrawingClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Drawing events\n            // 🍂event editable:drawing:clicked: Event\n            // Fired when user `click` while drawing, after all internal actions.\n            this.fireAndForward('editable:drawing:clicked', e);\n            this.commitDrawing(e);\n        },\n\n        connect: function (e) {\n            // On touch, the latlng has not been updated because there is\n            // no mousemove.\n            if (e) this.feature._latlng = e.latlng;\n            L.Editable.BaseEditor.prototype.connect.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PathEditor; 🍂aka L.Editable.PathEditor\n    // 🍂inherits BaseEditor\n    // Base class for all path editors.\n    L.Editable.PathEditor = L.Editable.BaseEditor.extend({\n\n        CLOSED: false,\n        MIN_VERTEX: 2,\n\n        addHooks: function () {\n            L.Editable.BaseEditor.prototype.addHooks.call(this);\n            if (this.feature) this.initVertexMarkers();\n            return this;\n        },\n\n        initVertexMarkers: function (latlngs) {\n            if (!this.enabled()) return;\n            latlngs = latlngs || this.getLatLngs();\n            if (isFlat(latlngs)) this.addVertexMarkers(latlngs);\n            else for (var i = 0; i < latlngs.length; i++) this.initVertexMarkers(latlngs[i]);\n        },\n\n        getLatLngs: function () {\n            return this.feature.getLatLngs();\n        },\n\n        // 🍂method reset()\n        // Rebuild edit elements (Vertex, MiddleMarker, etc.).\n        reset: function () {\n            this.editLayer.clearLayers();\n            this.initVertexMarkers();\n        },\n\n        addVertexMarker: function (latlng, latlngs) {\n            return new this.tools.options.vertexMarkerClass(latlng, latlngs, this);\n        },\n\n        onNewVertex: function (vertex) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:new: VertexEvent\n            // Fired when a new vertex is created.\n            this.fireAndForward('editable:vertex:new', {latlng: vertex.latlng, vertex: vertex});\n        },\n\n        addVertexMarkers: function (latlngs) {\n            for (var i = 0; i < latlngs.length; i++) {\n                this.addVertexMarker(latlngs[i], latlngs);\n            }\n        },\n\n        refreshVertexMarkers: function (latlngs) {\n            latlngs = latlngs || this.getDefaultLatLngs();\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].__vertex.update();\n            }\n        },\n\n        addMiddleMarker: function (left, right, latlngs) {\n            return new this.tools.options.middleMarkerClass(left, right, latlngs, this);\n        },\n\n        onVertexMarkerClick: function (e) {\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:click: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex, before any internal action is being processed.\n            this.fireAndForward('editable:vertex:click', e);\n            if (e._cancelled) return;\n            if (this.tools.drawing() && this.tools._drawingEditor !== this) return;\n            var index = e.vertex.getIndex(), commit;\n            if (e.originalEvent.ctrlKey) {\n                this.onVertexMarkerCtrlClick(e);\n            } else if (e.originalEvent.altKey) {\n                this.onVertexMarkerAltClick(e);\n            } else if (e.originalEvent.shiftKey) {\n                this.onVertexMarkerShiftClick(e);\n            } else if (e.originalEvent.metaKey) {\n                this.onVertexMarkerMetaKeyClick(e);\n            } else if (index === e.vertex.getLastIndex() && this._drawing === L.Editable.FORWARD) {\n                if (index >= this.MIN_VERTEX - 1) commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.BACKWARD && this._drawnLatLngs.length >= this.MIN_VERTEX) {\n                commit = true;\n            } else if (index === 0 && this._drawing === L.Editable.FORWARD && this._drawnLatLngs.length >= this.MIN_VERTEX && this.CLOSED) {\n                commit = true;  // Allow to close on first point also for polygons\n            } else {\n                this.onVertexRawMarkerClick(e);\n            }\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:clicked: VertexEvent\n            // Fired when a `click` is issued on a vertex, after all internal actions.\n            this.fireAndForward('editable:vertex:clicked', e);\n            if (commit) this.commitDrawing(e);\n        },\n\n        onVertexRawMarkerClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:rawclick: CancelableVertexEvent\n            // Fired when a `click` is issued on a vertex without any special key and without being in drawing mode.\n            this.fireAndForward('editable:vertex:rawclick', e);\n            if (e._cancelled) return;\n            if (!this.vertexCanBeDeleted(e.vertex)) return;\n            e.vertex.delete();\n        },\n\n        vertexCanBeDeleted: function (vertex) {\n            return vertex.latlngs.length > this.MIN_VERTEX;\n        },\n\n        onVertexDeleted: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:deleted: VertexEvent\n            // Fired after a vertex has been deleted by user.\n            this.fireAndForward('editable:vertex:deleted', e);\n        },\n\n        onVertexMarkerCtrlClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:ctrlclick: VertexEvent\n            // Fired when a `click` with `ctrlKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:ctrlclick', e);\n        },\n\n        onVertexMarkerShiftClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:shiftclick: VertexEvent\n            // Fired when a `click` with `shiftKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:shiftclick', e);\n        },\n\n        onVertexMarkerMetaKeyClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:metakeyclick: VertexEvent\n            // Fired when a `click` with `metaKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:metakeyclick', e);\n        },\n\n        onVertexMarkerAltClick: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:altclick: VertexEvent\n            // Fired when a `click` with `altKey` is issued on a vertex.\n            this.fireAndForward('editable:vertex:altclick', e);\n        },\n\n        onVertexMarkerContextMenu: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:contextmenu: VertexEvent\n            // Fired when a `contextmenu` is issued on a vertex.\n            this.fireAndForward('editable:vertex:contextmenu', e);\n        },\n\n        onVertexMarkerMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mousedown: VertexEvent\n            // Fired when user `mousedown` a vertex.\n            this.fireAndForward('editable:vertex:mousedown', e);\n        },\n\n        onVertexMarkerMouseOver: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseover: VertexEvent\n            // Fired when a user's mouse enters the vertex\n            this.fireAndForward('editable:vertex:mouseover', e);\n        },\n\n        onVertexMarkerMouseOut: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:mouseout: VertexEvent\n            // Fired when a user's mouse leaves the vertex\n            this.fireAndForward('editable:vertex:mouseout', e);\n        },\n\n        onMiddleMarkerMouseDown: function (e) {\n            // 🍂namespace Editable\n            // 🍂section MiddleMarker events\n            // 🍂event editable:middlemarker:mousedown: VertexEvent\n            // Fired when user `mousedown` a middle marker.\n            this.fireAndForward('editable:middlemarker:mousedown', e);\n        },\n\n        onVertexMarkerDrag: function (e) {\n            this.onMove(e);\n            if (this.feature._bounds) this.extendBounds(e);\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:drag: VertexEvent\n            // Fired when a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:drag', e);\n        },\n\n        onVertexMarkerDragStart: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragstart: VertexEvent\n            // Fired before a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragstart', e);\n        },\n\n        onVertexMarkerDragEnd: function (e) {\n            // 🍂namespace Editable\n            // 🍂section Vertex events\n            // 🍂event editable:vertex:dragend: VertexEvent\n            // Fired after a vertex is dragged by user.\n            this.fireAndForward('editable:vertex:dragend', e);\n        },\n\n        setDrawnLatLngs: function (latlngs) {\n            this._drawnLatLngs = latlngs || this.getDefaultLatLngs();\n        },\n\n        startDrawing: function () {\n            if (!this._drawnLatLngs) this.setDrawnLatLngs();\n            L.Editable.BaseEditor.prototype.startDrawing.call(this);\n        },\n\n        startDrawingForward: function () {\n            this.startDrawing();\n        },\n\n        endDrawing: function () {\n            this.tools.detachForwardLineGuide();\n            this.tools.detachBackwardLineGuide();\n            if (this._drawnLatLngs && this._drawnLatLngs.length < this.MIN_VERTEX) this.deleteShape(this._drawnLatLngs);\n            L.Editable.BaseEditor.prototype.endDrawing.call(this);\n            delete this._drawnLatLngs;\n        },\n\n        addLatLng: function (latlng) {\n            if (this._drawing === L.Editable.FORWARD) this._drawnLatLngs.push(latlng);\n            else this._drawnLatLngs.unshift(latlng);\n            this.feature._bounds.extend(latlng);\n            var vertex = this.addVertexMarker(latlng, this._drawnLatLngs);\n            this.onNewVertex(vertex);\n            this.refresh();\n        },\n\n        newPointForward: function (latlng) {\n            this.addLatLng(latlng);\n            this.tools.attachForwardLineGuide();\n            this.tools.anchorForwardLineGuide(latlng);\n        },\n\n        newPointBackward: function (latlng) {\n            this.addLatLng(latlng);\n            this.tools.anchorBackwardLineGuide(latlng);\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method push()\n        // Programmatically add a point while drawing.\n        push: function (latlng) {\n            if (!latlng) return console.error('L.Editable.PathEditor.push expect a valid latlng as parameter');\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(latlng);\n            else this.newPointBackward(latlng);\n        },\n\n        removeLatLng: function (latlng) {\n            latlng.__vertex.delete();\n            this.refresh();\n        },\n\n        // 🍂method pop(): L.LatLng or null\n        // Programmatically remove last point (if any) while drawing.\n        pop: function () {\n            if (this._drawnLatLngs.length <= 1) return;\n            var latlng;\n            if (this._drawing === L.Editable.FORWARD) latlng = this._drawnLatLngs[this._drawnLatLngs.length - 1];\n            else latlng = this._drawnLatLngs[0];\n            this.removeLatLng(latlng);\n            if (this._drawing === L.Editable.FORWARD) this.tools.anchorForwardLineGuide(this._drawnLatLngs[this._drawnLatLngs.length - 1]);\n            else this.tools.anchorForwardLineGuide(this._drawnLatLngs[0]);\n            return latlng;\n        },\n\n        processDrawingClick: function (e) {\n            if (e.vertex && e.vertex.editor === this) return;\n            if (this._drawing === L.Editable.FORWARD) this.newPointForward(e.latlng);\n            else this.newPointBackward(e.latlng);\n            this.fireAndForward('editable:drawing:clicked', e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            L.Editable.BaseEditor.prototype.onDrawingMouseMove.call(this, e);\n            if (this._drawing) {\n                this.tools.moveForwardLineGuide(e.latlng);\n                this.tools.moveBackwardLineGuide(e.latlng);\n            }\n        },\n\n        refresh: function () {\n            this.feature.redraw();\n            this.onEditing();\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method newShape(latlng?: L.LatLng)\n        // Add a new shape (Polyline, Polygon) in a multi, and setup up drawing tools to draw it;\n        // if optional `latlng` is given, start a path at this point.\n        newShape: function (latlng) {\n            var shape = this.addNewEmptyShape();\n            if (!shape) return;\n            this.setDrawnLatLngs(shape[0] || shape);  // Polygon or polyline\n            this.startDrawingForward();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:new: ShapeEvent\n            // Fired when a new shape is created in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:new', {shape: shape});\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        deleteShape: function (shape, latlngs) {\n            var e = {shape: shape};\n            L.Editable.makeCancellable(e);\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:delete: CancelableShapeEvent\n            // Fired before a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:delete', e);\n            if (e._cancelled) return;\n            shape = this._deleteShape(shape, latlngs);\n            if (this.ensureNotFlat) this.ensureNotFlat();  // Polygon.\n            this.feature.setLatLngs(this.getLatLngs());  // Force bounds reset.\n            this.refresh();\n            this.reset();\n            // 🍂namespace Editable\n            // 🍂section Shape events\n            // 🍂event editable:shape:deleted: ShapeEvent\n            // Fired after a new shape is deleted in a multi (Polygon or Polyline).\n            this.fireAndForward('editable:shape:deleted', {shape: shape});\n            return shape;\n        },\n\n        _deleteShape: function (shape, latlngs) {\n            latlngs = latlngs || this.getLatLngs();\n            if (!latlngs.length) return;\n            var self = this,\n                inplaceDelete = function (latlngs, shape) {\n                    // Called when deleting a flat latlngs\n                    shape = latlngs.splice(0, Number.MAX_VALUE);\n                    return shape;\n                },\n                spliceDelete = function (latlngs, shape) {\n                    // Called when removing a latlngs inside an array\n                    latlngs.splice(latlngs.indexOf(shape), 1);\n                    if (!latlngs.length) self._deleteShape(latlngs);\n                    return shape;\n                };\n            if (latlngs === shape) return inplaceDelete(latlngs, shape);\n            for (var i = 0; i < latlngs.length; i++) {\n                if (latlngs[i] === shape) return spliceDelete(latlngs, shape);\n                else if (latlngs[i].indexOf(shape) !== -1) return spliceDelete(latlngs[i], shape);\n            }\n        },\n\n        // 🍂namespace PathEditor\n        // 🍂method deleteShapeAt(latlng: L.LatLng): Array\n        // Remove a path shape at the given `latlng`.\n        deleteShapeAt: function (latlng) {\n            var shape = this.feature.shapeAt(latlng);\n            if (shape) return this.deleteShape(shape);\n        },\n\n        // 🍂method appendShape(shape: Array)\n        // Append a new shape to the Polygon or Polyline.\n        appendShape: function (shape) {\n            this.insertShape(shape);\n        },\n\n        // 🍂method prependShape(shape: Array)\n        // Prepend a new shape to the Polygon or Polyline.\n        prependShape: function (shape) {\n            this.insertShape(shape, 0);\n        },\n\n        // 🍂method insertShape(shape: Array, index: int)\n        // Insert a new shape to the Polygon or Polyline at given index (default is to append).\n        insertShape: function (shape, index) {\n            this.ensureMulti();\n            shape = this.formatShape(shape);\n            if (typeof index === 'undefined') index = this.feature._latlngs.length;\n            this.feature._latlngs.splice(index, 0, shape);\n            this.feature.redraw();\n            if (this._enabled) this.reset();\n        },\n\n        extendBounds: function (e) {\n            this.feature._bounds.extend(e.vertex.latlng);\n        },\n\n        onDragStart: function (e) {\n            this.editLayer.clearLayers();\n            L.Editable.BaseEditor.prototype.onDragStart.call(this, e);\n        },\n\n        onDragEnd: function (e) {\n            this.initVertexMarkers();\n            L.Editable.BaseEditor.prototype.onDragEnd.call(this, e);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolylineEditor; 🍂aka L.Editable.PolylineEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolylineEditor = L.Editable.PathEditor.extend({\n\n        startDrawingBackward: function () {\n            this._drawing = L.Editable.BACKWARD;\n            this.startDrawing();\n        },\n\n        // 🍂method continueBackward(latlngs?: Array)\n        // Set up drawing tools to continue the line backward.\n        continueBackward: function (latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachBackwardLineGuide();\n                this.tools.anchorBackwardLineGuide(latlngs[0]);\n            }\n            this.startDrawingBackward();\n        },\n\n        // 🍂method continueForward(latlngs?: Array)\n        // Set up drawing tools to continue the line forward.\n        continueForward: function (latlngs) {\n            if (this.drawing()) return;\n            latlngs = latlngs || this.getDefaultLatLngs();\n            this.setDrawnLatLngs(latlngs);\n            if (latlngs.length > 0) {\n                this.tools.attachForwardLineGuide();\n                this.tools.anchorForwardLineGuide(latlngs[latlngs.length - 1]);\n            }\n            this.startDrawingForward();\n        },\n\n        getDefaultLatLngs: function (latlngs) {\n            latlngs = latlngs || this.feature._latlngs;\n            if (!latlngs.length || latlngs[0] instanceof L.LatLng) return latlngs;\n            else return this.getDefaultLatLngs(latlngs[0]);\n        },\n\n        ensureMulti: function () {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs)) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        addNewEmptyShape: function () {\n            if (this.feature._latlngs.length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        formatShape: function (shape) {\n            if (isFlat(shape)) return shape;\n            else if (shape[0]) return this.formatShape(shape[0]);\n        },\n\n        // 🍂method splitShape(latlngs?: Array, index: int)\n        // Split the given `latlngs` shape at index `index` and integrate new shape in instance `latlngs`.\n        splitShape: function (shape, index) {\n            if (!index || index >= shape.length - 1) return;\n            this.ensureMulti();\n            var shapeIndex = this.feature._latlngs.indexOf(shape);\n            if (shapeIndex === -1) return;\n            var first = shape.slice(0, index + 1),\n                second = shape.slice(index);\n            // We deal with reference, we don't want twice the same latlng around.\n            second[0] = L.latLng(second[0].lat, second[0].lng, second[0].alt);\n            this.feature._latlngs.splice(shapeIndex, 1, first, second);\n            this.refresh();\n            this.reset();\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class PolygonEditor; 🍂aka L.Editable.PolygonEditor\n    // 🍂inherits PathEditor\n    L.Editable.PolygonEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 3,\n\n        newPointForward: function (latlng) {\n            L.Editable.PathEditor.prototype.newPointForward.call(this, latlng);\n            if (!this.tools.backwardLineGuide._latlngs.length) this.tools.anchorBackwardLineGuide(latlng);\n            if (this._drawnLatLngs.length === 2) this.tools.attachBackwardLineGuide();\n        },\n\n        addNewEmptyHole: function (latlng) {\n            this.ensureNotFlat();\n            var latlngs = this.feature.shapeAt(latlng);\n            if (!latlngs) return;\n            var holes = [];\n            latlngs.push(holes);\n            return holes;\n        },\n\n        // 🍂method newHole(latlng?: L.LatLng, index: int)\n        // Set up drawing tools for creating a new hole on the Polygon. If the `latlng` param is given, a first point is created.\n        newHole: function (latlng) {\n            var holes = this.addNewEmptyHole(latlng);\n            if (!holes) return;\n            this.setDrawnLatLngs(holes);\n            this.startDrawingForward();\n            if (latlng) this.newPointForward(latlng);\n        },\n\n        addNewEmptyShape: function () {\n            if (this.feature._latlngs.length && this.feature._latlngs[0].length) {\n                var shape = [];\n                this.appendShape(shape);\n                return shape;\n            } else {\n                return this.feature._latlngs;\n            }\n        },\n\n        ensureMulti: function () {\n            if (this.feature._latlngs.length && isFlat(this.feature._latlngs[0])) {\n                this.feature._latlngs = [this.feature._latlngs];\n            }\n        },\n\n        ensureNotFlat: function () {\n            if (!this.feature._latlngs.length || isFlat(this.feature._latlngs)) this.feature._latlngs = [this.feature._latlngs];\n        },\n\n        vertexCanBeDeleted: function (vertex) {\n            var parent = this.feature.parentShape(vertex.latlngs),\n                idx = L.Util.indexOf(parent, vertex.latlngs);\n            if (idx > 0) return true;  // Holes can be totally deleted without removing the layer itself.\n            return L.Editable.PathEditor.prototype.vertexCanBeDeleted.call(this, vertex);\n        },\n\n        getDefaultLatLngs: function () {\n            if (!this.feature._latlngs.length) this.feature._latlngs.push([]);\n            return this.feature._latlngs[0];\n        },\n\n        formatShape: function (shape) {\n            // [[1, 2], [3, 4]] => must be nested\n            // [] => must be nested\n            // [[]] => is already nested\n            if (isFlat(shape) && (!shape[0] || shape[0].length !== 0)) return [shape];\n            else return shape;\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class RectangleEditor; 🍂aka L.Editable.RectangleEditor\n    // 🍂inherits PathEditor\n    L.Editable.RectangleEditor = L.Editable.PathEditor.extend({\n\n        CLOSED: true,\n        MIN_VERTEX: 4,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        extendBounds: function (e) {\n            var index = e.vertex.getIndex(),\n                next = e.vertex.getNext(),\n                previous = e.vertex.getPrevious(),\n                oppositeIndex = (index + 2) % 4,\n                opposite = e.vertex.latlngs[oppositeIndex],\n                bounds = new L.LatLngBounds(e.latlng, opposite);\n            // Update latlngs by hand to preserve order.\n            previous.latlng.update([e.latlng.lat, opposite.lng]);\n            next.latlng.update([opposite.lat, e.latlng.lng]);\n            this.updateBounds(bounds);\n            this.refreshVertexMarkers();\n        },\n\n        onDrawingMouseDown: function (e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this.connect();\n            var latlngs = this.getDefaultLatLngs();\n            // L.Polygon._convertLatLngs removes last latlng if it equals first point,\n            // which is the case here as all latlngs are [0, 0]\n            if (latlngs.length === 3) latlngs.push(e.latlng);\n            var bounds = new L.LatLngBounds(e.latlng, e.latlng);\n            this.updateBounds(bounds);\n            this.updateLatLngs(bounds);\n            this.refresh();\n            this.reset();\n            // Stop dragging map.\n            // L.Draggable has two workflows:\n            // - mousedown => mousemove => mouseup\n            // - touchstart => touchmove => touchend\n            // Problem: L.Map.Tap does not allow us to listen to touchstart, so we only\n            // can deal with mousedown, but then when in a touch device, we are dealing with\n            // simulated events (actually simulated by L.Map.Tap), which are no more taken\n            // into account by L.Draggable.\n            // Ref.: https://github.com/Leaflet/Leaflet.Editable/issues/103\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the bottom right corner.\n            // Should we refine which corner will handle the drag according to\n            // drag direction?\n            latlngs[3].__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function (e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n\n        getDefaultLatLngs: function (latlngs) {\n            return latlngs || this.feature._latlngs[0];\n        },\n\n        updateBounds: function (bounds) {\n            this.feature._bounds = bounds;\n        },\n\n        updateLatLngs: function (bounds) {\n            var latlngs = this.getDefaultLatLngs(),\n                newLatlngs = this.feature._boundsToLatLngs(bounds);\n            // Keep references.\n            for (var i = 0; i < latlngs.length; i++) {\n                latlngs[i].update(newLatlngs[i]);\n            }\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class CircleEditor; 🍂aka L.Editable.CircleEditor\n    // 🍂inherits PathEditor\n    L.Editable.CircleEditor = L.Editable.PathEditor.extend({\n\n        MIN_VERTEX: 2,\n\n        options: {\n            skipMiddleMarkers: true\n        },\n\n        initialize: function (map, feature, options) {\n            L.Editable.PathEditor.prototype.initialize.call(this, map, feature, options);\n            this._resizeLatLng = this.computeResizeLatLng();\n        },\n\n        computeResizeLatLng: function () {\n            // While circle is not added to the map, _radius is not set.\n            var delta = (this.feature._radius || this.feature._mRadius) * Math.cos(Math.PI / 4),\n                point = this.map.project(this.feature._latlng);\n            return this.map.unproject([point.x + delta, point.y - delta]);\n        },\n\n        updateResizeLatLng: function () {\n            this._resizeLatLng.update(this.computeResizeLatLng());\n            this._resizeLatLng.__vertex.update();\n        },\n\n        getLatLngs: function () {\n            return [this.feature._latlng, this._resizeLatLng];\n        },\n\n        getDefaultLatLngs: function () {\n            return this.getLatLngs();\n        },\n\n        onVertexMarkerDrag: function (e) {\n            if (e.vertex.getIndex() === 1) this.resize(e);\n            else this.updateResizeLatLng(e);\n            L.Editable.PathEditor.prototype.onVertexMarkerDrag.call(this, e);\n        },\n\n        resize: function (e) {\n            var radius = this.feature._latlng.distanceTo(e.latlng);\n            this.feature.setRadius(radius);\n        },\n\n        onDrawingMouseDown: function (e) {\n            L.Editable.PathEditor.prototype.onDrawingMouseDown.call(this, e);\n            this._resizeLatLng.update(e.latlng);\n            this.feature._latlng.update(e.latlng);\n            this.connect();\n            // Stop dragging map.\n            e.originalEvent._simulated = false;\n            this.map.dragging._draggable._onUp(e.originalEvent);\n            // Now transfer ongoing drag action to the radius handler.\n            this._resizeLatLng.__vertex.dragging._draggable._onDown(e.originalEvent);\n        },\n\n        onDrawingMouseUp: function (e) {\n            this.commitDrawing(e);\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseUp.call(this, e);\n        },\n\n        onDrawingMouseMove: function (e) {\n            e.originalEvent._simulated = false;\n            L.Editable.PathEditor.prototype.onDrawingMouseMove.call(this, e);\n        },\n\n        onDrag: function (e) {\n            L.Editable.PathEditor.prototype.onDrag.call(this, e);\n            this.feature.dragging.updateLatLng(this._resizeLatLng);\n        }\n\n    });\n\n    // 🍂namespace Editable; 🍂class EditableMixin\n    // `EditableMixin` is included to `L.Polyline`, `L.Polygon`, `L.Rectangle`, `L.Circle`\n    // and `L.Marker`. It adds some methods to them.\n    // *When editing is enabled, the editor is accessible on the instance with the\n    // `editor` property.*\n    var EditableMixin = {\n\n        createEditor: function (map) {\n            map = map || this._map;\n            var tools = (this.options.editOptions || {}).editTools || map.editTools;\n            if (!tools) throw Error('Unable to detect Editable instance.');\n            var Klass = this.options.editorClass || this.getEditorClass(tools);\n            return new Klass(map, this, this.options.editOptions);\n        },\n\n        // 🍂method enableEdit(map?: L.Map): this.editor\n        // Enable editing, by creating an editor if not existing, and then calling `enable` on it.\n        enableEdit: function (map) {\n            if (!this.editor) this.createEditor(map);\n            this.editor.enable();\n            return this.editor;\n        },\n\n        // 🍂method editEnabled(): boolean\n        // Return true if current instance has an editor attached, and this editor is enabled.\n        editEnabled: function () {\n            return this.editor && this.editor.enabled();\n        },\n\n        // 🍂method disableEdit()\n        // Disable editing, also remove the editor property reference.\n        disableEdit: function () {\n            if (this.editor) {\n                this.editor.disable();\n                delete this.editor;\n            }\n        },\n\n        // 🍂method toggleEdit()\n        // Enable or disable editing, according to current status.\n        toggleEdit: function () {\n            if (this.editEnabled()) this.disableEdit();\n            else this.enableEdit();\n        },\n\n        _onEditableAdd: function () {\n            if (this.editor) this.enableEdit();\n        }\n\n    };\n\n    var PolylineMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.polylineEditorClass) ? tools.options.polylineEditorClass : L.Editable.PolylineEditor;\n        },\n\n        shapeAt: function (latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;\n            else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n            else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i])) return latlngs[i];\n            return shape;\n        },\n\n        isInLatLngs: function (l, latlngs) {\n            if (!latlngs) return false;\n            var i, k, len, part = [], p,\n                w = this._clickTolerance();\n            this._projectLatlngs(latlngs, part, this._pxBounds);\n            part = part[0];\n            p = this._map.latLngToLayerPoint(l);\n\n            if (!this._pxBounds.contains(p)) { return false; }\n            for (i = 1, len = part.length, k = 0; i < len; k = i++) {\n\n                if (L.LineUtil.pointToSegmentDistance(p, part[k], part[i]) <= w) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n    };\n\n    var PolygonMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.polygonEditorClass) ? tools.options.polygonEditorClass : L.Editable.PolygonEditor;\n        },\n\n        shapeAt: function (latlng, latlngs) {\n            // We can have those cases:\n            // - latlngs are just a flat array of latlngs, use this\n            // - latlngs is an array of arrays of latlngs, this is a simple polygon (maybe with holes), use the first\n            // - latlngs is an array of arrays of arrays, this is a multi, loop over\n            var shape = null;\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs.length) return shape;\n            else if (isFlat(latlngs) && this.isInLatLngs(latlng, latlngs)) shape = latlngs;\n            else if (isFlat(latlngs[0]) && this.isInLatLngs(latlng, latlngs[0])) shape = latlngs;\n            else for (var i = 0; i < latlngs.length; i++) if (this.isInLatLngs(latlng, latlngs[i][0])) return latlngs[i];\n            return shape;\n        },\n\n        isInLatLngs: function (l, latlngs) {\n            var inside = false, l1, l2, j, k, len2;\n\n            for (j = 0, len2 = latlngs.length, k = len2 - 1; j < len2; k = j++) {\n                l1 = latlngs[j];\n                l2 = latlngs[k];\n\n                if (((l1.lat > l.lat) !== (l2.lat > l.lat)) &&\n                        (l.lng < (l2.lng - l1.lng) * (l.lat - l1.lat) / (l2.lat - l1.lat) + l1.lng)) {\n                    inside = !inside;\n                }\n            }\n\n            return inside;\n        },\n\n        parentShape: function (shape, latlngs) {\n            latlngs = latlngs || this._latlngs;\n            if (!latlngs) return;\n            var idx = L.Util.indexOf(latlngs, shape);\n            if (idx !== -1) return latlngs;\n            for (var i = 0; i < latlngs.length; i++) {\n                idx = L.Util.indexOf(latlngs[i], shape);\n                if (idx !== -1) return latlngs[i];\n            }\n        }\n\n    };\n\n\n    var MarkerMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.markerEditorClass) ? tools.options.markerEditorClass : L.Editable.MarkerEditor;\n        }\n\n    };\n\n    var RectangleMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.rectangleEditorClass) ? tools.options.rectangleEditorClass : L.Editable.RectangleEditor;\n        }\n\n    };\n\n    var CircleMixin = {\n\n        getEditorClass: function (tools) {\n            return (tools && tools.options.circleEditorClass) ? tools.options.circleEditorClass : L.Editable.CircleEditor;\n        }\n\n    };\n\n    var keepEditable = function () {\n        // Make sure you can remove/readd an editable layer.\n        this.on('add', this._onEditableAdd);\n    };\n\n    var isFlat = L.LineUtil.isFlat || L.LineUtil._flat || L.Polyline._flat;  // <=> 1.1 compat.\n\n\n    if (L.Polyline) {\n        L.Polyline.include(EditableMixin);\n        L.Polyline.include(PolylineMixin);\n        L.Polyline.addInitHook(keepEditable);\n    }\n    if (L.Polygon) {\n        L.Polygon.include(EditableMixin);\n        L.Polygon.include(PolygonMixin);\n    }\n    if (L.Marker) {\n        L.Marker.include(EditableMixin);\n        L.Marker.include(MarkerMixin);\n        L.Marker.addInitHook(keepEditable);\n    }\n    if (L.Rectangle) {\n        L.Rectangle.include(EditableMixin);\n        L.Rectangle.include(RectangleMixin);\n    }\n    if (L.Circle) {\n        L.Circle.include(EditableMixin);\n        L.Circle.include(CircleMixin);\n    }\n\n    L.LatLng.prototype.update = function (latlng) {\n        latlng = L.latLng(latlng);\n        this.lat = latlng.lat;\n        this.lng = latlng.lng;\n    }\n\n}, window));\n\n\n\n// WEBPACK FOOTER //\n// ./Vue2LeafletEditable.js","module.exports = require(\"leaflet\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"leaflet\"\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}